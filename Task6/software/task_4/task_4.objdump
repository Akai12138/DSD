
task_4.elf:     file format elf32-littlenios2
task_4.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x000112c4 memsz 0x000112c4 flags r-x
    LOAD off    0x000122e4 vaddr 0x008112e4 paddr 0x00812dd0 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000148bc vaddr 0x008148bc paddr 0x008148bc align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010d64  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000033c  00810fa8  00810fa8  00011fa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  008112e4  00812dd0  000122e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  008148bc  008148bc  000148bc  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00814a1c  00814a1c  00013dd0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013dd0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fd8  00000000  00000000  00013df8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002514e  00000000  00000000  00014dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009b20  00000000  00000000  00039f1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c365  00000000  00000000  00043a3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002310  00000000  00000000  0004fda4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003c14  00000000  00000000  000520b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001a3b6  00000000  00000000  00055cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00070080  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001d30  00000000  00000000  000700b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000750ca  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000750cd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000750d0  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000750d1  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000750d2  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000750d6  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000750da  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000750de  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000750e7  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000750f0  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000006  00000000  00000000  000750f9  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002d  00000000  00000000  000750ff  2**0
                  CONTENTS, READONLY
 29 .jdi          000049b3  00000000  00000000  0007512c  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003b1a8  00000000  00000000  00079adf  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
00810fa8 l    d  .rodata	00000000 .rodata
008112e4 l    d  .rwdata	00000000 .rwdata
008148bc l    d  .bss	00000000 .bss
00814a1c l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task_4_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 task_4.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00811132 l     O .rodata	00000010 zeroes.4404
008059ac l     F .text	000000bc __sbprintf
00811142 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00805bbc l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008076ec l     F .text	00000008 __fp_unlock
00807700 l     F .text	0000019c __sinit.part.1
0080789c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
008112e4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00811728 l     O .rwdata	00000020 lc_ctype_charset
00811708 l     O .rwdata	00000020 lc_message_charset
00811748 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00811174 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080a1b4 l     F .text	000000fc __sprint_r.part.0
008112a8 l     O .rodata	00000010 blanks.4348
00811298 l     O .rodata	00000010 zeroes.4349
0080b740 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080e654 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080e760 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080e78c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080e878 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080e958 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080ea44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
0080ec54 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00812dc0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080eea0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080ef54 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080f088 l     F .text	00000034 alt_dev_reg
00811d30 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080f37c l     F .text	0000020c altera_avalon_jtag_uart_irq
0080f588 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080fbc0 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080fe28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081029c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
008103dc l     F .text	0000003c alt_get_errno
00810418 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
008148f0 g     O .bss	00000004 alt_instruction_exception_handler
00809cc4 g     F .text	00000074 _mprec_log10
00809db0 g     F .text	0000008c __any_on
0080c198 g     F .text	00000054 _isatty_r
00811180 g     O .rodata	00000028 __mprec_tinytens
0080eb54 g     F .text	0000007c alt_main
0081491c g     O .bss	00000100 alt_irq
0080c1ec g     F .text	00000060 _lseek_r
00812dd0 g       *ABS*	00000000 __flash_rwdata_start
0080e1f8 g     F .text	00000088 .hidden __eqdf2
00814a1c g       *ABS*	00000000 __alt_heap_start
0080375c g     F .text	0000003c printf
0080cac4 g     F .text	0000009c _wcrtomb_r
00809fdc g     F .text	0000005c __sseek
00807a3c g     F .text	00000010 __sinit
0080c96c g     F .text	00000140 __swbuf_r
00808048 g     F .text	0000007c _setlocale_r
008078a4 g     F .text	00000068 __sfmoreglue
0080ebf4 g     F .text	00000024 __malloc_unlock
00800dc0 g     F .text	00000440 .hidden __divsf3
0080c24c g     F .text	0000015c memmove
00807a24 g     F .text	00000018 _cleanup
00808e40 g     F .text	000000a8 _Balloc
00801ae0 g     F .text	00000070 .hidden __fixsfsi
0080ec18 g     F .text	0000003c alt_putstr
0080e280 g     F .text	000000dc .hidden __gtdf2
008107d4 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080eedc g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080bc80 g     F .text	0000005c _fstat_r
008148d4 g     O .bss	00000004 errno
00809f58 g     F .text	00000008 __seofread
008148dc g     O .bss	00000004 alt_argv
0081ad90 g       *ABS*	00000000 _gp
008015fc g     F .text	000004e4 .hidden __subsf3
00811bb0 g     O .rwdata	00000180 alt_fd_list
008107f8 g     F .text	00000090 alt_find_dev
00808bd0 g     F .text	00000148 memcpy
008076f4 g     F .text	0000000c _cleanup_r
0080e4d0 g     F .text	000000dc .hidden __floatsidf
00810360 g     F .text	0000007c alt_io_redirect
0080e35c g     F .text	000000f4 .hidden __ltdf2
00810fa8 g       *ABS*	00000000 __DTOR_END__
00810ac4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00809e3c g     F .text	00000074 __fpclassifyd
00809c20 g     F .text	000000a4 __ratio
0080b724 g     F .text	0000001c __vfiprintf_internal
0080f780 g     F .text	0000021c altera_avalon_jtag_uart_read
0080372c g     F .text	00000030 _printf_r
0080d854 g     F .text	00000064 .hidden __udivsi3
0080e8b4 g     F .text	000000a4 isatty
008111d0 g     O .rodata	000000c8 __mprec_tens
008080c4 g     F .text	0000000c __locale_charset
00810a34 g     F .text	00000090 alt_icache_flush
008148d0 g     O .bss	00000004 __malloc_top_pad
00812d98 g     O .rwdata	00000004 __mb_cur_max
008080f4 g     F .text	0000000c _localeconv_r
0080bcdc g     F .text	000004bc __sfvwrite_r
0080924c g     F .text	0000003c __i2b
00809eb0 g     F .text	00000054 _sbrk_r
0080c3a8 g     F .text	00000060 _read_r
00812db8 g     O .rwdata	00000004 alt_max_fd
0080b974 g     F .text	000000f0 _fclose_r
008076bc g     F .text	00000030 fflush
008148cc g     O .bss	00000004 __malloc_max_sbrked_mem
00803410 g     F .text	00000110 .hidden __extendsfdf2
00801b50 g     F .text	000008ac .hidden __adddf3
008099c8 g     F .text	0000010c __b2d
0080d224 g     F .text	00000538 .hidden __umoddi3
0080ea80 g     F .text	000000d4 lseek
00812d90 g     O .rwdata	00000004 _global_impure_ptr
0080c408 g     F .text	00000564 _realloc_r
00814a1c g       *ABS*	00000000 __bss_end
008101ac g     F .text	000000f0 alt_iic_isr_register
008106cc g     F .text	00000108 alt_tick
0080ccac g     F .text	00000578 .hidden __udivdi3
0080bbdc g     F .text	00000024 _fputwc_r
008111a8 g     O .rodata	00000028 __mprec_bigtens
00809030 g     F .text	00000104 __s2b
0080e5ac g     F .text	000000a8 .hidden __floatunsidf
00809708 g     F .text	00000060 __mcmp
00807a5c g     F .text	00000018 __fp_lock_all
00810160 g     F .text	0000004c alt_ic_irq_enabled
00810630 g     F .text	0000009c alt_alarm_stop
008148e4 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
00811b88 g     O .rwdata	00000028 alt_dev_null
0080fde0 g     F .text	00000048 alt_dcache_flush_all
00809134 g     F .text	00000068 __hi0bits
0080e450 g     F .text	00000080 .hidden __fixdfsi
00812dd0 g       *ABS*	00000000 __ram_rwdata_end
00812db0 g     O .rwdata	00000008 alt_dev_list
0080ef90 g     F .text	000000f8 write
008112e4 g       *ABS*	00000000 __ram_rodata_end
0080e7c8 g     F .text	000000b0 fstat
0080e35c g     F .text	000000f4 .hidden __ledf2
00809480 g     F .text	00000140 __pow5mult
0080a2c8 g     F .text	0000145c ___vfiprintf_internal_r
008148c4 g     O .bss	00000004 __nlocale_changed
0080d8b8 g     F .text	00000058 .hidden __umodsi3
00814a1c g       *ABS*	00000000 end
0080f2bc g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00810fa8 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080fc38 g     F .text	0000007c alt_avalon_timer_sc_init
008036c8 g     F .text	00000064 .hidden __clzsi2
0080f99c g     F .text	00000224 altera_avalon_jtag_uart_write
00807a4c g     F .text	00000004 __sfp_lock_acquire
00808aec g     F .text	000000e4 memchr
00803798 g     F .text	000021f8 ___vfprintf_internal_r
00807bb0 g     F .text	00000310 _free_r
008080d0 g     F .text	00000010 __locale_mb_cur_max
00810df4 g     F .text	00000180 __call_exitprocs
008148c0 g     O .bss	00000004 __mlocale_changed
00812d9c g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
008148e8 g     O .bss	00000004 _alt_tick_rate
008095c0 g     F .text	00000148 __lshift
008148ec g     O .bss	00000004 _alt_nticks
0080ec90 g     F .text	000000fc read
0080f0f4 g     F .text	00000064 alt_sys_init
00810cdc g     F .text	00000118 __register_exitproc
00809288 g     F .text	000001f8 __multiply
0080f628 g     F .text	00000068 altera_avalon_jtag_uart_close
008112e4 g       *ABS*	00000000 __ram_rwdata_start
00810fa8 g       *ABS*	00000000 __ram_rodata_start
008148f4 g     O .bss	00000028 __malloc_current_mallinfo
00809ad4 g     F .text	0000014c __d2b
0080f158 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00810990 g     F .text	000000a4 alt_get_fd
0080b85c g     F .text	00000054 _close_r
00800290 g     F .text	000000bc generateVector
00810c60 g     F .text	0000007c memcmp
0080f218 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00814a1c g       *ABS*	00000000 __alt_stack_base
0080f268 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00805a68 g     F .text	00000154 __swsetup_r
0080d910 g     F .text	000008e8 .hidden __divdf3
0080790c g     F .text	00000118 __sfp
00809d38 g     F .text	00000078 __copybits
00811780 g     O .rwdata	00000408 __malloc_av_
00807a58 g     F .text	00000004 __sinit_lock_release
008023fc g     F .text	00000718 .hidden __muldf3
00809f04 g     F .text	00000054 __sread
00810888 g     F .text	00000108 alt_find_file
0080fe64 g     F .text	000000a4 alt_dev_llist_insert
0080ebd0 g     F .text	00000024 __malloc_lock
0080edf0 g     F .text	000000b0 sbrk
00807660 g     F .text	0000005c _fflush_r
0080b8b0 g     F .text	000000c4 _calloc_r
008148bc g       *ABS*	00000000 __bss_start
00808d18 g     F .text	00000128 memset
00800774 g     F .text	00000184 main
008148e0 g     O .bss	00000004 alt_envp
008148c8 g     O .bss	00000004 __malloc_max_total_mem
0080f1b8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080caac g     F .text	00000018 __swbuf
0080a038 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080ba64 g     F .text	00000014 fclose
00803520 g     F .text	000001a8 .hidden __truncdfsf2
00805dbc g     F .text	00001688 _dtoa_r
008082e0 g     F .text	0000080c _malloc_r
0080cc20 g     F .text	00000030 __ascii_wctomb
00812dbc g     O .rwdata	00000004 alt_errno
00807ec0 g     F .text	000000c4 _fwalk
0080d75c g     F .text	00000084 .hidden __divsi3
00807a8c g     F .text	00000124 _malloc_trim_r
00810fa8 g       *ABS*	00000000 __CTOR_END__
00801200 g     F .text	000003fc .hidden __mulsf3
0080a040 g     F .text	000000dc strcmp
00810fa8 g       *ABS*	00000000 __flash_rodata_start
00810fa8 g       *ABS*	00000000 __DTOR_LIST__
0080e1f8 g     F .text	00000088 .hidden __nedf2
0080f0bc g     F .text	00000038 alt_irq_init
0080ed8c g     F .text	00000064 alt_release_fd
00810fed g     O .rodata	00000100 .hidden __clz_tab
008148bc g     O .bss	00000004 _PathLocale
00810b60 g     F .text	00000014 atexit
0080034c g     F .text	00000428 sumVector
0080b7fc g     F .text	00000060 _write_r
00808100 g     F .text	00000018 setlocale
00812d94 g     O .rwdata	00000004 _impure_ptr
008148d8 g     O .bss	00000004 alt_argc
00807444 g     F .text	0000021c __sflush_r
0080ff68 g     F .text	00000060 _do_dtors
008080ec g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
00809964 g     F .text	00000064 __ulp
00807a74 g     F .text	00000018 __fp_unlock_all
00812da8 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00808118 g     F .text	0000000c localeconv
0080fffc g     F .text	00000050 alt_ic_isr_register
00812dd0 g       *ABS*	00000000 _edata
00814a1c g       *ABS*	00000000 _end
0080ba78 g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
0080f690 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00810bac g     F .text	0000009c _fputs_r
008100d4 g     F .text	0000008c alt_ic_irq_disable
00809f60 g     F .text	0000007c __swrite
00812da0 g     O .rwdata	00000004 __malloc_trim_threshold
008080e0 g     F .text	0000000c __locale_msgcharset
00810b74 g     F .text	00000038 exit
00807f84 g     F .text	000000c4 _fwalk_reent
00809768 g     F .text	000001fc __mdiff
0080d7e0 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00807a50 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00810f74 g     F .text	00000034 _exit
0080fcb4 g     F .text	0000012c alt_alarm_start
00808124 g     F .text	000001bc __smakebuf_r
0080a11c g     F .text	00000098 strlen
008104dc g     F .text	00000154 open
0080e280 g     F .text	000000dc .hidden __gedf2
00812da4 g     O .rwdata	00000004 __wctomb
0080a2b0 g     F .text	00000018 __sprint_r
0080ffc8 g     F .text	00000034 alt_icache_flush_all
00810c48 g     F .text	00000018 fputs
00812dc4 g     O .rwdata	00000004 alt_priority_mask
0081004c g     F .text	00000088 alt_ic_irq_enable
00805990 g     F .text	0000001c __vfprintf_internal
0080cc50 g     F .text	0000005c _wctomb_r
00802b14 g     F .text	000008fc .hidden __subdf3
0080919c g     F .text	000000b0 __lo0bits
00812dc8 g     O .rwdata	00000008 alt_alarm_list
0080ff08 g     F .text	00000060 _do_ctors
0080cb60 g     F .text	000000c0 wcrtomb
0080e690 g     F .text	000000d0 close
008008f8 g     F .text	000004c8 .hidden __addsf3
0080e9c0 g     F .text	00000084 alt_load
0080bc00 g     F .text	00000080 fputwc
00807a54 g     F .text	00000004 __sinit_lock_acquire
00808f10 g     F .text	00000120 __multadd
00808ee8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	00802074 	movhi	r2,129
  800140:	10924704 	addi	r2,r2,18716
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	00802074 	movhi	r2,129
  800158:	10924704 	addi	r2,r2,18716
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a6d817 	ldw	r2,-25760(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a6d817 	ldw	r2,-25760(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6ab6414 	ori	gp,gp,44432
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10922f14 	ori	r2,r2,18620

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18d28714 	ori	r3,r3,18972

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	080e9c00 	call	80e9c0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	080eb540 	call	80eb54 <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <generateVector>:
//#define RANDSEED 334


// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  800290:	defffb04 	addi	sp,sp,-20
  800294:	dfc00415 	stw	ra,16(sp)
  800298:	df000315 	stw	fp,12(sp)
  80029c:	dc000215 	stw	r16,8(sp)
  8002a0:	df000304 	addi	fp,sp,12
  8002a4:	e13ffe15 	stw	r4,-8(fp)
	int i;
	x[0] = 0;
  8002a8:	e0bffe17 	ldw	r2,-8(fp)
  8002ac:	10000015 	stw	zero,0(r2)
	for (i=1; i<N; i++)
  8002b0:	00800044 	movi	r2,1
  8002b4:	e0bffd15 	stw	r2,-12(fp)
  8002b8:	00001906 	br	800320 <generateVector+0x90>
		x[i] = x[i-1] + step;
  8002bc:	e0bffd17 	ldw	r2,-12(fp)
  8002c0:	1085883a 	add	r2,r2,r2
  8002c4:	1085883a 	add	r2,r2,r2
  8002c8:	1007883a 	mov	r3,r2
  8002cc:	e0bffe17 	ldw	r2,-8(fp)
  8002d0:	10e1883a 	add	r16,r2,r3
  8002d4:	e0fffd17 	ldw	r3,-12(fp)
  8002d8:	00900034 	movhi	r2,16384
  8002dc:	10bfffc4 	addi	r2,r2,-1
  8002e0:	1885883a 	add	r2,r3,r2
  8002e4:	1085883a 	add	r2,r2,r2
  8002e8:	1085883a 	add	r2,r2,r2
  8002ec:	1007883a 	mov	r3,r2
  8002f0:	e0bffe17 	ldw	r2,-8(fp)
  8002f4:	10c5883a 	add	r2,r2,r3
  8002f8:	10c00017 	ldw	r3,0(r2)
  8002fc:	014ea034 	movhi	r5,14976
  800300:	1809883a 	mov	r4,r3
  800304:	08008f80 	call	8008f8 <__addsf3>
  800308:	1007883a 	mov	r3,r2
  80030c:	1805883a 	mov	r2,r3
  800310:	80800015 	stw	r2,0(r16)
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++)
  800314:	e0bffd17 	ldw	r2,-12(fp)
  800318:	10800044 	addi	r2,r2,1
  80031c:	e0bffd15 	stw	r2,-12(fp)
  800320:	e0fffd17 	ldw	r3,-12(fp)
  800324:	00800134 	movhi	r2,4
  800328:	10bf0004 	addi	r2,r2,-1024
  80032c:	10ffe30e 	bge	r2,r3,8002bc <__alt_data_end+0xff8002bc>
		x[i] = x[i-1] + step;
}
  800330:	0001883a 	nop
  800334:	e6ffff04 	addi	sp,fp,-4
  800338:	dfc00217 	ldw	ra,8(sp)
  80033c:	df000117 	ldw	fp,4(sp)
  800340:	dc000017 	ldw	r16,0(sp)
  800344:	dec00304 	addi	sp,sp,12
  800348:	f800283a 	ret

0080034c <sumVector>:
//		sum += 0.5*x[i] + x[i]*x[i]*cosf((x[i]-128)*0.00781);
//	}
//	return sum;
//}

float sumVector(float x[], unsigned int M) {
  80034c:	defff504 	addi	sp,sp,-44
  800350:	dfc00a15 	stw	ra,40(sp)
  800354:	df000915 	stw	fp,36(sp)
  800358:	dc400815 	stw	r17,32(sp)
  80035c:	dc000715 	stw	r16,28(sp)
  800360:	df000904 	addi	fp,sp,36
  800364:	e13ffc15 	stw	r4,-16(fp)
  800368:	e17ffd15 	stw	r5,-12(fp)
    float result = 0;
  80036c:	e03ff715 	stw	zero,-36(fp)
    for (int i = 0; i < M; i++) {
  800370:	e03ff815 	stw	zero,-32(fp)
  800374:	0000f206 	br	800740 <sumVector+0x3f4>
        // Calculate the argument for the cosine function
        float argument = (x[i] - 128) * 0.0078125;
  800378:	e0bff817 	ldw	r2,-32(fp)
  80037c:	1085883a 	add	r2,r2,r2
  800380:	1085883a 	add	r2,r2,r2
  800384:	1007883a 	mov	r3,r2
  800388:	e0bffc17 	ldw	r2,-16(fp)
  80038c:	10c5883a 	add	r2,r2,r3
  800390:	10c00017 	ldw	r3,0(r2)
  800394:	0150c034 	movhi	r5,17152
  800398:	1809883a 	mov	r4,r3
  80039c:	08015fc0 	call	8015fc <__subsf3>
  8003a0:	1007883a 	mov	r3,r2
  8003a4:	1805883a 	mov	r2,r3
  8003a8:	014f0034 	movhi	r5,15360
  8003ac:	1009883a 	mov	r4,r2
  8003b0:	08012000 	call	801200 <__mulsf3>
  8003b4:	1007883a 	mov	r3,r2
  8003b8:	e0fff915 	stw	r3,-28(fp)
        // Extended Taylor expansion of cos(argument), up to the x^8 term
        float cosApprox = 1 - (argument * argument) * 0.5
  8003bc:	e17ff917 	ldw	r5,-28(fp)
  8003c0:	e13ff917 	ldw	r4,-28(fp)
  8003c4:	08012000 	call	801200 <__mulsf3>
  8003c8:	1007883a 	mov	r3,r2
  8003cc:	1805883a 	mov	r2,r3
  8003d0:	1009883a 	mov	r4,r2
  8003d4:	08034100 	call	803410 <__extendsfdf2>
  8003d8:	1011883a 	mov	r8,r2
  8003dc:	1813883a 	mov	r9,r3
  8003e0:	000d883a 	mov	r6,zero
  8003e4:	01cff834 	movhi	r7,16352
  8003e8:	4009883a 	mov	r4,r8
  8003ec:	480b883a 	mov	r5,r9
  8003f0:	08023fc0 	call	8023fc <__muldf3>
  8003f4:	1009883a 	mov	r4,r2
  8003f8:	180b883a 	mov	r5,r3
  8003fc:	2005883a 	mov	r2,r4
  800400:	2807883a 	mov	r3,r5
  800404:	100d883a 	mov	r6,r2
  800408:	180f883a 	mov	r7,r3
  80040c:	0009883a 	mov	r4,zero
  800410:	014ffc34 	movhi	r5,16368
  800414:	0802b140 	call	802b14 <__subdf3>
  800418:	1009883a 	mov	r4,r2
  80041c:	180b883a 	mov	r5,r3
  800420:	2021883a 	mov	r16,r4
  800424:	2823883a 	mov	r17,r5
                          + (argument * argument * argument * argument) * 0.0417
  800428:	e17ff917 	ldw	r5,-28(fp)
  80042c:	e13ff917 	ldw	r4,-28(fp)
  800430:	08012000 	call	801200 <__mulsf3>
  800434:	1007883a 	mov	r3,r2
  800438:	1805883a 	mov	r2,r3
  80043c:	e17ff917 	ldw	r5,-28(fp)
  800440:	1009883a 	mov	r4,r2
  800444:	08012000 	call	801200 <__mulsf3>
  800448:	1007883a 	mov	r3,r2
  80044c:	1805883a 	mov	r2,r3
  800450:	e17ff917 	ldw	r5,-28(fp)
  800454:	1009883a 	mov	r4,r2
  800458:	08012000 	call	801200 <__mulsf3>
  80045c:	1007883a 	mov	r3,r2
  800460:	1805883a 	mov	r2,r3
  800464:	1009883a 	mov	r4,r2
  800468:	08034100 	call	803410 <__extendsfdf2>
  80046c:	1011883a 	mov	r8,r2
  800470:	1813883a 	mov	r9,r3
  800474:	01b41f74 	movhi	r6,53373
  800478:	31a12d84 	addi	r6,r6,-31562
  80047c:	01cfe974 	movhi	r7,16293
  800480:	39d66cc4 	addi	r7,r7,22963
  800484:	4009883a 	mov	r4,r8
  800488:	480b883a 	mov	r5,r9
  80048c:	08023fc0 	call	8023fc <__muldf3>
  800490:	1009883a 	mov	r4,r2
  800494:	180b883a 	mov	r5,r3
  800498:	2005883a 	mov	r2,r4
  80049c:	2807883a 	mov	r3,r5
  8004a0:	100d883a 	mov	r6,r2
  8004a4:	180f883a 	mov	r7,r3
  8004a8:	8009883a 	mov	r4,r16
  8004ac:	880b883a 	mov	r5,r17
  8004b0:	0801b500 	call	801b50 <__adddf3>
  8004b4:	1009883a 	mov	r4,r2
  8004b8:	180b883a 	mov	r5,r3
  8004bc:	2021883a 	mov	r16,r4
  8004c0:	2823883a 	mov	r17,r5
						  - (argument * argument * argument * argument * argument * argument) * 0.00139;                          + (argument * argument * argument * argument * argument * argument * argument * argument) / 40320;
  8004c4:	e17ff917 	ldw	r5,-28(fp)
  8004c8:	e13ff917 	ldw	r4,-28(fp)
  8004cc:	08012000 	call	801200 <__mulsf3>
  8004d0:	1007883a 	mov	r3,r2
  8004d4:	1805883a 	mov	r2,r3
  8004d8:	e17ff917 	ldw	r5,-28(fp)
  8004dc:	1009883a 	mov	r4,r2
  8004e0:	08012000 	call	801200 <__mulsf3>
  8004e4:	1007883a 	mov	r3,r2
  8004e8:	1805883a 	mov	r2,r3
  8004ec:	e17ff917 	ldw	r5,-28(fp)
  8004f0:	1009883a 	mov	r4,r2
  8004f4:	08012000 	call	801200 <__mulsf3>
  8004f8:	1007883a 	mov	r3,r2
  8004fc:	1805883a 	mov	r2,r3
  800500:	e17ff917 	ldw	r5,-28(fp)
  800504:	1009883a 	mov	r4,r2
  800508:	08012000 	call	801200 <__mulsf3>
  80050c:	1007883a 	mov	r3,r2
  800510:	1805883a 	mov	r2,r3
  800514:	e17ff917 	ldw	r5,-28(fp)
  800518:	1009883a 	mov	r4,r2
  80051c:	08012000 	call	801200 <__mulsf3>
  800520:	1007883a 	mov	r3,r2
  800524:	1805883a 	mov	r2,r3
  800528:	1009883a 	mov	r4,r2
  80052c:	08034100 	call	803410 <__extendsfdf2>
  800530:	1011883a 	mov	r8,r2
  800534:	1813883a 	mov	r9,r3
  800538:	0188a9f4 	movhi	r6,8871
  80053c:	31bcfd44 	addi	r6,r6,-3083
  800540:	01cfd5f4 	movhi	r7,16215
  800544:	39f18544 	addi	r7,r7,-14827
  800548:	4009883a 	mov	r4,r8
  80054c:	480b883a 	mov	r5,r9
  800550:	08023fc0 	call	8023fc <__muldf3>
  800554:	1009883a 	mov	r4,r2
  800558:	180b883a 	mov	r5,r3
  80055c:	2005883a 	mov	r2,r4
  800560:	2807883a 	mov	r3,r5
  800564:	100d883a 	mov	r6,r2
  800568:	180f883a 	mov	r7,r3
  80056c:	8009883a 	mov	r4,r16
  800570:	880b883a 	mov	r5,r17
  800574:	0802b140 	call	802b14 <__subdf3>
  800578:	1009883a 	mov	r4,r2
  80057c:	180b883a 	mov	r5,r3
  800580:	2005883a 	mov	r2,r4
  800584:	2807883a 	mov	r3,r5
    float result = 0;
    for (int i = 0; i < M; i++) {
        // Calculate the argument for the cosine function
        float argument = (x[i] - 128) * 0.0078125;
        // Extended Taylor expansion of cos(argument), up to the x^8 term
        float cosApprox = 1 - (argument * argument) * 0.5
  800588:	1009883a 	mov	r4,r2
  80058c:	180b883a 	mov	r5,r3
  800590:	08035200 	call	803520 <__truncdfsf2>
  800594:	1007883a 	mov	r3,r2
  800598:	e0fffa15 	stw	r3,-24(fp)
                          + (argument * argument * argument * argument) * 0.0417
						  - (argument * argument * argument * argument * argument * argument) * 0.00139;                          + (argument * argument * argument * argument * argument * argument * argument * argument) / 40320;
  80059c:	e17ff917 	ldw	r5,-28(fp)
  8005a0:	e13ff917 	ldw	r4,-28(fp)
  8005a4:	08012000 	call	801200 <__mulsf3>
  8005a8:	1007883a 	mov	r3,r2
  8005ac:	1805883a 	mov	r2,r3
  8005b0:	e17ff917 	ldw	r5,-28(fp)
  8005b4:	1009883a 	mov	r4,r2
  8005b8:	08012000 	call	801200 <__mulsf3>
  8005bc:	1007883a 	mov	r3,r2
  8005c0:	1805883a 	mov	r2,r3
  8005c4:	e17ff917 	ldw	r5,-28(fp)
  8005c8:	1009883a 	mov	r4,r2
  8005cc:	08012000 	call	801200 <__mulsf3>
  8005d0:	1007883a 	mov	r3,r2
  8005d4:	1805883a 	mov	r2,r3
  8005d8:	e17ff917 	ldw	r5,-28(fp)
  8005dc:	1009883a 	mov	r4,r2
  8005e0:	08012000 	call	801200 <__mulsf3>
  8005e4:	1007883a 	mov	r3,r2
  8005e8:	1805883a 	mov	r2,r3
  8005ec:	e17ff917 	ldw	r5,-28(fp)
  8005f0:	1009883a 	mov	r4,r2
  8005f4:	08012000 	call	801200 <__mulsf3>
  8005f8:	1007883a 	mov	r3,r2
  8005fc:	1805883a 	mov	r2,r3
  800600:	e17ff917 	ldw	r5,-28(fp)
  800604:	1009883a 	mov	r4,r2
  800608:	08012000 	call	801200 <__mulsf3>
  80060c:	1007883a 	mov	r3,r2
  800610:	1805883a 	mov	r2,r3
  800614:	e17ff917 	ldw	r5,-28(fp)
  800618:	1009883a 	mov	r4,r2
  80061c:	08012000 	call	801200 <__mulsf3>
  800620:	1007883a 	mov	r3,r2
  800624:	1805883a 	mov	r2,r3

        // Using the approximation in the original formula
        float term = (0.5 * x[i]) + (x[i] * x[i] * cosApprox);
  800628:	e0bff817 	ldw	r2,-32(fp)
  80062c:	1085883a 	add	r2,r2,r2
  800630:	1085883a 	add	r2,r2,r2
  800634:	1007883a 	mov	r3,r2
  800638:	e0bffc17 	ldw	r2,-16(fp)
  80063c:	10c5883a 	add	r2,r2,r3
  800640:	10c00017 	ldw	r3,0(r2)
  800644:	1809883a 	mov	r4,r3
  800648:	08034100 	call	803410 <__extendsfdf2>
  80064c:	1011883a 	mov	r8,r2
  800650:	1813883a 	mov	r9,r3
  800654:	000d883a 	mov	r6,zero
  800658:	01cff834 	movhi	r7,16352
  80065c:	4009883a 	mov	r4,r8
  800660:	480b883a 	mov	r5,r9
  800664:	08023fc0 	call	8023fc <__muldf3>
  800668:	1009883a 	mov	r4,r2
  80066c:	180b883a 	mov	r5,r3
  800670:	2021883a 	mov	r16,r4
  800674:	2823883a 	mov	r17,r5
  800678:	e0bff817 	ldw	r2,-32(fp)
  80067c:	1085883a 	add	r2,r2,r2
  800680:	1085883a 	add	r2,r2,r2
  800684:	1007883a 	mov	r3,r2
  800688:	e0bffc17 	ldw	r2,-16(fp)
  80068c:	10c5883a 	add	r2,r2,r3
  800690:	10c00017 	ldw	r3,0(r2)
  800694:	e0bff817 	ldw	r2,-32(fp)
  800698:	1085883a 	add	r2,r2,r2
  80069c:	1085883a 	add	r2,r2,r2
  8006a0:	1009883a 	mov	r4,r2
  8006a4:	e0bffc17 	ldw	r2,-16(fp)
  8006a8:	1105883a 	add	r2,r2,r4
  8006ac:	11000017 	ldw	r4,0(r2)
  8006b0:	200b883a 	mov	r5,r4
  8006b4:	1809883a 	mov	r4,r3
  8006b8:	08012000 	call	801200 <__mulsf3>
  8006bc:	1007883a 	mov	r3,r2
  8006c0:	1805883a 	mov	r2,r3
  8006c4:	e17ffa17 	ldw	r5,-24(fp)
  8006c8:	1009883a 	mov	r4,r2
  8006cc:	08012000 	call	801200 <__mulsf3>
  8006d0:	1007883a 	mov	r3,r2
  8006d4:	1805883a 	mov	r2,r3
  8006d8:	1009883a 	mov	r4,r2
  8006dc:	08034100 	call	803410 <__extendsfdf2>
  8006e0:	1009883a 	mov	r4,r2
  8006e4:	180b883a 	mov	r5,r3
  8006e8:	200d883a 	mov	r6,r4
  8006ec:	280f883a 	mov	r7,r5
  8006f0:	8009883a 	mov	r4,r16
  8006f4:	880b883a 	mov	r5,r17
  8006f8:	0801b500 	call	801b50 <__adddf3>
  8006fc:	1009883a 	mov	r4,r2
  800700:	180b883a 	mov	r5,r3
  800704:	2005883a 	mov	r2,r4
  800708:	2807883a 	mov	r3,r5
  80070c:	1009883a 	mov	r4,r2
  800710:	180b883a 	mov	r5,r3
  800714:	08035200 	call	803520 <__truncdfsf2>
  800718:	1007883a 	mov	r3,r2
  80071c:	e0fffb15 	stw	r3,-20(fp)

        // Summing up the results
        result += term;
  800720:	e17ffb17 	ldw	r5,-20(fp)
  800724:	e13ff717 	ldw	r4,-36(fp)
  800728:	08008f80 	call	8008f8 <__addsf3>
  80072c:	1007883a 	mov	r3,r2
  800730:	e0fff715 	stw	r3,-36(fp)
//	return sum;
//}

float sumVector(float x[], unsigned int M) {
    float result = 0;
    for (int i = 0; i < M; i++) {
  800734:	e0bff817 	ldw	r2,-32(fp)
  800738:	10800044 	addi	r2,r2,1
  80073c:	e0bff815 	stw	r2,-32(fp)
  800740:	e0fff817 	ldw	r3,-32(fp)
  800744:	e0bffd17 	ldw	r2,-12(fp)
  800748:	18bf0b36 	bltu	r3,r2,800378 <__alt_data_end+0xff800378>
        float term = (0.5 * x[i]) + (x[i] * x[i] * cosApprox);

        // Summing up the results
        result += term;
    }
    return result;
  80074c:	e0bff717 	ldw	r2,-36(fp)
  800750:	1007883a 	mov	r3,r2
}
  800754:	1805883a 	mov	r2,r3
  800758:	e6fffe04 	addi	sp,fp,-8
  80075c:	dfc00317 	ldw	ra,12(sp)
  800760:	df000217 	ldw	fp,8(sp)
  800764:	dc400117 	ldw	r17,4(sp)
  800768:	dc000017 	ldw	r16,0(sp)
  80076c:	dec00404 	addi	sp,sp,16
  800770:	f800283a 	ret

00800774 <main>:


int main()
{
  800774:	defffe04 	addi	sp,sp,-8
  800778:	dfc00115 	stw	ra,4(sp)
  80077c:	df000015 	stw	fp,0(sp)
  800780:	d839883a 	mov	fp,sp
  800784:	023ffc34 	movhi	r8,65520
  800788:	4203ee04 	addi	r8,r8,4024
  80078c:	da37883a 	add	sp,sp,r8

  alt_putstr("Task 4!\n");
  800790:	01002074 	movhi	r4,129
  800794:	2103ea04 	addi	r4,r4,4008
  800798:	080ec180 	call	80ec18 <alt_putstr>
  float x[N];

  // Returned result
  float y;

  generateVector(x);
  80079c:	00fffc34 	movhi	r3,65520
  8007a0:	18c3f204 	addi	r3,r3,4040
  8007a4:	e0c5883a 	add	r2,fp,r3
  8007a8:	1009883a 	mov	r4,r2
  8007ac:	08002900 	call	800290 <generateVector>

  // The following is used for timing
  char buf[50];
  clock_t exec_t1, exec_t2;

  exec_t1 = times(NULL); // get system time before starting the process
  8007b0:	0009883a 	mov	r4,zero
  8007b4:	080eedc0 	call	80eedc <times>
  8007b8:	013ffc34 	movhi	r4,65520
  8007bc:	2103f004 	addi	r4,r4,4032
  8007c0:	2709883a 	add	r4,r4,fp
  8007c4:	20800015 	stw	r2,0(r4)

  // The code that you want to time goes here
  y = sumVector(x, N);
  8007c8:	00fffc34 	movhi	r3,65520
  8007cc:	18c3f204 	addi	r3,r3,4040
  8007d0:	e0c5883a 	add	r2,fp,r3
  8007d4:	01400134 	movhi	r5,4
  8007d8:	297f0044 	addi	r5,r5,-1023
  8007dc:	1009883a 	mov	r4,r2
  8007e0:	080034c0 	call	80034c <sumVector>
  8007e4:	013ffc34 	movhi	r4,65520
  8007e8:	2103ee04 	addi	r4,r4,4024
  8007ec:	2709883a 	add	r4,r4,fp
  8007f0:	20800015 	stw	r2,0(r4)

  // till here
  exec_t2 = times(NULL); // get system time after finishing the process
  8007f4:	0009883a 	mov	r4,zero
  8007f8:	080eedc0 	call	80eedc <times>
  8007fc:	00fffc34 	movhi	r3,65520
  800800:	18c3f104 	addi	r3,r3,4036
  800804:	1f07883a 	add	r3,r3,fp
  800808:	18800015 	stw	r2,0(r3)

  printf(" proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));
  80080c:	013ffc34 	movhi	r4,65520
  800810:	2103f104 	addi	r4,r4,4036
  800814:	2709883a 	add	r4,r4,fp
  800818:	20c00017 	ldw	r3,0(r4)
  80081c:	013ffc34 	movhi	r4,65520
  800820:	2103f004 	addi	r4,r4,4032
  800824:	2709883a 	add	r4,r4,fp
  800828:	20800017 	ldw	r2,0(r4)
  80082c:	1885c83a 	sub	r2,r3,r2
  800830:	100b883a 	mov	r5,r2
  800834:	01002074 	movhi	r4,129
  800838:	2103ed04 	addi	r4,r4,4020
  80083c:	080375c0 	call	80375c <printf>

  int i;
  for (i=0; i<10; i++)
  800840:	00bffc34 	movhi	r2,65520
  800844:	1083ef04 	addi	r2,r2,4028
  800848:	1705883a 	add	r2,r2,fp
  80084c:	10000015 	stw	zero,0(r2)
  800850:	00001406 	br	8008a4 <main+0x130>
  	y = y/2.0;
  800854:	01500034 	movhi	r5,16384
  800858:	00fffc34 	movhi	r3,65520
  80085c:	18c3ee04 	addi	r3,r3,4024
  800860:	1f07883a 	add	r3,r3,fp
  800864:	19000017 	ldw	r4,0(r3)
  800868:	0800dc00 	call	800dc0 <__divsf3>
  80086c:	1007883a 	mov	r3,r2
  800870:	013ffc34 	movhi	r4,65520
  800874:	2103ee04 	addi	r4,r4,4024
  800878:	2709883a 	add	r4,r4,fp
  80087c:	20c00015 	stw	r3,0(r4)
  exec_t2 = times(NULL); // get system time after finishing the process

  printf(" proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));

  int i;
  for (i=0; i<10; i++)
  800880:	00fffc34 	movhi	r3,65520
  800884:	18c3ef04 	addi	r3,r3,4028
  800888:	1f07883a 	add	r3,r3,fp
  80088c:	18800017 	ldw	r2,0(r3)
  800890:	10800044 	addi	r2,r2,1
  800894:	013ffc34 	movhi	r4,65520
  800898:	2103ef04 	addi	r4,r4,4028
  80089c:	2709883a 	add	r4,r4,fp
  8008a0:	20800015 	stw	r2,0(r4)
  8008a4:	00fffc34 	movhi	r3,65520
  8008a8:	18c3ef04 	addi	r3,r3,4028
  8008ac:	1f07883a 	add	r3,r3,fp
  8008b0:	18800017 	ldw	r2,0(r3)
  8008b4:	10800290 	cmplti	r2,r2,10
  8008b8:	103fe61e 	bne	r2,zero,800854 <__alt_data_end+0xff800854>
  	y = y/2.0;

  printf(" Result (divided by 1024) = %d \n", (int) y);
  8008bc:	00bffc34 	movhi	r2,65520
  8008c0:	1083ee04 	addi	r2,r2,4024
  8008c4:	1705883a 	add	r2,r2,fp
  8008c8:	11000017 	ldw	r4,0(r2)
  8008cc:	0801ae00 	call	801ae0 <__fixsfsi>
  8008d0:	100b883a 	mov	r5,r2
  8008d4:	01002074 	movhi	r4,129
  8008d8:	2103f304 	addi	r4,r4,4044
  8008dc:	080375c0 	call	80375c <printf>

  return 0;
  8008e0:	0005883a 	mov	r2,zero
}
  8008e4:	e037883a 	mov	sp,fp
  8008e8:	dfc00117 	ldw	ra,4(sp)
  8008ec:	df000017 	ldw	fp,0(sp)
  8008f0:	dec00204 	addi	sp,sp,8
  8008f4:	f800283a 	ret

008008f8 <__addsf3>:
  8008f8:	defffc04 	addi	sp,sp,-16
  8008fc:	2004d7fa 	srli	r2,r4,31
  800900:	280cd5fa 	srli	r6,r5,23
  800904:	dc000015 	stw	r16,0(sp)
  800908:	00c02034 	movhi	r3,128
  80090c:	2020d5fa 	srli	r16,r4,23
  800910:	280ed7fa 	srli	r7,r5,31
  800914:	18ffffc4 	addi	r3,r3,-1
  800918:	dc400115 	stw	r17,4(sp)
  80091c:	1908703a 	and	r4,r3,r4
  800920:	194a703a 	and	r5,r3,r5
  800924:	dfc00315 	stw	ra,12(sp)
  800928:	dc800215 	stw	r18,8(sp)
  80092c:	14403fcc 	andi	r17,r2,255
  800930:	84003fcc 	andi	r16,r16,255
  800934:	200890fa 	slli	r4,r4,3
  800938:	31803fcc 	andi	r6,r6,255
  80093c:	280a90fa 	slli	r5,r5,3
  800940:	89c05026 	beq	r17,r7,800a84 <__addsf3+0x18c>
  800944:	8185c83a 	sub	r2,r16,r6
  800948:	00807a0e 	bge	zero,r2,800b34 <__addsf3+0x23c>
  80094c:	30001e1e 	bne	r6,zero,8009c8 <__addsf3+0xd0>
  800950:	28006d1e 	bne	r5,zero,800b08 <__addsf3+0x210>
  800954:	208001cc 	andi	r2,r4,7
  800958:	10000426 	beq	r2,zero,80096c <__addsf3+0x74>
  80095c:	208003cc 	andi	r2,r4,15
  800960:	00c00104 	movi	r3,4
  800964:	10c00126 	beq	r2,r3,80096c <__addsf3+0x74>
  800968:	20c9883a 	add	r4,r4,r3
  80096c:	2081002c 	andhi	r2,r4,1024
  800970:	10003926 	beq	r2,zero,800a58 <__addsf3+0x160>
  800974:	84000044 	addi	r16,r16,1
  800978:	00803fc4 	movi	r2,255
  80097c:	80807826 	beq	r16,r2,800b60 <__addsf3+0x268>
  800980:	200891ba 	slli	r4,r4,6
  800984:	8805883a 	mov	r2,r17
  800988:	2008d27a 	srli	r4,r4,9
  80098c:	84003fcc 	andi	r16,r16,255
  800990:	800695fa 	slli	r3,r16,23
  800994:	10803fcc 	andi	r2,r2,255
  800998:	04002034 	movhi	r16,128
  80099c:	843fffc4 	addi	r16,r16,-1
  8009a0:	100497fa 	slli	r2,r2,31
  8009a4:	2408703a 	and	r4,r4,r16
  8009a8:	20e0b03a 	or	r16,r4,r3
  8009ac:	8084b03a 	or	r2,r16,r2
  8009b0:	dfc00317 	ldw	ra,12(sp)
  8009b4:	dc800217 	ldw	r18,8(sp)
  8009b8:	dc400117 	ldw	r17,4(sp)
  8009bc:	dc000017 	ldw	r16,0(sp)
  8009c0:	dec00404 	addi	sp,sp,16
  8009c4:	f800283a 	ret
  8009c8:	00c03fc4 	movi	r3,255
  8009cc:	80ffe126 	beq	r16,r3,800954 <__alt_data_end+0xff800954>
  8009d0:	29410034 	orhi	r5,r5,1024
  8009d4:	00c006c4 	movi	r3,27
  8009d8:	18807516 	blt	r3,r2,800bb0 <__addsf3+0x2b8>
  8009dc:	00c00804 	movi	r3,32
  8009e0:	1887c83a 	sub	r3,r3,r2
  8009e4:	28c6983a 	sll	r3,r5,r3
  8009e8:	288ad83a 	srl	r5,r5,r2
  8009ec:	1804c03a 	cmpne	r2,r3,zero
  8009f0:	288ab03a 	or	r5,r5,r2
  8009f4:	2149c83a 	sub	r4,r4,r5
  8009f8:	2081002c 	andhi	r2,r4,1024
  8009fc:	10001426 	beq	r2,zero,800a50 <__addsf3+0x158>
  800a00:	04810034 	movhi	r18,1024
  800a04:	94bfffc4 	addi	r18,r18,-1
  800a08:	24a4703a 	and	r18,r4,r18
  800a0c:	9009883a 	mov	r4,r18
  800a10:	08036c80 	call	8036c8 <__clzsi2>
  800a14:	10bffec4 	addi	r2,r2,-5
  800a18:	90a4983a 	sll	r18,r18,r2
  800a1c:	14005416 	blt	r2,r16,800b70 <__addsf3+0x278>
  800a20:	1405c83a 	sub	r2,r2,r16
  800a24:	11000044 	addi	r4,r2,1
  800a28:	00800804 	movi	r2,32
  800a2c:	1105c83a 	sub	r2,r2,r4
  800a30:	9084983a 	sll	r2,r18,r2
  800a34:	9124d83a 	srl	r18,r18,r4
  800a38:	0021883a 	mov	r16,zero
  800a3c:	1008c03a 	cmpne	r4,r2,zero
  800a40:	9108b03a 	or	r4,r18,r4
  800a44:	003fc306 	br	800954 <__alt_data_end+0xff800954>
  800a48:	1000db26 	beq	r2,zero,800db8 <__addsf3+0x4c0>
  800a4c:	1009883a 	mov	r4,r2
  800a50:	208001cc 	andi	r2,r4,7
  800a54:	103fc11e 	bne	r2,zero,80095c <__alt_data_end+0xff80095c>
  800a58:	2006d0fa 	srli	r3,r4,3
  800a5c:	01003fc4 	movi	r4,255
  800a60:	8805883a 	mov	r2,r17
  800a64:	8100241e 	bne	r16,r4,800af8 <__addsf3+0x200>
  800a68:	18006e26 	beq	r3,zero,800c24 <__addsf3+0x32c>
  800a6c:	19001034 	orhi	r4,r3,64
  800a70:	00c02034 	movhi	r3,128
  800a74:	18ffffc4 	addi	r3,r3,-1
  800a78:	043fffc4 	movi	r16,-1
  800a7c:	20c8703a 	and	r4,r4,r3
  800a80:	003fc206 	br	80098c <__alt_data_end+0xff80098c>
  800a84:	8187c83a 	sub	r3,r16,r6
  800a88:	00c03e0e 	bge	zero,r3,800b84 <__addsf3+0x28c>
  800a8c:	30002326 	beq	r6,zero,800b1c <__addsf3+0x224>
  800a90:	01803fc4 	movi	r6,255
  800a94:	81bfaf26 	beq	r16,r6,800954 <__alt_data_end+0xff800954>
  800a98:	29410034 	orhi	r5,r5,1024
  800a9c:	018006c4 	movi	r6,27
  800aa0:	30c07416 	blt	r6,r3,800c74 <__addsf3+0x37c>
  800aa4:	01800804 	movi	r6,32
  800aa8:	30cdc83a 	sub	r6,r6,r3
  800aac:	298c983a 	sll	r6,r5,r6
  800ab0:	28cad83a 	srl	r5,r5,r3
  800ab4:	3006c03a 	cmpne	r3,r6,zero
  800ab8:	28cab03a 	or	r5,r5,r3
  800abc:	2149883a 	add	r4,r4,r5
  800ac0:	20c1002c 	andhi	r3,r4,1024
  800ac4:	183fe226 	beq	r3,zero,800a50 <__alt_data_end+0xff800a50>
  800ac8:	84000044 	addi	r16,r16,1
  800acc:	00c03fc4 	movi	r3,255
  800ad0:	80c05426 	beq	r16,r3,800c24 <__addsf3+0x32c>
  800ad4:	00bf0034 	movhi	r2,64512
  800ad8:	10bfffc4 	addi	r2,r2,-1
  800adc:	20c0004c 	andi	r3,r4,1
  800ae0:	2088703a 	and	r4,r4,r2
  800ae4:	2008d07a 	srli	r4,r4,1
  800ae8:	20c8b03a 	or	r4,r4,r3
  800aec:	003f9906 	br	800954 <__alt_data_end+0xff800954>
  800af0:	0007883a 	mov	r3,zero
  800af4:	0005883a 	mov	r2,zero
  800af8:	01002034 	movhi	r4,128
  800afc:	213fffc4 	addi	r4,r4,-1
  800b00:	1908703a 	and	r4,r3,r4
  800b04:	003fa106 	br	80098c <__alt_data_end+0xff80098c>
  800b08:	10bfffc4 	addi	r2,r2,-1
  800b0c:	103fb926 	beq	r2,zero,8009f4 <__alt_data_end+0xff8009f4>
  800b10:	00c03fc4 	movi	r3,255
  800b14:	80ffaf1e 	bne	r16,r3,8009d4 <__alt_data_end+0xff8009d4>
  800b18:	003f8e06 	br	800954 <__alt_data_end+0xff800954>
  800b1c:	283f8d26 	beq	r5,zero,800954 <__alt_data_end+0xff800954>
  800b20:	18ffffc4 	addi	r3,r3,-1
  800b24:	183fe526 	beq	r3,zero,800abc <__alt_data_end+0xff800abc>
  800b28:	01803fc4 	movi	r6,255
  800b2c:	81bfdb1e 	bne	r16,r6,800a9c <__alt_data_end+0xff800a9c>
  800b30:	003f8806 	br	800954 <__alt_data_end+0xff800954>
  800b34:	1000201e 	bne	r2,zero,800bb8 <__addsf3+0x2c0>
  800b38:	80800044 	addi	r2,r16,1
  800b3c:	10803fcc 	andi	r2,r2,255
  800b40:	01800044 	movi	r6,1
  800b44:	3080450e 	bge	r6,r2,800c5c <__addsf3+0x364>
  800b48:	2165c83a 	sub	r18,r4,r5
  800b4c:	90c1002c 	andhi	r3,r18,1024
  800b50:	18002b26 	beq	r3,zero,800c00 <__addsf3+0x308>
  800b54:	2925c83a 	sub	r18,r5,r4
  800b58:	3823883a 	mov	r17,r7
  800b5c:	003fab06 	br	800a0c <__alt_data_end+0xff800a0c>
  800b60:	8805883a 	mov	r2,r17
  800b64:	043fffc4 	movi	r16,-1
  800b68:	0009883a 	mov	r4,zero
  800b6c:	003f8706 	br	80098c <__alt_data_end+0xff80098c>
  800b70:	013f0034 	movhi	r4,64512
  800b74:	213fffc4 	addi	r4,r4,-1
  800b78:	80a1c83a 	sub	r16,r16,r2
  800b7c:	9108703a 	and	r4,r18,r4
  800b80:	003f7406 	br	800954 <__alt_data_end+0xff800954>
  800b84:	1800411e 	bne	r3,zero,800c8c <__addsf3+0x394>
  800b88:	80c00044 	addi	r3,r16,1
  800b8c:	19c03fcc 	andi	r7,r3,255
  800b90:	01800044 	movi	r6,1
  800b94:	31c0260e 	bge	r6,r7,800c30 <__addsf3+0x338>
  800b98:	01803fc4 	movi	r6,255
  800b9c:	19802126 	beq	r3,r6,800c24 <__addsf3+0x32c>
  800ba0:	2149883a 	add	r4,r4,r5
  800ba4:	2008d07a 	srli	r4,r4,1
  800ba8:	1821883a 	mov	r16,r3
  800bac:	003f6906 	br	800954 <__alt_data_end+0xff800954>
  800bb0:	01400044 	movi	r5,1
  800bb4:	003f8f06 	br	8009f4 <__alt_data_end+0xff8009f4>
  800bb8:	8000151e 	bne	r16,zero,800c10 <__addsf3+0x318>
  800bbc:	20002f26 	beq	r4,zero,800c7c <__addsf3+0x384>
  800bc0:	0084303a 	nor	r2,zero,r2
  800bc4:	10000a26 	beq	r2,zero,800bf0 <__addsf3+0x2f8>
  800bc8:	00c03fc4 	movi	r3,255
  800bcc:	30c02b26 	beq	r6,r3,800c7c <__addsf3+0x384>
  800bd0:	00c006c4 	movi	r3,27
  800bd4:	18806d16 	blt	r3,r2,800d8c <__addsf3+0x494>
  800bd8:	00c00804 	movi	r3,32
  800bdc:	1887c83a 	sub	r3,r3,r2
  800be0:	20c6983a 	sll	r3,r4,r3
  800be4:	2084d83a 	srl	r2,r4,r2
  800be8:	1808c03a 	cmpne	r4,r3,zero
  800bec:	1108b03a 	or	r4,r2,r4
  800bf0:	2909c83a 	sub	r4,r5,r4
  800bf4:	3021883a 	mov	r16,r6
  800bf8:	3823883a 	mov	r17,r7
  800bfc:	003f7e06 	br	8009f8 <__alt_data_end+0xff8009f8>
  800c00:	903f821e 	bne	r18,zero,800a0c <__alt_data_end+0xff800a0c>
  800c04:	0005883a 	mov	r2,zero
  800c08:	0021883a 	mov	r16,zero
  800c0c:	003fba06 	br	800af8 <__alt_data_end+0xff800af8>
  800c10:	00c03fc4 	movi	r3,255
  800c14:	30c01926 	beq	r6,r3,800c7c <__addsf3+0x384>
  800c18:	0085c83a 	sub	r2,zero,r2
  800c1c:	21010034 	orhi	r4,r4,1024
  800c20:	003feb06 	br	800bd0 <__alt_data_end+0xff800bd0>
  800c24:	043fffc4 	movi	r16,-1
  800c28:	0009883a 	mov	r4,zero
  800c2c:	003f5706 	br	80098c <__alt_data_end+0xff80098c>
  800c30:	80004a1e 	bne	r16,zero,800d5c <__addsf3+0x464>
  800c34:	20005926 	beq	r4,zero,800d9c <__addsf3+0x4a4>
  800c38:	283f4626 	beq	r5,zero,800954 <__alt_data_end+0xff800954>
  800c3c:	2149883a 	add	r4,r4,r5
  800c40:	2081002c 	andhi	r2,r4,1024
  800c44:	103f8226 	beq	r2,zero,800a50 <__alt_data_end+0xff800a50>
  800c48:	00bf0034 	movhi	r2,64512
  800c4c:	10bfffc4 	addi	r2,r2,-1
  800c50:	3021883a 	mov	r16,r6
  800c54:	2088703a 	and	r4,r4,r2
  800c58:	003f3e06 	br	800954 <__alt_data_end+0xff800954>
  800c5c:	8000121e 	bne	r16,zero,800ca8 <__addsf3+0x3b0>
  800c60:	2000261e 	bne	r4,zero,800cfc <__addsf3+0x404>
  800c64:	283fa226 	beq	r5,zero,800af0 <__alt_data_end+0xff800af0>
  800c68:	2809883a 	mov	r4,r5
  800c6c:	3823883a 	mov	r17,r7
  800c70:	003f3806 	br	800954 <__alt_data_end+0xff800954>
  800c74:	01400044 	movi	r5,1
  800c78:	003f9006 	br	800abc <__alt_data_end+0xff800abc>
  800c7c:	2809883a 	mov	r4,r5
  800c80:	3021883a 	mov	r16,r6
  800c84:	3823883a 	mov	r17,r7
  800c88:	003f3206 	br	800954 <__alt_data_end+0xff800954>
  800c8c:	80000c1e 	bne	r16,zero,800cc0 <__addsf3+0x3c8>
  800c90:	20002f26 	beq	r4,zero,800d50 <__addsf3+0x458>
  800c94:	00c6303a 	nor	r3,zero,r3
  800c98:	18002b1e 	bne	r3,zero,800d48 <__addsf3+0x450>
  800c9c:	2149883a 	add	r4,r4,r5
  800ca0:	3021883a 	mov	r16,r6
  800ca4:	003f8606 	br	800ac0 <__alt_data_end+0xff800ac0>
  800ca8:	20001b1e 	bne	r4,zero,800d18 <__addsf3+0x420>
  800cac:	28003926 	beq	r5,zero,800d94 <__addsf3+0x49c>
  800cb0:	2809883a 	mov	r4,r5
  800cb4:	3823883a 	mov	r17,r7
  800cb8:	04003fc4 	movi	r16,255
  800cbc:	003f2506 	br	800954 <__alt_data_end+0xff800954>
  800cc0:	01c03fc4 	movi	r7,255
  800cc4:	31c02226 	beq	r6,r7,800d50 <__addsf3+0x458>
  800cc8:	00c7c83a 	sub	r3,zero,r3
  800ccc:	21010034 	orhi	r4,r4,1024
  800cd0:	01c006c4 	movi	r7,27
  800cd4:	38c03616 	blt	r7,r3,800db0 <__addsf3+0x4b8>
  800cd8:	01c00804 	movi	r7,32
  800cdc:	38cfc83a 	sub	r7,r7,r3
  800ce0:	21ce983a 	sll	r7,r4,r7
  800ce4:	20c6d83a 	srl	r3,r4,r3
  800ce8:	3808c03a 	cmpne	r4,r7,zero
  800cec:	1906b03a 	or	r3,r3,r4
  800cf0:	1949883a 	add	r4,r3,r5
  800cf4:	3021883a 	mov	r16,r6
  800cf8:	003f7106 	br	800ac0 <__alt_data_end+0xff800ac0>
  800cfc:	283f1526 	beq	r5,zero,800954 <__alt_data_end+0xff800954>
  800d00:	2145c83a 	sub	r2,r4,r5
  800d04:	10c1002c 	andhi	r3,r2,1024
  800d08:	183f4f26 	beq	r3,zero,800a48 <__alt_data_end+0xff800a48>
  800d0c:	2909c83a 	sub	r4,r5,r4
  800d10:	3823883a 	mov	r17,r7
  800d14:	003f0f06 	br	800954 <__alt_data_end+0xff800954>
  800d18:	28001a26 	beq	r5,zero,800d84 <__addsf3+0x48c>
  800d1c:	2008d0fa 	srli	r4,r4,3
  800d20:	2080102c 	andhi	r2,r4,64
  800d24:	10000526 	beq	r2,zero,800d3c <__addsf3+0x444>
  800d28:	280ad0fa 	srli	r5,r5,3
  800d2c:	2880102c 	andhi	r2,r5,64
  800d30:	1000021e 	bne	r2,zero,800d3c <__addsf3+0x444>
  800d34:	2809883a 	mov	r4,r5
  800d38:	3823883a 	mov	r17,r7
  800d3c:	200890fa 	slli	r4,r4,3
  800d40:	04003fc4 	movi	r16,255
  800d44:	003f0306 	br	800954 <__alt_data_end+0xff800954>
  800d48:	01c03fc4 	movi	r7,255
  800d4c:	31ffe01e 	bne	r6,r7,800cd0 <__alt_data_end+0xff800cd0>
  800d50:	2809883a 	mov	r4,r5
  800d54:	3021883a 	mov	r16,r6
  800d58:	003efe06 	br	800954 <__alt_data_end+0xff800954>
  800d5c:	20001126 	beq	r4,zero,800da4 <__addsf3+0x4ac>
  800d60:	28000826 	beq	r5,zero,800d84 <__addsf3+0x48c>
  800d64:	2008d0fa 	srli	r4,r4,3
  800d68:	2080102c 	andhi	r2,r4,64
  800d6c:	103ff326 	beq	r2,zero,800d3c <__alt_data_end+0xff800d3c>
  800d70:	280ad0fa 	srli	r5,r5,3
  800d74:	2880102c 	andhi	r2,r5,64
  800d78:	103ff01e 	bne	r2,zero,800d3c <__alt_data_end+0xff800d3c>
  800d7c:	2809883a 	mov	r4,r5
  800d80:	003fee06 	br	800d3c <__alt_data_end+0xff800d3c>
  800d84:	04003fc4 	movi	r16,255
  800d88:	003ef206 	br	800954 <__alt_data_end+0xff800954>
  800d8c:	01000044 	movi	r4,1
  800d90:	003f9706 	br	800bf0 <__alt_data_end+0xff800bf0>
  800d94:	0005883a 	mov	r2,zero
  800d98:	003f3406 	br	800a6c <__alt_data_end+0xff800a6c>
  800d9c:	2809883a 	mov	r4,r5
  800da0:	003eec06 	br	800954 <__alt_data_end+0xff800954>
  800da4:	2809883a 	mov	r4,r5
  800da8:	04003fc4 	movi	r16,255
  800dac:	003ee906 	br	800954 <__alt_data_end+0xff800954>
  800db0:	00c00044 	movi	r3,1
  800db4:	003fce06 	br	800cf0 <__alt_data_end+0xff800cf0>
  800db8:	0005883a 	mov	r2,zero
  800dbc:	003f4e06 	br	800af8 <__alt_data_end+0xff800af8>

00800dc0 <__divsf3>:
  800dc0:	defff504 	addi	sp,sp,-44
  800dc4:	200cd5fa 	srli	r6,r4,23
  800dc8:	dcc00415 	stw	r19,16(sp)
  800dcc:	2026d7fa 	srli	r19,r4,31
  800dd0:	00c02034 	movhi	r3,128
  800dd4:	dd800715 	stw	r22,28(sp)
  800dd8:	dd000515 	stw	r20,20(sp)
  800ddc:	dc800315 	stw	r18,12(sp)
  800de0:	18ffffc4 	addi	r3,r3,-1
  800de4:	dfc00a15 	stw	ra,40(sp)
  800de8:	df000915 	stw	fp,36(sp)
  800dec:	ddc00815 	stw	r23,32(sp)
  800df0:	dd400615 	stw	r21,24(sp)
  800df4:	dc400215 	stw	r17,8(sp)
  800df8:	dc000115 	stw	r16,4(sp)
  800dfc:	35003fcc 	andi	r20,r6,255
  800e00:	1924703a 	and	r18,r3,r4
  800e04:	9d803fcc 	andi	r22,r19,255
  800e08:	a0005226 	beq	r20,zero,800f54 <__divsf3+0x194>
  800e0c:	00803fc4 	movi	r2,255
  800e10:	a0802e26 	beq	r20,r2,800ecc <__divsf3+0x10c>
  800e14:	91002034 	orhi	r4,r18,128
  800e18:	202490fa 	slli	r18,r4,3
  800e1c:	a53fe044 	addi	r20,r20,-127
  800e20:	0021883a 	mov	r16,zero
  800e24:	002f883a 	mov	r23,zero
  800e28:	280cd5fa 	srli	r6,r5,23
  800e2c:	282ad7fa 	srli	r21,r5,31
  800e30:	00c02034 	movhi	r3,128
  800e34:	18ffffc4 	addi	r3,r3,-1
  800e38:	31803fcc 	andi	r6,r6,255
  800e3c:	1962703a 	and	r17,r3,r5
  800e40:	af003fcc 	andi	fp,r21,255
  800e44:	30004a26 	beq	r6,zero,800f70 <__divsf3+0x1b0>
  800e48:	00803fc4 	movi	r2,255
  800e4c:	30804526 	beq	r6,r2,800f64 <__divsf3+0x1a4>
  800e50:	89402034 	orhi	r5,r17,128
  800e54:	282290fa 	slli	r17,r5,3
  800e58:	31bfe044 	addi	r6,r6,-127
  800e5c:	000b883a 	mov	r5,zero
  800e60:	2c20b03a 	or	r16,r5,r16
  800e64:	802090ba 	slli	r16,r16,2
  800e68:	00802034 	movhi	r2,128
  800e6c:	1083a304 	addi	r2,r2,3724
  800e70:	80a1883a 	add	r16,r16,r2
  800e74:	81000017 	ldw	r4,0(r16)
  800e78:	9d46f03a 	xor	r3,r19,r21
  800e7c:	180f883a 	mov	r7,r3
  800e80:	18803fcc 	andi	r2,r3,255
  800e84:	a18dc83a 	sub	r6,r20,r6
  800e88:	2000683a 	jmp	r4
  800e8c:	00801070 	cmpltui	r2,zero,65
  800e90:	00800ef4 	movhi	r2,59
  800e94:	00801064 	muli	r2,zero,65
  800e98:	00800ee0 	cmpeqi	r2,zero,59
  800e9c:	00801064 	muli	r2,zero,65
  800ea0:	0080103c 	xorhi	r2,zero,64
  800ea4:	00801064 	muli	r2,zero,65
  800ea8:	00800ee0 	cmpeqi	r2,zero,59
  800eac:	00800ef4 	movhi	r2,59
  800eb0:	00800ef4 	movhi	r2,59
  800eb4:	0080103c 	xorhi	r2,zero,64
  800eb8:	00800ee0 	cmpeqi	r2,zero,59
  800ebc:	00801150 	cmplti	r2,zero,69
  800ec0:	00801150 	cmplti	r2,zero,69
  800ec4:	00801150 	cmplti	r2,zero,69
  800ec8:	00801104 	movi	r2,68
  800ecc:	9000581e 	bne	r18,zero,801030 <__divsf3+0x270>
  800ed0:	04000204 	movi	r16,8
  800ed4:	05c00084 	movi	r23,2
  800ed8:	003fd306 	br	800e28 <__alt_data_end+0xff800e28>
  800edc:	0023883a 	mov	r17,zero
  800ee0:	e02d883a 	mov	r22,fp
  800ee4:	282f883a 	mov	r23,r5
  800ee8:	00800084 	movi	r2,2
  800eec:	b8808f1e 	bne	r23,r2,80112c <__divsf3+0x36c>
  800ef0:	b005883a 	mov	r2,r22
  800ef4:	11c0004c 	andi	r7,r2,1
  800ef8:	013fffc4 	movi	r4,-1
  800efc:	000d883a 	mov	r6,zero
  800f00:	21003fcc 	andi	r4,r4,255
  800f04:	200895fa 	slli	r4,r4,23
  800f08:	38803fcc 	andi	r2,r7,255
  800f0c:	00c02034 	movhi	r3,128
  800f10:	100497fa 	slli	r2,r2,31
  800f14:	18ffffc4 	addi	r3,r3,-1
  800f18:	30c6703a 	and	r3,r6,r3
  800f1c:	1906b03a 	or	r3,r3,r4
  800f20:	1884b03a 	or	r2,r3,r2
  800f24:	dfc00a17 	ldw	ra,40(sp)
  800f28:	df000917 	ldw	fp,36(sp)
  800f2c:	ddc00817 	ldw	r23,32(sp)
  800f30:	dd800717 	ldw	r22,28(sp)
  800f34:	dd400617 	ldw	r21,24(sp)
  800f38:	dd000517 	ldw	r20,20(sp)
  800f3c:	dcc00417 	ldw	r19,16(sp)
  800f40:	dc800317 	ldw	r18,12(sp)
  800f44:	dc400217 	ldw	r17,8(sp)
  800f48:	dc000117 	ldw	r16,4(sp)
  800f4c:	dec00b04 	addi	sp,sp,44
  800f50:	f800283a 	ret
  800f54:	90002b1e 	bne	r18,zero,801004 <__divsf3+0x244>
  800f58:	04000104 	movi	r16,4
  800f5c:	05c00044 	movi	r23,1
  800f60:	003fb106 	br	800e28 <__alt_data_end+0xff800e28>
  800f64:	8800251e 	bne	r17,zero,800ffc <__divsf3+0x23c>
  800f68:	01400084 	movi	r5,2
  800f6c:	00000206 	br	800f78 <__divsf3+0x1b8>
  800f70:	88001a1e 	bne	r17,zero,800fdc <__divsf3+0x21c>
  800f74:	01400044 	movi	r5,1
  800f78:	8160b03a 	or	r16,r16,r5
  800f7c:	802090ba 	slli	r16,r16,2
  800f80:	00c02034 	movhi	r3,128
  800f84:	18c3e704 	addi	r3,r3,3996
  800f88:	80e1883a 	add	r16,r16,r3
  800f8c:	80c00017 	ldw	r3,0(r16)
  800f90:	9d44f03a 	xor	r2,r19,r21
  800f94:	a18dc83a 	sub	r6,r20,r6
  800f98:	1800683a 	jmp	r3
  800f9c:	00800ef4 	movhi	r2,59
  800fa0:	00800ef4 	movhi	r2,59
  800fa4:	00801140 	call	80114 <__alt_mem_sdram-0x77feec>
  800fa8:	00800edc 	xori	r2,zero,59
  800fac:	00801140 	call	80114 <__alt_mem_sdram-0x77feec>
  800fb0:	0080103c 	xorhi	r2,zero,64
  800fb4:	00801140 	call	80114 <__alt_mem_sdram-0x77feec>
  800fb8:	00800edc 	xori	r2,zero,59
  800fbc:	00800ef4 	movhi	r2,59
  800fc0:	00800ef4 	movhi	r2,59
  800fc4:	0080103c 	xorhi	r2,zero,64
  800fc8:	00800edc 	xori	r2,zero,59
  800fcc:	00801150 	cmplti	r2,zero,69
  800fd0:	00801150 	cmplti	r2,zero,69
  800fd4:	00801150 	cmplti	r2,zero,69
  800fd8:	00801168 	cmpgeui	r2,zero,69
  800fdc:	8809883a 	mov	r4,r17
  800fe0:	08036c80 	call	8036c8 <__clzsi2>
  800fe4:	10fffec4 	addi	r3,r2,-5
  800fe8:	10801d84 	addi	r2,r2,118
  800fec:	88e2983a 	sll	r17,r17,r3
  800ff0:	008dc83a 	sub	r6,zero,r2
  800ff4:	000b883a 	mov	r5,zero
  800ff8:	003f9906 	br	800e60 <__alt_data_end+0xff800e60>
  800ffc:	014000c4 	movi	r5,3
  801000:	003f9706 	br	800e60 <__alt_data_end+0xff800e60>
  801004:	9009883a 	mov	r4,r18
  801008:	d9400015 	stw	r5,0(sp)
  80100c:	08036c80 	call	8036c8 <__clzsi2>
  801010:	10fffec4 	addi	r3,r2,-5
  801014:	11801d84 	addi	r6,r2,118
  801018:	90e4983a 	sll	r18,r18,r3
  80101c:	01a9c83a 	sub	r20,zero,r6
  801020:	0021883a 	mov	r16,zero
  801024:	002f883a 	mov	r23,zero
  801028:	d9400017 	ldw	r5,0(sp)
  80102c:	003f7e06 	br	800e28 <__alt_data_end+0xff800e28>
  801030:	04000304 	movi	r16,12
  801034:	05c000c4 	movi	r23,3
  801038:	003f7b06 	br	800e28 <__alt_data_end+0xff800e28>
  80103c:	01802034 	movhi	r6,128
  801040:	000f883a 	mov	r7,zero
  801044:	31bfffc4 	addi	r6,r6,-1
  801048:	013fffc4 	movi	r4,-1
  80104c:	003fac06 	br	800f00 <__alt_data_end+0xff800f00>
  801050:	01400044 	movi	r5,1
  801054:	2909c83a 	sub	r4,r5,r4
  801058:	00c006c4 	movi	r3,27
  80105c:	19004b0e 	bge	r3,r4,80118c <__divsf3+0x3cc>
  801060:	114e703a 	and	r7,r2,r5
  801064:	0009883a 	mov	r4,zero
  801068:	000d883a 	mov	r6,zero
  80106c:	003fa406 	br	800f00 <__alt_data_end+0xff800f00>
  801070:	9006917a 	slli	r3,r18,5
  801074:	8822917a 	slli	r17,r17,5
  801078:	1c40372e 	bgeu	r3,r17,801158 <__divsf3+0x398>
  80107c:	31bfffc4 	addi	r6,r6,-1
  801080:	010006c4 	movi	r4,27
  801084:	000b883a 	mov	r5,zero
  801088:	180f883a 	mov	r7,r3
  80108c:	294b883a 	add	r5,r5,r5
  801090:	18c7883a 	add	r3,r3,r3
  801094:	38000116 	blt	r7,zero,80109c <__divsf3+0x2dc>
  801098:	1c400236 	bltu	r3,r17,8010a4 <__divsf3+0x2e4>
  80109c:	1c47c83a 	sub	r3,r3,r17
  8010a0:	29400054 	ori	r5,r5,1
  8010a4:	213fffc4 	addi	r4,r4,-1
  8010a8:	203ff71e 	bne	r4,zero,801088 <__alt_data_end+0xff801088>
  8010ac:	1806c03a 	cmpne	r3,r3,zero
  8010b0:	1962b03a 	or	r17,r3,r5
  8010b4:	31001fc4 	addi	r4,r6,127
  8010b8:	013fe50e 	bge	zero,r4,801050 <__alt_data_end+0xff801050>
  8010bc:	88c001cc 	andi	r3,r17,7
  8010c0:	18000426 	beq	r3,zero,8010d4 <__divsf3+0x314>
  8010c4:	88c003cc 	andi	r3,r17,15
  8010c8:	01400104 	movi	r5,4
  8010cc:	19400126 	beq	r3,r5,8010d4 <__divsf3+0x314>
  8010d0:	8963883a 	add	r17,r17,r5
  8010d4:	88c2002c 	andhi	r3,r17,2048
  8010d8:	18000426 	beq	r3,zero,8010ec <__divsf3+0x32c>
  8010dc:	00fe0034 	movhi	r3,63488
  8010e0:	18ffffc4 	addi	r3,r3,-1
  8010e4:	31002004 	addi	r4,r6,128
  8010e8:	88e2703a 	and	r17,r17,r3
  8010ec:	00c03f84 	movi	r3,254
  8010f0:	193f8016 	blt	r3,r4,800ef4 <__alt_data_end+0xff800ef4>
  8010f4:	880c91ba 	slli	r6,r17,6
  8010f8:	11c0004c 	andi	r7,r2,1
  8010fc:	300cd27a 	srli	r6,r6,9
  801100:	003f7f06 	br	800f00 <__alt_data_end+0xff800f00>
  801104:	9080102c 	andhi	r2,r18,64
  801108:	10000226 	beq	r2,zero,801114 <__divsf3+0x354>
  80110c:	8880102c 	andhi	r2,r17,64
  801110:	10001826 	beq	r2,zero,801174 <__divsf3+0x3b4>
  801114:	00802034 	movhi	r2,128
  801118:	91801034 	orhi	r6,r18,64
  80111c:	10bfffc4 	addi	r2,r2,-1
  801120:	980f883a 	mov	r7,r19
  801124:	308c703a 	and	r6,r6,r2
  801128:	003fc706 	br	801048 <__alt_data_end+0xff801048>
  80112c:	008000c4 	movi	r2,3
  801130:	b8802d26 	beq	r23,r2,8011e8 <__divsf3+0x428>
  801134:	00c00044 	movi	r3,1
  801138:	b005883a 	mov	r2,r22
  80113c:	b8ffdd1e 	bne	r23,r3,8010b4 <__alt_data_end+0xff8010b4>
  801140:	11c0004c 	andi	r7,r2,1
  801144:	0009883a 	mov	r4,zero
  801148:	000d883a 	mov	r6,zero
  80114c:	003f6c06 	br	800f00 <__alt_data_end+0xff800f00>
  801150:	9023883a 	mov	r17,r18
  801154:	003f6406 	br	800ee8 <__alt_data_end+0xff800ee8>
  801158:	1c47c83a 	sub	r3,r3,r17
  80115c:	01000684 	movi	r4,26
  801160:	01400044 	movi	r5,1
  801164:	003fc806 	br	801088 <__alt_data_end+0xff801088>
  801168:	9080102c 	andhi	r2,r18,64
  80116c:	103fe926 	beq	r2,zero,801114 <__alt_data_end+0xff801114>
  801170:	0023883a 	mov	r17,zero
  801174:	00802034 	movhi	r2,128
  801178:	89801034 	orhi	r6,r17,64
  80117c:	10bfffc4 	addi	r2,r2,-1
  801180:	a80f883a 	mov	r7,r21
  801184:	308c703a 	and	r6,r6,r2
  801188:	003faf06 	br	801048 <__alt_data_end+0xff801048>
  80118c:	01c00804 	movi	r7,32
  801190:	390fc83a 	sub	r7,r7,r4
  801194:	89ce983a 	sll	r7,r17,r7
  801198:	890ad83a 	srl	r5,r17,r4
  80119c:	380ec03a 	cmpne	r7,r7,zero
  8011a0:	29cab03a 	or	r5,r5,r7
  8011a4:	28c001cc 	andi	r3,r5,7
  8011a8:	18000426 	beq	r3,zero,8011bc <__divsf3+0x3fc>
  8011ac:	28c003cc 	andi	r3,r5,15
  8011b0:	01000104 	movi	r4,4
  8011b4:	19000126 	beq	r3,r4,8011bc <__divsf3+0x3fc>
  8011b8:	290b883a 	add	r5,r5,r4
  8011bc:	28c1002c 	andhi	r3,r5,1024
  8011c0:	18000426 	beq	r3,zero,8011d4 <__divsf3+0x414>
  8011c4:	11c0004c 	andi	r7,r2,1
  8011c8:	01000044 	movi	r4,1
  8011cc:	000d883a 	mov	r6,zero
  8011d0:	003f4b06 	br	800f00 <__alt_data_end+0xff800f00>
  8011d4:	280a91ba 	slli	r5,r5,6
  8011d8:	11c0004c 	andi	r7,r2,1
  8011dc:	0009883a 	mov	r4,zero
  8011e0:	280cd27a 	srli	r6,r5,9
  8011e4:	003f4606 	br	800f00 <__alt_data_end+0xff800f00>
  8011e8:	00802034 	movhi	r2,128
  8011ec:	89801034 	orhi	r6,r17,64
  8011f0:	10bfffc4 	addi	r2,r2,-1
  8011f4:	b00f883a 	mov	r7,r22
  8011f8:	308c703a 	and	r6,r6,r2
  8011fc:	003f9206 	br	801048 <__alt_data_end+0xff801048>

00801200 <__mulsf3>:
  801200:	defff504 	addi	sp,sp,-44
  801204:	dc000115 	stw	r16,4(sp)
  801208:	2020d5fa 	srli	r16,r4,23
  80120c:	dd400615 	stw	r21,24(sp)
  801210:	202ad7fa 	srli	r21,r4,31
  801214:	dc800315 	stw	r18,12(sp)
  801218:	04802034 	movhi	r18,128
  80121c:	df000915 	stw	fp,36(sp)
  801220:	dd000515 	stw	r20,20(sp)
  801224:	94bfffc4 	addi	r18,r18,-1
  801228:	dfc00a15 	stw	ra,40(sp)
  80122c:	ddc00815 	stw	r23,32(sp)
  801230:	dd800715 	stw	r22,28(sp)
  801234:	dcc00415 	stw	r19,16(sp)
  801238:	dc400215 	stw	r17,8(sp)
  80123c:	84003fcc 	andi	r16,r16,255
  801240:	9124703a 	and	r18,r18,r4
  801244:	a829883a 	mov	r20,r21
  801248:	af003fcc 	andi	fp,r21,255
  80124c:	80005426 	beq	r16,zero,8013a0 <__mulsf3+0x1a0>
  801250:	00803fc4 	movi	r2,255
  801254:	80802f26 	beq	r16,r2,801314 <__mulsf3+0x114>
  801258:	91002034 	orhi	r4,r18,128
  80125c:	202490fa 	slli	r18,r4,3
  801260:	843fe044 	addi	r16,r16,-127
  801264:	0023883a 	mov	r17,zero
  801268:	002f883a 	mov	r23,zero
  80126c:	2804d5fa 	srli	r2,r5,23
  801270:	282cd7fa 	srli	r22,r5,31
  801274:	01002034 	movhi	r4,128
  801278:	213fffc4 	addi	r4,r4,-1
  80127c:	10803fcc 	andi	r2,r2,255
  801280:	2166703a 	and	r19,r4,r5
  801284:	b1803fcc 	andi	r6,r22,255
  801288:	10004c26 	beq	r2,zero,8013bc <__mulsf3+0x1bc>
  80128c:	00c03fc4 	movi	r3,255
  801290:	10c04726 	beq	r2,r3,8013b0 <__mulsf3+0x1b0>
  801294:	99002034 	orhi	r4,r19,128
  801298:	202690fa 	slli	r19,r4,3
  80129c:	10bfe044 	addi	r2,r2,-127
  8012a0:	0007883a 	mov	r3,zero
  8012a4:	80a1883a 	add	r16,r16,r2
  8012a8:	010003c4 	movi	r4,15
  8012ac:	1c44b03a 	or	r2,r3,r17
  8012b0:	b56af03a 	xor	r21,r22,r21
  8012b4:	81c00044 	addi	r7,r16,1
  8012b8:	20806b36 	bltu	r4,r2,801468 <__mulsf3+0x268>
  8012bc:	100490ba 	slli	r2,r2,2
  8012c0:	01002034 	movhi	r4,128
  8012c4:	2104b504 	addi	r4,r4,4820
  8012c8:	1105883a 	add	r2,r2,r4
  8012cc:	10800017 	ldw	r2,0(r2)
  8012d0:	1000683a 	jmp	r2
  8012d4:	00801468 	cmpgeui	r2,zero,81
  8012d8:	00801328 	cmpgeui	r2,zero,76
  8012dc:	00801328 	cmpgeui	r2,zero,76
  8012e0:	00801324 	muli	r2,zero,76
  8012e4:	0080144c 	andi	r2,zero,81
  8012e8:	0080144c 	andi	r2,zero,81
  8012ec:	00801438 	rdprs	r2,zero,80
  8012f0:	00801324 	muli	r2,zero,76
  8012f4:	0080144c 	andi	r2,zero,81
  8012f8:	00801438 	rdprs	r2,zero,80
  8012fc:	0080144c 	andi	r2,zero,81
  801300:	00801324 	muli	r2,zero,76
  801304:	00801458 	cmpnei	r2,zero,81
  801308:	00801458 	cmpnei	r2,zero,81
  80130c:	00801458 	cmpnei	r2,zero,81
  801310:	00801534 	movhi	r2,84
  801314:	90003b1e 	bne	r18,zero,801404 <__mulsf3+0x204>
  801318:	04400204 	movi	r17,8
  80131c:	05c00084 	movi	r23,2
  801320:	003fd206 	br	80126c <__alt_data_end+0xff80126c>
  801324:	302b883a 	mov	r21,r6
  801328:	00800084 	movi	r2,2
  80132c:	18802626 	beq	r3,r2,8013c8 <__mulsf3+0x1c8>
  801330:	008000c4 	movi	r2,3
  801334:	1880ab26 	beq	r3,r2,8015e4 <__mulsf3+0x3e4>
  801338:	00800044 	movi	r2,1
  80133c:	1880a21e 	bne	r3,r2,8015c8 <__mulsf3+0x3c8>
  801340:	a829883a 	mov	r20,r21
  801344:	0007883a 	mov	r3,zero
  801348:	0009883a 	mov	r4,zero
  80134c:	18803fcc 	andi	r2,r3,255
  801350:	100695fa 	slli	r3,r2,23
  801354:	a0803fcc 	andi	r2,r20,255
  801358:	100a97fa 	slli	r5,r2,31
  80135c:	00802034 	movhi	r2,128
  801360:	10bfffc4 	addi	r2,r2,-1
  801364:	2084703a 	and	r2,r4,r2
  801368:	10c4b03a 	or	r2,r2,r3
  80136c:	1144b03a 	or	r2,r2,r5
  801370:	dfc00a17 	ldw	ra,40(sp)
  801374:	df000917 	ldw	fp,36(sp)
  801378:	ddc00817 	ldw	r23,32(sp)
  80137c:	dd800717 	ldw	r22,28(sp)
  801380:	dd400617 	ldw	r21,24(sp)
  801384:	dd000517 	ldw	r20,20(sp)
  801388:	dcc00417 	ldw	r19,16(sp)
  80138c:	dc800317 	ldw	r18,12(sp)
  801390:	dc400217 	ldw	r17,8(sp)
  801394:	dc000117 	ldw	r16,4(sp)
  801398:	dec00b04 	addi	sp,sp,44
  80139c:	f800283a 	ret
  8013a0:	90000d1e 	bne	r18,zero,8013d8 <__mulsf3+0x1d8>
  8013a4:	04400104 	movi	r17,4
  8013a8:	05c00044 	movi	r23,1
  8013ac:	003faf06 	br	80126c <__alt_data_end+0xff80126c>
  8013b0:	9806c03a 	cmpne	r3,r19,zero
  8013b4:	18c00084 	addi	r3,r3,2
  8013b8:	003fba06 	br	8012a4 <__alt_data_end+0xff8012a4>
  8013bc:	9800141e 	bne	r19,zero,801410 <__mulsf3+0x210>
  8013c0:	00c00044 	movi	r3,1
  8013c4:	003fb706 	br	8012a4 <__alt_data_end+0xff8012a4>
  8013c8:	a829883a 	mov	r20,r21
  8013cc:	00ffffc4 	movi	r3,-1
  8013d0:	0009883a 	mov	r4,zero
  8013d4:	003fdd06 	br	80134c <__alt_data_end+0xff80134c>
  8013d8:	9009883a 	mov	r4,r18
  8013dc:	d9400015 	stw	r5,0(sp)
  8013e0:	08036c80 	call	8036c8 <__clzsi2>
  8013e4:	10fffec4 	addi	r3,r2,-5
  8013e8:	10801d84 	addi	r2,r2,118
  8013ec:	90e4983a 	sll	r18,r18,r3
  8013f0:	00a1c83a 	sub	r16,zero,r2
  8013f4:	0023883a 	mov	r17,zero
  8013f8:	002f883a 	mov	r23,zero
  8013fc:	d9400017 	ldw	r5,0(sp)
  801400:	003f9a06 	br	80126c <__alt_data_end+0xff80126c>
  801404:	04400304 	movi	r17,12
  801408:	05c000c4 	movi	r23,3
  80140c:	003f9706 	br	80126c <__alt_data_end+0xff80126c>
  801410:	9809883a 	mov	r4,r19
  801414:	d9800015 	stw	r6,0(sp)
  801418:	08036c80 	call	8036c8 <__clzsi2>
  80141c:	10fffec4 	addi	r3,r2,-5
  801420:	10801d84 	addi	r2,r2,118
  801424:	98e6983a 	sll	r19,r19,r3
  801428:	0085c83a 	sub	r2,zero,r2
  80142c:	0007883a 	mov	r3,zero
  801430:	d9800017 	ldw	r6,0(sp)
  801434:	003f9b06 	br	8012a4 <__alt_data_end+0xff8012a4>
  801438:	01002034 	movhi	r4,128
  80143c:	0029883a 	mov	r20,zero
  801440:	213fffc4 	addi	r4,r4,-1
  801444:	00ffffc4 	movi	r3,-1
  801448:	003fc006 	br	80134c <__alt_data_end+0xff80134c>
  80144c:	9027883a 	mov	r19,r18
  801450:	b807883a 	mov	r3,r23
  801454:	003fb406 	br	801328 <__alt_data_end+0xff801328>
  801458:	9027883a 	mov	r19,r18
  80145c:	e02b883a 	mov	r21,fp
  801460:	b807883a 	mov	r3,r23
  801464:	003fb006 	br	801328 <__alt_data_end+0xff801328>
  801468:	9004d43a 	srli	r2,r18,16
  80146c:	9810d43a 	srli	r8,r19,16
  801470:	94bfffcc 	andi	r18,r18,65535
  801474:	993fffcc 	andi	r4,r19,65535
  801478:	910d383a 	mul	r6,r18,r4
  80147c:	20a7383a 	mul	r19,r4,r2
  801480:	9225383a 	mul	r18,r18,r8
  801484:	3006d43a 	srli	r3,r6,16
  801488:	1211383a 	mul	r8,r2,r8
  80148c:	94e5883a 	add	r18,r18,r19
  801490:	1c87883a 	add	r3,r3,r18
  801494:	1cc0022e 	bgeu	r3,r19,8014a0 <__mulsf3+0x2a0>
  801498:	00800074 	movhi	r2,1
  80149c:	4091883a 	add	r8,r8,r2
  8014a0:	1804943a 	slli	r2,r3,16
  8014a4:	31bfffcc 	andi	r6,r6,65535
  8014a8:	1806d43a 	srli	r3,r3,16
  8014ac:	1185883a 	add	r2,r2,r6
  8014b0:	102691ba 	slli	r19,r2,6
  8014b4:	1a07883a 	add	r3,r3,r8
  8014b8:	1004d6ba 	srli	r2,r2,26
  8014bc:	180891ba 	slli	r4,r3,6
  8014c0:	9826c03a 	cmpne	r19,r19,zero
  8014c4:	9884b03a 	or	r2,r19,r2
  8014c8:	1126b03a 	or	r19,r2,r4
  8014cc:	9882002c 	andhi	r2,r19,2048
  8014d0:	10000426 	beq	r2,zero,8014e4 <__mulsf3+0x2e4>
  8014d4:	9804d07a 	srli	r2,r19,1
  8014d8:	9900004c 	andi	r4,r19,1
  8014dc:	3821883a 	mov	r16,r7
  8014e0:	1126b03a 	or	r19,r2,r4
  8014e4:	80c01fc4 	addi	r3,r16,127
  8014e8:	00c0210e 	bge	zero,r3,801570 <__mulsf3+0x370>
  8014ec:	988001cc 	andi	r2,r19,7
  8014f0:	10000426 	beq	r2,zero,801504 <__mulsf3+0x304>
  8014f4:	988003cc 	andi	r2,r19,15
  8014f8:	01000104 	movi	r4,4
  8014fc:	11000126 	beq	r2,r4,801504 <__mulsf3+0x304>
  801500:	9927883a 	add	r19,r19,r4
  801504:	9882002c 	andhi	r2,r19,2048
  801508:	10000426 	beq	r2,zero,80151c <__mulsf3+0x31c>
  80150c:	00be0034 	movhi	r2,63488
  801510:	10bfffc4 	addi	r2,r2,-1
  801514:	80c02004 	addi	r3,r16,128
  801518:	98a6703a 	and	r19,r19,r2
  80151c:	00803f84 	movi	r2,254
  801520:	10ffa916 	blt	r2,r3,8013c8 <__alt_data_end+0xff8013c8>
  801524:	980891ba 	slli	r4,r19,6
  801528:	a829883a 	mov	r20,r21
  80152c:	2008d27a 	srli	r4,r4,9
  801530:	003f8606 	br	80134c <__alt_data_end+0xff80134c>
  801534:	9080102c 	andhi	r2,r18,64
  801538:	10000826 	beq	r2,zero,80155c <__mulsf3+0x35c>
  80153c:	9880102c 	andhi	r2,r19,64
  801540:	1000061e 	bne	r2,zero,80155c <__mulsf3+0x35c>
  801544:	00802034 	movhi	r2,128
  801548:	99001034 	orhi	r4,r19,64
  80154c:	10bfffc4 	addi	r2,r2,-1
  801550:	b029883a 	mov	r20,r22
  801554:	2088703a 	and	r4,r4,r2
  801558:	003fba06 	br	801444 <__alt_data_end+0xff801444>
  80155c:	00802034 	movhi	r2,128
  801560:	91001034 	orhi	r4,r18,64
  801564:	10bfffc4 	addi	r2,r2,-1
  801568:	2088703a 	and	r4,r4,r2
  80156c:	003fb506 	br	801444 <__alt_data_end+0xff801444>
  801570:	00800044 	movi	r2,1
  801574:	10c7c83a 	sub	r3,r2,r3
  801578:	008006c4 	movi	r2,27
  80157c:	10ff7016 	blt	r2,r3,801340 <__alt_data_end+0xff801340>
  801580:	00800804 	movi	r2,32
  801584:	10c5c83a 	sub	r2,r2,r3
  801588:	9884983a 	sll	r2,r19,r2
  80158c:	98c6d83a 	srl	r3,r19,r3
  801590:	1004c03a 	cmpne	r2,r2,zero
  801594:	1884b03a 	or	r2,r3,r2
  801598:	10c001cc 	andi	r3,r2,7
  80159c:	18000426 	beq	r3,zero,8015b0 <__mulsf3+0x3b0>
  8015a0:	10c003cc 	andi	r3,r2,15
  8015a4:	01000104 	movi	r4,4
  8015a8:	19000126 	beq	r3,r4,8015b0 <__mulsf3+0x3b0>
  8015ac:	1105883a 	add	r2,r2,r4
  8015b0:	10c1002c 	andhi	r3,r2,1024
  8015b4:	18000626 	beq	r3,zero,8015d0 <__mulsf3+0x3d0>
  8015b8:	a829883a 	mov	r20,r21
  8015bc:	00c00044 	movi	r3,1
  8015c0:	0009883a 	mov	r4,zero
  8015c4:	003f6106 	br	80134c <__alt_data_end+0xff80134c>
  8015c8:	3821883a 	mov	r16,r7
  8015cc:	003fc506 	br	8014e4 <__alt_data_end+0xff8014e4>
  8015d0:	100491ba 	slli	r2,r2,6
  8015d4:	a829883a 	mov	r20,r21
  8015d8:	0007883a 	mov	r3,zero
  8015dc:	1008d27a 	srli	r4,r2,9
  8015e0:	003f5a06 	br	80134c <__alt_data_end+0xff80134c>
  8015e4:	00802034 	movhi	r2,128
  8015e8:	99001034 	orhi	r4,r19,64
  8015ec:	10bfffc4 	addi	r2,r2,-1
  8015f0:	a829883a 	mov	r20,r21
  8015f4:	2088703a 	and	r4,r4,r2
  8015f8:	003f9206 	br	801444 <__alt_data_end+0xff801444>

008015fc <__subsf3>:
  8015fc:	defffc04 	addi	sp,sp,-16
  801600:	280cd5fa 	srli	r6,r5,23
  801604:	dc000015 	stw	r16,0(sp)
  801608:	01c02034 	movhi	r7,128
  80160c:	2020d5fa 	srli	r16,r4,23
  801610:	39ffffc4 	addi	r7,r7,-1
  801614:	3906703a 	and	r3,r7,r4
  801618:	dc400115 	stw	r17,4(sp)
  80161c:	394e703a 	and	r7,r7,r5
  801620:	2022d7fa 	srli	r17,r4,31
  801624:	dfc00315 	stw	ra,12(sp)
  801628:	dc800215 	stw	r18,8(sp)
  80162c:	31803fcc 	andi	r6,r6,255
  801630:	01003fc4 	movi	r4,255
  801634:	84003fcc 	andi	r16,r16,255
  801638:	180690fa 	slli	r3,r3,3
  80163c:	2804d7fa 	srli	r2,r5,31
  801640:	380e90fa 	slli	r7,r7,3
  801644:	31006d26 	beq	r6,r4,8017fc <__subsf3+0x200>
  801648:	1080005c 	xori	r2,r2,1
  80164c:	8189c83a 	sub	r4,r16,r6
  801650:	14404f26 	beq	r2,r17,801790 <__subsf3+0x194>
  801654:	0100770e 	bge	zero,r4,801834 <__subsf3+0x238>
  801658:	30001e1e 	bne	r6,zero,8016d4 <__subsf3+0xd8>
  80165c:	38006a1e 	bne	r7,zero,801808 <__subsf3+0x20c>
  801660:	188001cc 	andi	r2,r3,7
  801664:	10000426 	beq	r2,zero,801678 <__subsf3+0x7c>
  801668:	188003cc 	andi	r2,r3,15
  80166c:	01000104 	movi	r4,4
  801670:	11000126 	beq	r2,r4,801678 <__subsf3+0x7c>
  801674:	1907883a 	add	r3,r3,r4
  801678:	1881002c 	andhi	r2,r3,1024
  80167c:	10003926 	beq	r2,zero,801764 <__subsf3+0x168>
  801680:	84000044 	addi	r16,r16,1
  801684:	00803fc4 	movi	r2,255
  801688:	80807526 	beq	r16,r2,801860 <__subsf3+0x264>
  80168c:	180691ba 	slli	r3,r3,6
  801690:	8880004c 	andi	r2,r17,1
  801694:	180ad27a 	srli	r5,r3,9
  801698:	84003fcc 	andi	r16,r16,255
  80169c:	800695fa 	slli	r3,r16,23
  8016a0:	10803fcc 	andi	r2,r2,255
  8016a4:	01002034 	movhi	r4,128
  8016a8:	213fffc4 	addi	r4,r4,-1
  8016ac:	100497fa 	slli	r2,r2,31
  8016b0:	2920703a 	and	r16,r5,r4
  8016b4:	80e0b03a 	or	r16,r16,r3
  8016b8:	8084b03a 	or	r2,r16,r2
  8016bc:	dfc00317 	ldw	ra,12(sp)
  8016c0:	dc800217 	ldw	r18,8(sp)
  8016c4:	dc400117 	ldw	r17,4(sp)
  8016c8:	dc000017 	ldw	r16,0(sp)
  8016cc:	dec00404 	addi	sp,sp,16
  8016d0:	f800283a 	ret
  8016d4:	00803fc4 	movi	r2,255
  8016d8:	80bfe126 	beq	r16,r2,801660 <__alt_data_end+0xff801660>
  8016dc:	39c10034 	orhi	r7,r7,1024
  8016e0:	008006c4 	movi	r2,27
  8016e4:	11007416 	blt	r2,r4,8018b8 <__subsf3+0x2bc>
  8016e8:	00800804 	movi	r2,32
  8016ec:	1105c83a 	sub	r2,r2,r4
  8016f0:	3884983a 	sll	r2,r7,r2
  8016f4:	390ed83a 	srl	r7,r7,r4
  8016f8:	1008c03a 	cmpne	r4,r2,zero
  8016fc:	390eb03a 	or	r7,r7,r4
  801700:	19c7c83a 	sub	r3,r3,r7
  801704:	1881002c 	andhi	r2,r3,1024
  801708:	10001426 	beq	r2,zero,80175c <__subsf3+0x160>
  80170c:	04810034 	movhi	r18,1024
  801710:	94bfffc4 	addi	r18,r18,-1
  801714:	1ca4703a 	and	r18,r3,r18
  801718:	9009883a 	mov	r4,r18
  80171c:	08036c80 	call	8036c8 <__clzsi2>
  801720:	10bffec4 	addi	r2,r2,-5
  801724:	90a4983a 	sll	r18,r18,r2
  801728:	14005116 	blt	r2,r16,801870 <__subsf3+0x274>
  80172c:	1405c83a 	sub	r2,r2,r16
  801730:	10c00044 	addi	r3,r2,1
  801734:	00800804 	movi	r2,32
  801738:	10c5c83a 	sub	r2,r2,r3
  80173c:	9084983a 	sll	r2,r18,r2
  801740:	90e4d83a 	srl	r18,r18,r3
  801744:	0021883a 	mov	r16,zero
  801748:	1006c03a 	cmpne	r3,r2,zero
  80174c:	90c6b03a 	or	r3,r18,r3
  801750:	003fc306 	br	801660 <__alt_data_end+0xff801660>
  801754:	2000e026 	beq	r4,zero,801ad8 <__subsf3+0x4dc>
  801758:	2007883a 	mov	r3,r4
  80175c:	188001cc 	andi	r2,r3,7
  801760:	103fc11e 	bne	r2,zero,801668 <__alt_data_end+0xff801668>
  801764:	180ad0fa 	srli	r5,r3,3
  801768:	00c03fc4 	movi	r3,255
  80176c:	8880004c 	andi	r2,r17,1
  801770:	80c0031e 	bne	r16,r3,801780 <__subsf3+0x184>
  801774:	28006d26 	beq	r5,zero,80192c <__subsf3+0x330>
  801778:	29401034 	orhi	r5,r5,64
  80177c:	043fffc4 	movi	r16,-1
  801780:	00c02034 	movhi	r3,128
  801784:	18ffffc4 	addi	r3,r3,-1
  801788:	28ca703a 	and	r5,r5,r3
  80178c:	003fc206 	br	801698 <__alt_data_end+0xff801698>
  801790:	01003c0e 	bge	zero,r4,801884 <__subsf3+0x288>
  801794:	30002126 	beq	r6,zero,80181c <__subsf3+0x220>
  801798:	01403fc4 	movi	r5,255
  80179c:	817fb026 	beq	r16,r5,801660 <__alt_data_end+0xff801660>
  8017a0:	39c10034 	orhi	r7,r7,1024
  8017a4:	014006c4 	movi	r5,27
  8017a8:	29007416 	blt	r5,r4,80197c <__subsf3+0x380>
  8017ac:	01400804 	movi	r5,32
  8017b0:	290bc83a 	sub	r5,r5,r4
  8017b4:	394a983a 	sll	r5,r7,r5
  8017b8:	390ed83a 	srl	r7,r7,r4
  8017bc:	2808c03a 	cmpne	r4,r5,zero
  8017c0:	390eb03a 	or	r7,r7,r4
  8017c4:	19c7883a 	add	r3,r3,r7
  8017c8:	1901002c 	andhi	r4,r3,1024
  8017cc:	20003826 	beq	r4,zero,8018b0 <__subsf3+0x2b4>
  8017d0:	84000044 	addi	r16,r16,1
  8017d4:	01003fc4 	movi	r4,255
  8017d8:	81005426 	beq	r16,r4,80192c <__subsf3+0x330>
  8017dc:	1023883a 	mov	r17,r2
  8017e0:	00bf0034 	movhi	r2,64512
  8017e4:	10bfffc4 	addi	r2,r2,-1
  8017e8:	1900004c 	andi	r4,r3,1
  8017ec:	1886703a 	and	r3,r3,r2
  8017f0:	1806d07a 	srli	r3,r3,1
  8017f4:	1906b03a 	or	r3,r3,r4
  8017f8:	003f9906 	br	801660 <__alt_data_end+0xff801660>
  8017fc:	383f9226 	beq	r7,zero,801648 <__alt_data_end+0xff801648>
  801800:	10803fcc 	andi	r2,r2,255
  801804:	003f9106 	br	80164c <__alt_data_end+0xff80164c>
  801808:	213fffc4 	addi	r4,r4,-1
  80180c:	203fbc26 	beq	r4,zero,801700 <__alt_data_end+0xff801700>
  801810:	00803fc4 	movi	r2,255
  801814:	80bfb21e 	bne	r16,r2,8016e0 <__alt_data_end+0xff8016e0>
  801818:	003f9106 	br	801660 <__alt_data_end+0xff801660>
  80181c:	383f9026 	beq	r7,zero,801660 <__alt_data_end+0xff801660>
  801820:	213fffc4 	addi	r4,r4,-1
  801824:	203fe726 	beq	r4,zero,8017c4 <__alt_data_end+0xff8017c4>
  801828:	01403fc4 	movi	r5,255
  80182c:	817fdd1e 	bne	r16,r5,8017a4 <__alt_data_end+0xff8017a4>
  801830:	003f8b06 	br	801660 <__alt_data_end+0xff801660>
  801834:	2000221e 	bne	r4,zero,8018c0 <__subsf3+0x2c4>
  801838:	81000044 	addi	r4,r16,1
  80183c:	21003fcc 	andi	r4,r4,255
  801840:	01400044 	movi	r5,1
  801844:	2900470e 	bge	r5,r4,801964 <__subsf3+0x368>
  801848:	19e5c83a 	sub	r18,r3,r7
  80184c:	9141002c 	andhi	r5,r18,1024
  801850:	28002d26 	beq	r5,zero,801908 <__subsf3+0x30c>
  801854:	38e5c83a 	sub	r18,r7,r3
  801858:	1023883a 	mov	r17,r2
  80185c:	003fae06 	br	801718 <__alt_data_end+0xff801718>
  801860:	8880004c 	andi	r2,r17,1
  801864:	043fffc4 	movi	r16,-1
  801868:	000b883a 	mov	r5,zero
  80186c:	003f8a06 	br	801698 <__alt_data_end+0xff801698>
  801870:	00ff0034 	movhi	r3,64512
  801874:	18ffffc4 	addi	r3,r3,-1
  801878:	80a1c83a 	sub	r16,r16,r2
  80187c:	90c6703a 	and	r3,r18,r3
  801880:	003f7706 	br	801660 <__alt_data_end+0xff801660>
  801884:	2000431e 	bne	r4,zero,801994 <__subsf3+0x398>
  801888:	81000044 	addi	r4,r16,1
  80188c:	21803fcc 	andi	r6,r4,255
  801890:	01400044 	movi	r5,1
  801894:	2980280e 	bge	r5,r6,801938 <__subsf3+0x33c>
  801898:	01403fc4 	movi	r5,255
  80189c:	21402326 	beq	r4,r5,80192c <__subsf3+0x330>
  8018a0:	19c7883a 	add	r3,r3,r7
  8018a4:	1806d07a 	srli	r3,r3,1
  8018a8:	2021883a 	mov	r16,r4
  8018ac:	003f6c06 	br	801660 <__alt_data_end+0xff801660>
  8018b0:	1023883a 	mov	r17,r2
  8018b4:	003fa906 	br	80175c <__alt_data_end+0xff80175c>
  8018b8:	01c00044 	movi	r7,1
  8018bc:	003f9006 	br	801700 <__alt_data_end+0xff801700>
  8018c0:	8000151e 	bne	r16,zero,801918 <__subsf3+0x31c>
  8018c4:	18002f26 	beq	r3,zero,801984 <__subsf3+0x388>
  8018c8:	0108303a 	nor	r4,zero,r4
  8018cc:	20000a26 	beq	r4,zero,8018f8 <__subsf3+0x2fc>
  8018d0:	01403fc4 	movi	r5,255
  8018d4:	31402b26 	beq	r6,r5,801984 <__subsf3+0x388>
  8018d8:	014006c4 	movi	r5,27
  8018dc:	29006e16 	blt	r5,r4,801a98 <__subsf3+0x49c>
  8018e0:	01400804 	movi	r5,32
  8018e4:	290bc83a 	sub	r5,r5,r4
  8018e8:	194a983a 	sll	r5,r3,r5
  8018ec:	1908d83a 	srl	r4,r3,r4
  8018f0:	2806c03a 	cmpne	r3,r5,zero
  8018f4:	20c6b03a 	or	r3,r4,r3
  8018f8:	38c7c83a 	sub	r3,r7,r3
  8018fc:	3021883a 	mov	r16,r6
  801900:	1023883a 	mov	r17,r2
  801904:	003f7f06 	br	801704 <__alt_data_end+0xff801704>
  801908:	903f831e 	bne	r18,zero,801718 <__alt_data_end+0xff801718>
  80190c:	0005883a 	mov	r2,zero
  801910:	0021883a 	mov	r16,zero
  801914:	003f9a06 	br	801780 <__alt_data_end+0xff801780>
  801918:	01403fc4 	movi	r5,255
  80191c:	31401926 	beq	r6,r5,801984 <__subsf3+0x388>
  801920:	0109c83a 	sub	r4,zero,r4
  801924:	18c10034 	orhi	r3,r3,1024
  801928:	003feb06 	br	8018d8 <__alt_data_end+0xff8018d8>
  80192c:	043fffc4 	movi	r16,-1
  801930:	000b883a 	mov	r5,zero
  801934:	003f5806 	br	801698 <__alt_data_end+0xff801698>
  801938:	8000481e 	bne	r16,zero,801a5c <__subsf3+0x460>
  80193c:	18006226 	beq	r3,zero,801ac8 <__subsf3+0x4cc>
  801940:	383f4726 	beq	r7,zero,801660 <__alt_data_end+0xff801660>
  801944:	19c7883a 	add	r3,r3,r7
  801948:	1881002c 	andhi	r2,r3,1024
  80194c:	103f8326 	beq	r2,zero,80175c <__alt_data_end+0xff80175c>
  801950:	00bf0034 	movhi	r2,64512
  801954:	10bfffc4 	addi	r2,r2,-1
  801958:	2821883a 	mov	r16,r5
  80195c:	1886703a 	and	r3,r3,r2
  801960:	003f3f06 	br	801660 <__alt_data_end+0xff801660>
  801964:	80001c1e 	bne	r16,zero,8019d8 <__subsf3+0x3dc>
  801968:	1800261e 	bne	r3,zero,801a04 <__subsf3+0x408>
  80196c:	38004c26 	beq	r7,zero,801aa0 <__subsf3+0x4a4>
  801970:	3807883a 	mov	r3,r7
  801974:	1023883a 	mov	r17,r2
  801978:	003f3906 	br	801660 <__alt_data_end+0xff801660>
  80197c:	01c00044 	movi	r7,1
  801980:	003f9006 	br	8017c4 <__alt_data_end+0xff8017c4>
  801984:	3807883a 	mov	r3,r7
  801988:	3021883a 	mov	r16,r6
  80198c:	1023883a 	mov	r17,r2
  801990:	003f3306 	br	801660 <__alt_data_end+0xff801660>
  801994:	8000161e 	bne	r16,zero,8019f0 <__subsf3+0x3f4>
  801998:	18002d26 	beq	r3,zero,801a50 <__subsf3+0x454>
  80199c:	0108303a 	nor	r4,zero,r4
  8019a0:	20000a26 	beq	r4,zero,8019cc <__subsf3+0x3d0>
  8019a4:	01403fc4 	movi	r5,255
  8019a8:	31402926 	beq	r6,r5,801a50 <__subsf3+0x454>
  8019ac:	014006c4 	movi	r5,27
  8019b0:	29004716 	blt	r5,r4,801ad0 <__subsf3+0x4d4>
  8019b4:	01400804 	movi	r5,32
  8019b8:	290bc83a 	sub	r5,r5,r4
  8019bc:	194a983a 	sll	r5,r3,r5
  8019c0:	1908d83a 	srl	r4,r3,r4
  8019c4:	2806c03a 	cmpne	r3,r5,zero
  8019c8:	20c6b03a 	or	r3,r4,r3
  8019cc:	19c7883a 	add	r3,r3,r7
  8019d0:	3021883a 	mov	r16,r6
  8019d4:	003f7c06 	br	8017c8 <__alt_data_end+0xff8017c8>
  8019d8:	1800111e 	bne	r3,zero,801a20 <__subsf3+0x424>
  8019dc:	38003326 	beq	r7,zero,801aac <__subsf3+0x4b0>
  8019e0:	3807883a 	mov	r3,r7
  8019e4:	1023883a 	mov	r17,r2
  8019e8:	04003fc4 	movi	r16,255
  8019ec:	003f1c06 	br	801660 <__alt_data_end+0xff801660>
  8019f0:	01403fc4 	movi	r5,255
  8019f4:	31401626 	beq	r6,r5,801a50 <__subsf3+0x454>
  8019f8:	0109c83a 	sub	r4,zero,r4
  8019fc:	18c10034 	orhi	r3,r3,1024
  801a00:	003fea06 	br	8019ac <__alt_data_end+0xff8019ac>
  801a04:	383f1626 	beq	r7,zero,801660 <__alt_data_end+0xff801660>
  801a08:	19c9c83a 	sub	r4,r3,r7
  801a0c:	2141002c 	andhi	r5,r4,1024
  801a10:	283f5026 	beq	r5,zero,801754 <__alt_data_end+0xff801754>
  801a14:	38c7c83a 	sub	r3,r7,r3
  801a18:	1023883a 	mov	r17,r2
  801a1c:	003f1006 	br	801660 <__alt_data_end+0xff801660>
  801a20:	38001b26 	beq	r7,zero,801a90 <__subsf3+0x494>
  801a24:	1806d0fa 	srli	r3,r3,3
  801a28:	1900102c 	andhi	r4,r3,64
  801a2c:	20000526 	beq	r4,zero,801a44 <__subsf3+0x448>
  801a30:	380ed0fa 	srli	r7,r7,3
  801a34:	3900102c 	andhi	r4,r7,64
  801a38:	2000021e 	bne	r4,zero,801a44 <__subsf3+0x448>
  801a3c:	3807883a 	mov	r3,r7
  801a40:	1023883a 	mov	r17,r2
  801a44:	180690fa 	slli	r3,r3,3
  801a48:	04003fc4 	movi	r16,255
  801a4c:	003f0406 	br	801660 <__alt_data_end+0xff801660>
  801a50:	3807883a 	mov	r3,r7
  801a54:	3021883a 	mov	r16,r6
  801a58:	003f0106 	br	801660 <__alt_data_end+0xff801660>
  801a5c:	18001726 	beq	r3,zero,801abc <__subsf3+0x4c0>
  801a60:	38000b26 	beq	r7,zero,801a90 <__subsf3+0x494>
  801a64:	1806d0fa 	srli	r3,r3,3
  801a68:	1900102c 	andhi	r4,r3,64
  801a6c:	20000426 	beq	r4,zero,801a80 <__subsf3+0x484>
  801a70:	380ed0fa 	srli	r7,r7,3
  801a74:	3900102c 	andhi	r4,r7,64
  801a78:	2000011e 	bne	r4,zero,801a80 <__subsf3+0x484>
  801a7c:	3807883a 	mov	r3,r7
  801a80:	180690fa 	slli	r3,r3,3
  801a84:	1023883a 	mov	r17,r2
  801a88:	04003fc4 	movi	r16,255
  801a8c:	003ef406 	br	801660 <__alt_data_end+0xff801660>
  801a90:	04003fc4 	movi	r16,255
  801a94:	003ef206 	br	801660 <__alt_data_end+0xff801660>
  801a98:	00c00044 	movi	r3,1
  801a9c:	003f9606 	br	8018f8 <__alt_data_end+0xff8018f8>
  801aa0:	000b883a 	mov	r5,zero
  801aa4:	0005883a 	mov	r2,zero
  801aa8:	003f3506 	br	801780 <__alt_data_end+0xff801780>
  801aac:	01402034 	movhi	r5,128
  801ab0:	297fffc4 	addi	r5,r5,-1
  801ab4:	0005883a 	mov	r2,zero
  801ab8:	003f2f06 	br	801778 <__alt_data_end+0xff801778>
  801abc:	3807883a 	mov	r3,r7
  801ac0:	04003fc4 	movi	r16,255
  801ac4:	003ee606 	br	801660 <__alt_data_end+0xff801660>
  801ac8:	3807883a 	mov	r3,r7
  801acc:	003ee406 	br	801660 <__alt_data_end+0xff801660>
  801ad0:	00c00044 	movi	r3,1
  801ad4:	003fbd06 	br	8019cc <__alt_data_end+0xff8019cc>
  801ad8:	0005883a 	mov	r2,zero
  801adc:	003f2806 	br	801780 <__alt_data_end+0xff801780>

00801ae0 <__fixsfsi>:
  801ae0:	200ad5fa 	srli	r5,r4,23
  801ae4:	00c02034 	movhi	r3,128
  801ae8:	18ffffc4 	addi	r3,r3,-1
  801aec:	29403fcc 	andi	r5,r5,255
  801af0:	00801f84 	movi	r2,126
  801af4:	1906703a 	and	r3,r3,r4
  801af8:	2008d7fa 	srli	r4,r4,31
  801afc:	11400e0e 	bge	r2,r5,801b38 <__fixsfsi+0x58>
  801b00:	00802744 	movi	r2,157
  801b04:	11400816 	blt	r2,r5,801b28 <__fixsfsi+0x48>
  801b08:	00802544 	movi	r2,149
  801b0c:	18c02034 	orhi	r3,r3,128
  801b10:	11400b0e 	bge	r2,r5,801b40 <__fixsfsi+0x60>
  801b14:	28bfda84 	addi	r2,r5,-150
  801b18:	1884983a 	sll	r2,r3,r2
  801b1c:	20000726 	beq	r4,zero,801b3c <__fixsfsi+0x5c>
  801b20:	0085c83a 	sub	r2,zero,r2
  801b24:	f800283a 	ret
  801b28:	00a00034 	movhi	r2,32768
  801b2c:	10bfffc4 	addi	r2,r2,-1
  801b30:	2085883a 	add	r2,r4,r2
  801b34:	f800283a 	ret
  801b38:	0005883a 	mov	r2,zero
  801b3c:	f800283a 	ret
  801b40:	00802584 	movi	r2,150
  801b44:	1145c83a 	sub	r2,r2,r5
  801b48:	1884d83a 	srl	r2,r3,r2
  801b4c:	003ff306 	br	801b1c <__alt_data_end+0xff801b1c>

00801b50 <__adddf3>:
  801b50:	02c00434 	movhi	r11,16
  801b54:	5affffc4 	addi	r11,r11,-1
  801b58:	2806d7fa 	srli	r3,r5,31
  801b5c:	2ad4703a 	and	r10,r5,r11
  801b60:	3ad2703a 	and	r9,r7,r11
  801b64:	3804d53a 	srli	r2,r7,20
  801b68:	3018d77a 	srli	r12,r6,29
  801b6c:	280ad53a 	srli	r5,r5,20
  801b70:	501490fa 	slli	r10,r10,3
  801b74:	2010d77a 	srli	r8,r4,29
  801b78:	481290fa 	slli	r9,r9,3
  801b7c:	380ed7fa 	srli	r7,r7,31
  801b80:	defffb04 	addi	sp,sp,-20
  801b84:	dc800215 	stw	r18,8(sp)
  801b88:	dc400115 	stw	r17,4(sp)
  801b8c:	dc000015 	stw	r16,0(sp)
  801b90:	dfc00415 	stw	ra,16(sp)
  801b94:	dcc00315 	stw	r19,12(sp)
  801b98:	1c803fcc 	andi	r18,r3,255
  801b9c:	2c01ffcc 	andi	r16,r5,2047
  801ba0:	5210b03a 	or	r8,r10,r8
  801ba4:	202290fa 	slli	r17,r4,3
  801ba8:	1081ffcc 	andi	r2,r2,2047
  801bac:	4b12b03a 	or	r9,r9,r12
  801bb0:	300c90fa 	slli	r6,r6,3
  801bb4:	91c07526 	beq	r18,r7,801d8c <__adddf3+0x23c>
  801bb8:	8087c83a 	sub	r3,r16,r2
  801bbc:	00c0ab0e 	bge	zero,r3,801e6c <__adddf3+0x31c>
  801bc0:	10002a1e 	bne	r2,zero,801c6c <__adddf3+0x11c>
  801bc4:	4984b03a 	or	r2,r9,r6
  801bc8:	1000961e 	bne	r2,zero,801e24 <__adddf3+0x2d4>
  801bcc:	888001cc 	andi	r2,r17,7
  801bd0:	10000726 	beq	r2,zero,801bf0 <__adddf3+0xa0>
  801bd4:	888003cc 	andi	r2,r17,15
  801bd8:	00c00104 	movi	r3,4
  801bdc:	10c00426 	beq	r2,r3,801bf0 <__adddf3+0xa0>
  801be0:	88c7883a 	add	r3,r17,r3
  801be4:	1c63803a 	cmpltu	r17,r3,r17
  801be8:	4451883a 	add	r8,r8,r17
  801bec:	1823883a 	mov	r17,r3
  801bf0:	4080202c 	andhi	r2,r8,128
  801bf4:	10005926 	beq	r2,zero,801d5c <__adddf3+0x20c>
  801bf8:	84000044 	addi	r16,r16,1
  801bfc:	0081ffc4 	movi	r2,2047
  801c00:	8080ba26 	beq	r16,r2,801eec <__adddf3+0x39c>
  801c04:	00bfe034 	movhi	r2,65408
  801c08:	10bfffc4 	addi	r2,r2,-1
  801c0c:	4090703a 	and	r8,r8,r2
  801c10:	4004977a 	slli	r2,r8,29
  801c14:	4010927a 	slli	r8,r8,9
  801c18:	8822d0fa 	srli	r17,r17,3
  801c1c:	8401ffcc 	andi	r16,r16,2047
  801c20:	4010d33a 	srli	r8,r8,12
  801c24:	9007883a 	mov	r3,r18
  801c28:	1444b03a 	or	r2,r2,r17
  801c2c:	8401ffcc 	andi	r16,r16,2047
  801c30:	8020953a 	slli	r16,r16,20
  801c34:	18c03fcc 	andi	r3,r3,255
  801c38:	01000434 	movhi	r4,16
  801c3c:	213fffc4 	addi	r4,r4,-1
  801c40:	180697fa 	slli	r3,r3,31
  801c44:	4110703a 	and	r8,r8,r4
  801c48:	4410b03a 	or	r8,r8,r16
  801c4c:	40c6b03a 	or	r3,r8,r3
  801c50:	dfc00417 	ldw	ra,16(sp)
  801c54:	dcc00317 	ldw	r19,12(sp)
  801c58:	dc800217 	ldw	r18,8(sp)
  801c5c:	dc400117 	ldw	r17,4(sp)
  801c60:	dc000017 	ldw	r16,0(sp)
  801c64:	dec00504 	addi	sp,sp,20
  801c68:	f800283a 	ret
  801c6c:	0081ffc4 	movi	r2,2047
  801c70:	80bfd626 	beq	r16,r2,801bcc <__alt_data_end+0xff801bcc>
  801c74:	4a402034 	orhi	r9,r9,128
  801c78:	00800e04 	movi	r2,56
  801c7c:	10c09f16 	blt	r2,r3,801efc <__adddf3+0x3ac>
  801c80:	008007c4 	movi	r2,31
  801c84:	10c0c216 	blt	r2,r3,801f90 <__adddf3+0x440>
  801c88:	00800804 	movi	r2,32
  801c8c:	10c5c83a 	sub	r2,r2,r3
  801c90:	488a983a 	sll	r5,r9,r2
  801c94:	30c8d83a 	srl	r4,r6,r3
  801c98:	3084983a 	sll	r2,r6,r2
  801c9c:	48c6d83a 	srl	r3,r9,r3
  801ca0:	290cb03a 	or	r6,r5,r4
  801ca4:	1004c03a 	cmpne	r2,r2,zero
  801ca8:	308cb03a 	or	r6,r6,r2
  801cac:	898dc83a 	sub	r6,r17,r6
  801cb0:	89a3803a 	cmpltu	r17,r17,r6
  801cb4:	40d1c83a 	sub	r8,r8,r3
  801cb8:	4451c83a 	sub	r8,r8,r17
  801cbc:	3023883a 	mov	r17,r6
  801cc0:	4080202c 	andhi	r2,r8,128
  801cc4:	10002326 	beq	r2,zero,801d54 <__adddf3+0x204>
  801cc8:	04c02034 	movhi	r19,128
  801ccc:	9cffffc4 	addi	r19,r19,-1
  801cd0:	44e6703a 	and	r19,r8,r19
  801cd4:	98007626 	beq	r19,zero,801eb0 <__adddf3+0x360>
  801cd8:	9809883a 	mov	r4,r19
  801cdc:	08036c80 	call	8036c8 <__clzsi2>
  801ce0:	10fffe04 	addi	r3,r2,-8
  801ce4:	010007c4 	movi	r4,31
  801ce8:	20c07716 	blt	r4,r3,801ec8 <__adddf3+0x378>
  801cec:	00800804 	movi	r2,32
  801cf0:	10c5c83a 	sub	r2,r2,r3
  801cf4:	8884d83a 	srl	r2,r17,r2
  801cf8:	98d0983a 	sll	r8,r19,r3
  801cfc:	88e2983a 	sll	r17,r17,r3
  801d00:	1204b03a 	or	r2,r2,r8
  801d04:	1c007416 	blt	r3,r16,801ed8 <__adddf3+0x388>
  801d08:	1c21c83a 	sub	r16,r3,r16
  801d0c:	82000044 	addi	r8,r16,1
  801d10:	00c007c4 	movi	r3,31
  801d14:	1a009116 	blt	r3,r8,801f5c <__adddf3+0x40c>
  801d18:	00c00804 	movi	r3,32
  801d1c:	1a07c83a 	sub	r3,r3,r8
  801d20:	8a08d83a 	srl	r4,r17,r8
  801d24:	88e2983a 	sll	r17,r17,r3
  801d28:	10c6983a 	sll	r3,r2,r3
  801d2c:	1210d83a 	srl	r8,r2,r8
  801d30:	8804c03a 	cmpne	r2,r17,zero
  801d34:	1906b03a 	or	r3,r3,r4
  801d38:	18a2b03a 	or	r17,r3,r2
  801d3c:	0021883a 	mov	r16,zero
  801d40:	003fa206 	br	801bcc <__alt_data_end+0xff801bcc>
  801d44:	1890b03a 	or	r8,r3,r2
  801d48:	40017d26 	beq	r8,zero,802340 <__adddf3+0x7f0>
  801d4c:	1011883a 	mov	r8,r2
  801d50:	1823883a 	mov	r17,r3
  801d54:	888001cc 	andi	r2,r17,7
  801d58:	103f9e1e 	bne	r2,zero,801bd4 <__alt_data_end+0xff801bd4>
  801d5c:	4004977a 	slli	r2,r8,29
  801d60:	8822d0fa 	srli	r17,r17,3
  801d64:	4010d0fa 	srli	r8,r8,3
  801d68:	9007883a 	mov	r3,r18
  801d6c:	1444b03a 	or	r2,r2,r17
  801d70:	0101ffc4 	movi	r4,2047
  801d74:	81002426 	beq	r16,r4,801e08 <__adddf3+0x2b8>
  801d78:	8120703a 	and	r16,r16,r4
  801d7c:	01000434 	movhi	r4,16
  801d80:	213fffc4 	addi	r4,r4,-1
  801d84:	4110703a 	and	r8,r8,r4
  801d88:	003fa806 	br	801c2c <__alt_data_end+0xff801c2c>
  801d8c:	8089c83a 	sub	r4,r16,r2
  801d90:	01005e0e 	bge	zero,r4,801f0c <__adddf3+0x3bc>
  801d94:	10002b26 	beq	r2,zero,801e44 <__adddf3+0x2f4>
  801d98:	0081ffc4 	movi	r2,2047
  801d9c:	80bf8b26 	beq	r16,r2,801bcc <__alt_data_end+0xff801bcc>
  801da0:	4a402034 	orhi	r9,r9,128
  801da4:	00800e04 	movi	r2,56
  801da8:	1100a40e 	bge	r2,r4,80203c <__adddf3+0x4ec>
  801dac:	498cb03a 	or	r6,r9,r6
  801db0:	300ac03a 	cmpne	r5,r6,zero
  801db4:	0013883a 	mov	r9,zero
  801db8:	2c4b883a 	add	r5,r5,r17
  801dbc:	2c63803a 	cmpltu	r17,r5,r17
  801dc0:	4a11883a 	add	r8,r9,r8
  801dc4:	8a11883a 	add	r8,r17,r8
  801dc8:	2823883a 	mov	r17,r5
  801dcc:	4080202c 	andhi	r2,r8,128
  801dd0:	103fe026 	beq	r2,zero,801d54 <__alt_data_end+0xff801d54>
  801dd4:	84000044 	addi	r16,r16,1
  801dd8:	0081ffc4 	movi	r2,2047
  801ddc:	8080d226 	beq	r16,r2,802128 <__adddf3+0x5d8>
  801de0:	00bfe034 	movhi	r2,65408
  801de4:	10bfffc4 	addi	r2,r2,-1
  801de8:	4090703a 	and	r8,r8,r2
  801dec:	880ad07a 	srli	r5,r17,1
  801df0:	400897fa 	slli	r4,r8,31
  801df4:	88c0004c 	andi	r3,r17,1
  801df8:	28e2b03a 	or	r17,r5,r3
  801dfc:	4010d07a 	srli	r8,r8,1
  801e00:	2462b03a 	or	r17,r4,r17
  801e04:	003f7106 	br	801bcc <__alt_data_end+0xff801bcc>
  801e08:	4088b03a 	or	r4,r8,r2
  801e0c:	20014526 	beq	r4,zero,802324 <__adddf3+0x7d4>
  801e10:	01000434 	movhi	r4,16
  801e14:	42000234 	orhi	r8,r8,8
  801e18:	213fffc4 	addi	r4,r4,-1
  801e1c:	4110703a 	and	r8,r8,r4
  801e20:	003f8206 	br	801c2c <__alt_data_end+0xff801c2c>
  801e24:	18ffffc4 	addi	r3,r3,-1
  801e28:	1800491e 	bne	r3,zero,801f50 <__adddf3+0x400>
  801e2c:	898bc83a 	sub	r5,r17,r6
  801e30:	8963803a 	cmpltu	r17,r17,r5
  801e34:	4251c83a 	sub	r8,r8,r9
  801e38:	4451c83a 	sub	r8,r8,r17
  801e3c:	2823883a 	mov	r17,r5
  801e40:	003f9f06 	br	801cc0 <__alt_data_end+0xff801cc0>
  801e44:	4984b03a 	or	r2,r9,r6
  801e48:	103f6026 	beq	r2,zero,801bcc <__alt_data_end+0xff801bcc>
  801e4c:	213fffc4 	addi	r4,r4,-1
  801e50:	2000931e 	bne	r4,zero,8020a0 <__adddf3+0x550>
  801e54:	898d883a 	add	r6,r17,r6
  801e58:	3463803a 	cmpltu	r17,r6,r17
  801e5c:	4251883a 	add	r8,r8,r9
  801e60:	8a11883a 	add	r8,r17,r8
  801e64:	3023883a 	mov	r17,r6
  801e68:	003fd806 	br	801dcc <__alt_data_end+0xff801dcc>
  801e6c:	1800541e 	bne	r3,zero,801fc0 <__adddf3+0x470>
  801e70:	80800044 	addi	r2,r16,1
  801e74:	1081ffcc 	andi	r2,r2,2047
  801e78:	00c00044 	movi	r3,1
  801e7c:	1880a00e 	bge	r3,r2,802100 <__adddf3+0x5b0>
  801e80:	8989c83a 	sub	r4,r17,r6
  801e84:	8905803a 	cmpltu	r2,r17,r4
  801e88:	4267c83a 	sub	r19,r8,r9
  801e8c:	98a7c83a 	sub	r19,r19,r2
  801e90:	9880202c 	andhi	r2,r19,128
  801e94:	10006326 	beq	r2,zero,802024 <__adddf3+0x4d4>
  801e98:	3463c83a 	sub	r17,r6,r17
  801e9c:	4a07c83a 	sub	r3,r9,r8
  801ea0:	344d803a 	cmpltu	r6,r6,r17
  801ea4:	19a7c83a 	sub	r19,r3,r6
  801ea8:	3825883a 	mov	r18,r7
  801eac:	983f8a1e 	bne	r19,zero,801cd8 <__alt_data_end+0xff801cd8>
  801eb0:	8809883a 	mov	r4,r17
  801eb4:	08036c80 	call	8036c8 <__clzsi2>
  801eb8:	10800804 	addi	r2,r2,32
  801ebc:	10fffe04 	addi	r3,r2,-8
  801ec0:	010007c4 	movi	r4,31
  801ec4:	20ff890e 	bge	r4,r3,801cec <__alt_data_end+0xff801cec>
  801ec8:	10bff604 	addi	r2,r2,-40
  801ecc:	8884983a 	sll	r2,r17,r2
  801ed0:	0023883a 	mov	r17,zero
  801ed4:	1c3f8c0e 	bge	r3,r16,801d08 <__alt_data_end+0xff801d08>
  801ed8:	023fe034 	movhi	r8,65408
  801edc:	423fffc4 	addi	r8,r8,-1
  801ee0:	80e1c83a 	sub	r16,r16,r3
  801ee4:	1210703a 	and	r8,r2,r8
  801ee8:	003f3806 	br	801bcc <__alt_data_end+0xff801bcc>
  801eec:	9007883a 	mov	r3,r18
  801ef0:	0011883a 	mov	r8,zero
  801ef4:	0005883a 	mov	r2,zero
  801ef8:	003f4c06 	br	801c2c <__alt_data_end+0xff801c2c>
  801efc:	498cb03a 	or	r6,r9,r6
  801f00:	300cc03a 	cmpne	r6,r6,zero
  801f04:	0007883a 	mov	r3,zero
  801f08:	003f6806 	br	801cac <__alt_data_end+0xff801cac>
  801f0c:	20009c1e 	bne	r4,zero,802180 <__adddf3+0x630>
  801f10:	80800044 	addi	r2,r16,1
  801f14:	1141ffcc 	andi	r5,r2,2047
  801f18:	01000044 	movi	r4,1
  801f1c:	2140670e 	bge	r4,r5,8020bc <__adddf3+0x56c>
  801f20:	0101ffc4 	movi	r4,2047
  801f24:	11007f26 	beq	r2,r4,802124 <__adddf3+0x5d4>
  801f28:	898d883a 	add	r6,r17,r6
  801f2c:	4247883a 	add	r3,r8,r9
  801f30:	3451803a 	cmpltu	r8,r6,r17
  801f34:	40d1883a 	add	r8,r8,r3
  801f38:	402297fa 	slli	r17,r8,31
  801f3c:	300cd07a 	srli	r6,r6,1
  801f40:	4010d07a 	srli	r8,r8,1
  801f44:	1021883a 	mov	r16,r2
  801f48:	89a2b03a 	or	r17,r17,r6
  801f4c:	003f1f06 	br	801bcc <__alt_data_end+0xff801bcc>
  801f50:	0081ffc4 	movi	r2,2047
  801f54:	80bf481e 	bne	r16,r2,801c78 <__alt_data_end+0xff801c78>
  801f58:	003f1c06 	br	801bcc <__alt_data_end+0xff801bcc>
  801f5c:	843ff844 	addi	r16,r16,-31
  801f60:	01000804 	movi	r4,32
  801f64:	1406d83a 	srl	r3,r2,r16
  801f68:	41005026 	beq	r8,r4,8020ac <__adddf3+0x55c>
  801f6c:	01001004 	movi	r4,64
  801f70:	2211c83a 	sub	r8,r4,r8
  801f74:	1204983a 	sll	r2,r2,r8
  801f78:	88a2b03a 	or	r17,r17,r2
  801f7c:	8822c03a 	cmpne	r17,r17,zero
  801f80:	1c62b03a 	or	r17,r3,r17
  801f84:	0011883a 	mov	r8,zero
  801f88:	0021883a 	mov	r16,zero
  801f8c:	003f7106 	br	801d54 <__alt_data_end+0xff801d54>
  801f90:	193ff804 	addi	r4,r3,-32
  801f94:	00800804 	movi	r2,32
  801f98:	4908d83a 	srl	r4,r9,r4
  801f9c:	18804526 	beq	r3,r2,8020b4 <__adddf3+0x564>
  801fa0:	00801004 	movi	r2,64
  801fa4:	10c5c83a 	sub	r2,r2,r3
  801fa8:	4886983a 	sll	r3,r9,r2
  801fac:	198cb03a 	or	r6,r3,r6
  801fb0:	300cc03a 	cmpne	r6,r6,zero
  801fb4:	218cb03a 	or	r6,r4,r6
  801fb8:	0007883a 	mov	r3,zero
  801fbc:	003f3b06 	br	801cac <__alt_data_end+0xff801cac>
  801fc0:	80002a26 	beq	r16,zero,80206c <__adddf3+0x51c>
  801fc4:	0101ffc4 	movi	r4,2047
  801fc8:	11006826 	beq	r2,r4,80216c <__adddf3+0x61c>
  801fcc:	00c7c83a 	sub	r3,zero,r3
  801fd0:	42002034 	orhi	r8,r8,128
  801fd4:	01000e04 	movi	r4,56
  801fd8:	20c07c16 	blt	r4,r3,8021cc <__adddf3+0x67c>
  801fdc:	010007c4 	movi	r4,31
  801fe0:	20c0da16 	blt	r4,r3,80234c <__adddf3+0x7fc>
  801fe4:	01000804 	movi	r4,32
  801fe8:	20c9c83a 	sub	r4,r4,r3
  801fec:	4114983a 	sll	r10,r8,r4
  801ff0:	88cad83a 	srl	r5,r17,r3
  801ff4:	8908983a 	sll	r4,r17,r4
  801ff8:	40c6d83a 	srl	r3,r8,r3
  801ffc:	5162b03a 	or	r17,r10,r5
  802000:	2008c03a 	cmpne	r4,r4,zero
  802004:	8922b03a 	or	r17,r17,r4
  802008:	3463c83a 	sub	r17,r6,r17
  80200c:	48c7c83a 	sub	r3,r9,r3
  802010:	344d803a 	cmpltu	r6,r6,r17
  802014:	1991c83a 	sub	r8,r3,r6
  802018:	1021883a 	mov	r16,r2
  80201c:	3825883a 	mov	r18,r7
  802020:	003f2706 	br	801cc0 <__alt_data_end+0xff801cc0>
  802024:	24d0b03a 	or	r8,r4,r19
  802028:	40001b1e 	bne	r8,zero,802098 <__adddf3+0x548>
  80202c:	0005883a 	mov	r2,zero
  802030:	0007883a 	mov	r3,zero
  802034:	0021883a 	mov	r16,zero
  802038:	003f4d06 	br	801d70 <__alt_data_end+0xff801d70>
  80203c:	008007c4 	movi	r2,31
  802040:	11003c16 	blt	r2,r4,802134 <__adddf3+0x5e4>
  802044:	00800804 	movi	r2,32
  802048:	1105c83a 	sub	r2,r2,r4
  80204c:	488e983a 	sll	r7,r9,r2
  802050:	310ad83a 	srl	r5,r6,r4
  802054:	3084983a 	sll	r2,r6,r2
  802058:	4912d83a 	srl	r9,r9,r4
  80205c:	394ab03a 	or	r5,r7,r5
  802060:	1004c03a 	cmpne	r2,r2,zero
  802064:	288ab03a 	or	r5,r5,r2
  802068:	003f5306 	br	801db8 <__alt_data_end+0xff801db8>
  80206c:	4448b03a 	or	r4,r8,r17
  802070:	20003e26 	beq	r4,zero,80216c <__adddf3+0x61c>
  802074:	00c6303a 	nor	r3,zero,r3
  802078:	18003a1e 	bne	r3,zero,802164 <__adddf3+0x614>
  80207c:	3463c83a 	sub	r17,r6,r17
  802080:	4a07c83a 	sub	r3,r9,r8
  802084:	344d803a 	cmpltu	r6,r6,r17
  802088:	1991c83a 	sub	r8,r3,r6
  80208c:	1021883a 	mov	r16,r2
  802090:	3825883a 	mov	r18,r7
  802094:	003f0a06 	br	801cc0 <__alt_data_end+0xff801cc0>
  802098:	2023883a 	mov	r17,r4
  80209c:	003f0d06 	br	801cd4 <__alt_data_end+0xff801cd4>
  8020a0:	0081ffc4 	movi	r2,2047
  8020a4:	80bf3f1e 	bne	r16,r2,801da4 <__alt_data_end+0xff801da4>
  8020a8:	003ec806 	br	801bcc <__alt_data_end+0xff801bcc>
  8020ac:	0005883a 	mov	r2,zero
  8020b0:	003fb106 	br	801f78 <__alt_data_end+0xff801f78>
  8020b4:	0007883a 	mov	r3,zero
  8020b8:	003fbc06 	br	801fac <__alt_data_end+0xff801fac>
  8020bc:	4444b03a 	or	r2,r8,r17
  8020c0:	8000871e 	bne	r16,zero,8022e0 <__adddf3+0x790>
  8020c4:	1000ba26 	beq	r2,zero,8023b0 <__adddf3+0x860>
  8020c8:	4984b03a 	or	r2,r9,r6
  8020cc:	103ebf26 	beq	r2,zero,801bcc <__alt_data_end+0xff801bcc>
  8020d0:	8985883a 	add	r2,r17,r6
  8020d4:	4247883a 	add	r3,r8,r9
  8020d8:	1451803a 	cmpltu	r8,r2,r17
  8020dc:	40d1883a 	add	r8,r8,r3
  8020e0:	40c0202c 	andhi	r3,r8,128
  8020e4:	1023883a 	mov	r17,r2
  8020e8:	183f1a26 	beq	r3,zero,801d54 <__alt_data_end+0xff801d54>
  8020ec:	00bfe034 	movhi	r2,65408
  8020f0:	10bfffc4 	addi	r2,r2,-1
  8020f4:	2021883a 	mov	r16,r4
  8020f8:	4090703a 	and	r8,r8,r2
  8020fc:	003eb306 	br	801bcc <__alt_data_end+0xff801bcc>
  802100:	4444b03a 	or	r2,r8,r17
  802104:	8000291e 	bne	r16,zero,8021ac <__adddf3+0x65c>
  802108:	10004b1e 	bne	r2,zero,802238 <__adddf3+0x6e8>
  80210c:	4990b03a 	or	r8,r9,r6
  802110:	40008b26 	beq	r8,zero,802340 <__adddf3+0x7f0>
  802114:	4811883a 	mov	r8,r9
  802118:	3023883a 	mov	r17,r6
  80211c:	3825883a 	mov	r18,r7
  802120:	003eaa06 	br	801bcc <__alt_data_end+0xff801bcc>
  802124:	1021883a 	mov	r16,r2
  802128:	0011883a 	mov	r8,zero
  80212c:	0005883a 	mov	r2,zero
  802130:	003f0f06 	br	801d70 <__alt_data_end+0xff801d70>
  802134:	217ff804 	addi	r5,r4,-32
  802138:	00800804 	movi	r2,32
  80213c:	494ad83a 	srl	r5,r9,r5
  802140:	20807d26 	beq	r4,r2,802338 <__adddf3+0x7e8>
  802144:	00801004 	movi	r2,64
  802148:	1109c83a 	sub	r4,r2,r4
  80214c:	4912983a 	sll	r9,r9,r4
  802150:	498cb03a 	or	r6,r9,r6
  802154:	300cc03a 	cmpne	r6,r6,zero
  802158:	298ab03a 	or	r5,r5,r6
  80215c:	0013883a 	mov	r9,zero
  802160:	003f1506 	br	801db8 <__alt_data_end+0xff801db8>
  802164:	0101ffc4 	movi	r4,2047
  802168:	113f9a1e 	bne	r2,r4,801fd4 <__alt_data_end+0xff801fd4>
  80216c:	4811883a 	mov	r8,r9
  802170:	3023883a 	mov	r17,r6
  802174:	1021883a 	mov	r16,r2
  802178:	3825883a 	mov	r18,r7
  80217c:	003e9306 	br	801bcc <__alt_data_end+0xff801bcc>
  802180:	8000161e 	bne	r16,zero,8021dc <__adddf3+0x68c>
  802184:	444ab03a 	or	r5,r8,r17
  802188:	28005126 	beq	r5,zero,8022d0 <__adddf3+0x780>
  80218c:	0108303a 	nor	r4,zero,r4
  802190:	20004d1e 	bne	r4,zero,8022c8 <__adddf3+0x778>
  802194:	89a3883a 	add	r17,r17,r6
  802198:	4253883a 	add	r9,r8,r9
  80219c:	898d803a 	cmpltu	r6,r17,r6
  8021a0:	3251883a 	add	r8,r6,r9
  8021a4:	1021883a 	mov	r16,r2
  8021a8:	003f0806 	br	801dcc <__alt_data_end+0xff801dcc>
  8021ac:	1000301e 	bne	r2,zero,802270 <__adddf3+0x720>
  8021b0:	4984b03a 	or	r2,r9,r6
  8021b4:	10007126 	beq	r2,zero,80237c <__adddf3+0x82c>
  8021b8:	4811883a 	mov	r8,r9
  8021bc:	3023883a 	mov	r17,r6
  8021c0:	3825883a 	mov	r18,r7
  8021c4:	0401ffc4 	movi	r16,2047
  8021c8:	003e8006 	br	801bcc <__alt_data_end+0xff801bcc>
  8021cc:	4462b03a 	or	r17,r8,r17
  8021d0:	8822c03a 	cmpne	r17,r17,zero
  8021d4:	0007883a 	mov	r3,zero
  8021d8:	003f8b06 	br	802008 <__alt_data_end+0xff802008>
  8021dc:	0141ffc4 	movi	r5,2047
  8021e0:	11403b26 	beq	r2,r5,8022d0 <__adddf3+0x780>
  8021e4:	0109c83a 	sub	r4,zero,r4
  8021e8:	42002034 	orhi	r8,r8,128
  8021ec:	01400e04 	movi	r5,56
  8021f0:	29006716 	blt	r5,r4,802390 <__adddf3+0x840>
  8021f4:	014007c4 	movi	r5,31
  8021f8:	29007016 	blt	r5,r4,8023bc <__adddf3+0x86c>
  8021fc:	01400804 	movi	r5,32
  802200:	290bc83a 	sub	r5,r5,r4
  802204:	4154983a 	sll	r10,r8,r5
  802208:	890ed83a 	srl	r7,r17,r4
  80220c:	894a983a 	sll	r5,r17,r5
  802210:	4108d83a 	srl	r4,r8,r4
  802214:	51e2b03a 	or	r17,r10,r7
  802218:	280ac03a 	cmpne	r5,r5,zero
  80221c:	8962b03a 	or	r17,r17,r5
  802220:	89a3883a 	add	r17,r17,r6
  802224:	2253883a 	add	r9,r4,r9
  802228:	898d803a 	cmpltu	r6,r17,r6
  80222c:	3251883a 	add	r8,r6,r9
  802230:	1021883a 	mov	r16,r2
  802234:	003ee506 	br	801dcc <__alt_data_end+0xff801dcc>
  802238:	4984b03a 	or	r2,r9,r6
  80223c:	103e6326 	beq	r2,zero,801bcc <__alt_data_end+0xff801bcc>
  802240:	8987c83a 	sub	r3,r17,r6
  802244:	88c9803a 	cmpltu	r4,r17,r3
  802248:	4245c83a 	sub	r2,r8,r9
  80224c:	1105c83a 	sub	r2,r2,r4
  802250:	1100202c 	andhi	r4,r2,128
  802254:	203ebb26 	beq	r4,zero,801d44 <__alt_data_end+0xff801d44>
  802258:	3463c83a 	sub	r17,r6,r17
  80225c:	4a07c83a 	sub	r3,r9,r8
  802260:	344d803a 	cmpltu	r6,r6,r17
  802264:	1991c83a 	sub	r8,r3,r6
  802268:	3825883a 	mov	r18,r7
  80226c:	003e5706 	br	801bcc <__alt_data_end+0xff801bcc>
  802270:	4984b03a 	or	r2,r9,r6
  802274:	10002e26 	beq	r2,zero,802330 <__adddf3+0x7e0>
  802278:	4004d0fa 	srli	r2,r8,3
  80227c:	8822d0fa 	srli	r17,r17,3
  802280:	4010977a 	slli	r8,r8,29
  802284:	10c0022c 	andhi	r3,r2,8
  802288:	4462b03a 	or	r17,r8,r17
  80228c:	18000826 	beq	r3,zero,8022b0 <__adddf3+0x760>
  802290:	4808d0fa 	srli	r4,r9,3
  802294:	20c0022c 	andhi	r3,r4,8
  802298:	1800051e 	bne	r3,zero,8022b0 <__adddf3+0x760>
  80229c:	300cd0fa 	srli	r6,r6,3
  8022a0:	4806977a 	slli	r3,r9,29
  8022a4:	2005883a 	mov	r2,r4
  8022a8:	3825883a 	mov	r18,r7
  8022ac:	19a2b03a 	or	r17,r3,r6
  8022b0:	8810d77a 	srli	r8,r17,29
  8022b4:	100490fa 	slli	r2,r2,3
  8022b8:	882290fa 	slli	r17,r17,3
  8022bc:	0401ffc4 	movi	r16,2047
  8022c0:	4090b03a 	or	r8,r8,r2
  8022c4:	003e4106 	br	801bcc <__alt_data_end+0xff801bcc>
  8022c8:	0141ffc4 	movi	r5,2047
  8022cc:	117fc71e 	bne	r2,r5,8021ec <__alt_data_end+0xff8021ec>
  8022d0:	4811883a 	mov	r8,r9
  8022d4:	3023883a 	mov	r17,r6
  8022d8:	1021883a 	mov	r16,r2
  8022dc:	003e3b06 	br	801bcc <__alt_data_end+0xff801bcc>
  8022e0:	10002f26 	beq	r2,zero,8023a0 <__adddf3+0x850>
  8022e4:	4984b03a 	or	r2,r9,r6
  8022e8:	10001126 	beq	r2,zero,802330 <__adddf3+0x7e0>
  8022ec:	4004d0fa 	srli	r2,r8,3
  8022f0:	8822d0fa 	srli	r17,r17,3
  8022f4:	4010977a 	slli	r8,r8,29
  8022f8:	10c0022c 	andhi	r3,r2,8
  8022fc:	4462b03a 	or	r17,r8,r17
  802300:	183feb26 	beq	r3,zero,8022b0 <__alt_data_end+0xff8022b0>
  802304:	4808d0fa 	srli	r4,r9,3
  802308:	20c0022c 	andhi	r3,r4,8
  80230c:	183fe81e 	bne	r3,zero,8022b0 <__alt_data_end+0xff8022b0>
  802310:	300cd0fa 	srli	r6,r6,3
  802314:	4806977a 	slli	r3,r9,29
  802318:	2005883a 	mov	r2,r4
  80231c:	19a2b03a 	or	r17,r3,r6
  802320:	003fe306 	br	8022b0 <__alt_data_end+0xff8022b0>
  802324:	0011883a 	mov	r8,zero
  802328:	0005883a 	mov	r2,zero
  80232c:	003e3f06 	br	801c2c <__alt_data_end+0xff801c2c>
  802330:	0401ffc4 	movi	r16,2047
  802334:	003e2506 	br	801bcc <__alt_data_end+0xff801bcc>
  802338:	0013883a 	mov	r9,zero
  80233c:	003f8406 	br	802150 <__alt_data_end+0xff802150>
  802340:	0005883a 	mov	r2,zero
  802344:	0007883a 	mov	r3,zero
  802348:	003e8906 	br	801d70 <__alt_data_end+0xff801d70>
  80234c:	197ff804 	addi	r5,r3,-32
  802350:	01000804 	movi	r4,32
  802354:	414ad83a 	srl	r5,r8,r5
  802358:	19002426 	beq	r3,r4,8023ec <__adddf3+0x89c>
  80235c:	01001004 	movi	r4,64
  802360:	20c7c83a 	sub	r3,r4,r3
  802364:	40c6983a 	sll	r3,r8,r3
  802368:	1c46b03a 	or	r3,r3,r17
  80236c:	1806c03a 	cmpne	r3,r3,zero
  802370:	28e2b03a 	or	r17,r5,r3
  802374:	0007883a 	mov	r3,zero
  802378:	003f2306 	br	802008 <__alt_data_end+0xff802008>
  80237c:	0007883a 	mov	r3,zero
  802380:	5811883a 	mov	r8,r11
  802384:	00bfffc4 	movi	r2,-1
  802388:	0401ffc4 	movi	r16,2047
  80238c:	003e7806 	br	801d70 <__alt_data_end+0xff801d70>
  802390:	4462b03a 	or	r17,r8,r17
  802394:	8822c03a 	cmpne	r17,r17,zero
  802398:	0009883a 	mov	r4,zero
  80239c:	003fa006 	br	802220 <__alt_data_end+0xff802220>
  8023a0:	4811883a 	mov	r8,r9
  8023a4:	3023883a 	mov	r17,r6
  8023a8:	0401ffc4 	movi	r16,2047
  8023ac:	003e0706 	br	801bcc <__alt_data_end+0xff801bcc>
  8023b0:	4811883a 	mov	r8,r9
  8023b4:	3023883a 	mov	r17,r6
  8023b8:	003e0406 	br	801bcc <__alt_data_end+0xff801bcc>
  8023bc:	21fff804 	addi	r7,r4,-32
  8023c0:	01400804 	movi	r5,32
  8023c4:	41ced83a 	srl	r7,r8,r7
  8023c8:	21400a26 	beq	r4,r5,8023f4 <__adddf3+0x8a4>
  8023cc:	01401004 	movi	r5,64
  8023d0:	2909c83a 	sub	r4,r5,r4
  8023d4:	4108983a 	sll	r4,r8,r4
  8023d8:	2448b03a 	or	r4,r4,r17
  8023dc:	2008c03a 	cmpne	r4,r4,zero
  8023e0:	3922b03a 	or	r17,r7,r4
  8023e4:	0009883a 	mov	r4,zero
  8023e8:	003f8d06 	br	802220 <__alt_data_end+0xff802220>
  8023ec:	0007883a 	mov	r3,zero
  8023f0:	003fdd06 	br	802368 <__alt_data_end+0xff802368>
  8023f4:	0009883a 	mov	r4,zero
  8023f8:	003ff706 	br	8023d8 <__alt_data_end+0xff8023d8>

008023fc <__muldf3>:
  8023fc:	defff304 	addi	sp,sp,-52
  802400:	2804d53a 	srli	r2,r5,20
  802404:	dd800915 	stw	r22,36(sp)
  802408:	282cd7fa 	srli	r22,r5,31
  80240c:	dc000315 	stw	r16,12(sp)
  802410:	04000434 	movhi	r16,16
  802414:	dd400815 	stw	r21,32(sp)
  802418:	dc800515 	stw	r18,20(sp)
  80241c:	843fffc4 	addi	r16,r16,-1
  802420:	dfc00c15 	stw	ra,48(sp)
  802424:	df000b15 	stw	fp,44(sp)
  802428:	ddc00a15 	stw	r23,40(sp)
  80242c:	dd000715 	stw	r20,28(sp)
  802430:	dcc00615 	stw	r19,24(sp)
  802434:	dc400415 	stw	r17,16(sp)
  802438:	1481ffcc 	andi	r18,r2,2047
  80243c:	2c20703a 	and	r16,r5,r16
  802440:	b02b883a 	mov	r21,r22
  802444:	b2403fcc 	andi	r9,r22,255
  802448:	90006026 	beq	r18,zero,8025cc <__muldf3+0x1d0>
  80244c:	0081ffc4 	movi	r2,2047
  802450:	2029883a 	mov	r20,r4
  802454:	90803626 	beq	r18,r2,802530 <__muldf3+0x134>
  802458:	80800434 	orhi	r2,r16,16
  80245c:	100490fa 	slli	r2,r2,3
  802460:	2020d77a 	srli	r16,r4,29
  802464:	202890fa 	slli	r20,r4,3
  802468:	94bf0044 	addi	r18,r18,-1023
  80246c:	80a0b03a 	or	r16,r16,r2
  802470:	0027883a 	mov	r19,zero
  802474:	0039883a 	mov	fp,zero
  802478:	3804d53a 	srli	r2,r7,20
  80247c:	382ed7fa 	srli	r23,r7,31
  802480:	04400434 	movhi	r17,16
  802484:	8c7fffc4 	addi	r17,r17,-1
  802488:	1081ffcc 	andi	r2,r2,2047
  80248c:	3011883a 	mov	r8,r6
  802490:	3c62703a 	and	r17,r7,r17
  802494:	ba803fcc 	andi	r10,r23,255
  802498:	10006d26 	beq	r2,zero,802650 <__muldf3+0x254>
  80249c:	00c1ffc4 	movi	r3,2047
  8024a0:	10c06526 	beq	r2,r3,802638 <__muldf3+0x23c>
  8024a4:	88c00434 	orhi	r3,r17,16
  8024a8:	180690fa 	slli	r3,r3,3
  8024ac:	3022d77a 	srli	r17,r6,29
  8024b0:	301090fa 	slli	r8,r6,3
  8024b4:	10bf0044 	addi	r2,r2,-1023
  8024b8:	88e2b03a 	or	r17,r17,r3
  8024bc:	000b883a 	mov	r5,zero
  8024c0:	9085883a 	add	r2,r18,r2
  8024c4:	2cc8b03a 	or	r4,r5,r19
  8024c8:	00c003c4 	movi	r3,15
  8024cc:	bdacf03a 	xor	r22,r23,r22
  8024d0:	12c00044 	addi	r11,r2,1
  8024d4:	19009936 	bltu	r3,r4,80273c <__muldf3+0x340>
  8024d8:	200890ba 	slli	r4,r4,2
  8024dc:	00c02034 	movhi	r3,128
  8024e0:	18c93c04 	addi	r3,r3,9456
  8024e4:	20c9883a 	add	r4,r4,r3
  8024e8:	20c00017 	ldw	r3,0(r4)
  8024ec:	1800683a 	jmp	r3
  8024f0:	0080273c 	xorhi	r2,zero,156
  8024f4:	00802550 	cmplti	r2,zero,149
  8024f8:	00802550 	cmplti	r2,zero,149
  8024fc:	0080254c 	andi	r2,zero,149
  802500:	00802718 	cmpnei	r2,zero,156
  802504:	00802718 	cmpnei	r2,zero,156
  802508:	00802700 	call	80270 <__alt_mem_sdram-0x77fd90>
  80250c:	0080254c 	andi	r2,zero,149
  802510:	00802718 	cmpnei	r2,zero,156
  802514:	00802700 	call	80270 <__alt_mem_sdram-0x77fd90>
  802518:	00802718 	cmpnei	r2,zero,156
  80251c:	0080254c 	andi	r2,zero,149
  802520:	00802728 	cmpgeui	r2,zero,156
  802524:	00802728 	cmpgeui	r2,zero,156
  802528:	00802728 	cmpgeui	r2,zero,156
  80252c:	00802944 	movi	r2,165
  802530:	2404b03a 	or	r2,r4,r16
  802534:	10006f1e 	bne	r2,zero,8026f4 <__muldf3+0x2f8>
  802538:	04c00204 	movi	r19,8
  80253c:	0021883a 	mov	r16,zero
  802540:	0029883a 	mov	r20,zero
  802544:	07000084 	movi	fp,2
  802548:	003fcb06 	br	802478 <__alt_data_end+0xff802478>
  80254c:	502d883a 	mov	r22,r10
  802550:	00800084 	movi	r2,2
  802554:	28805726 	beq	r5,r2,8026b4 <__muldf3+0x2b8>
  802558:	008000c4 	movi	r2,3
  80255c:	28816626 	beq	r5,r2,802af8 <__muldf3+0x6fc>
  802560:	00800044 	movi	r2,1
  802564:	2881411e 	bne	r5,r2,802a6c <__muldf3+0x670>
  802568:	b02b883a 	mov	r21,r22
  80256c:	0005883a 	mov	r2,zero
  802570:	000b883a 	mov	r5,zero
  802574:	0029883a 	mov	r20,zero
  802578:	1004953a 	slli	r2,r2,20
  80257c:	a8c03fcc 	andi	r3,r21,255
  802580:	04400434 	movhi	r17,16
  802584:	8c7fffc4 	addi	r17,r17,-1
  802588:	180697fa 	slli	r3,r3,31
  80258c:	2c4a703a 	and	r5,r5,r17
  802590:	288ab03a 	or	r5,r5,r2
  802594:	28c6b03a 	or	r3,r5,r3
  802598:	a005883a 	mov	r2,r20
  80259c:	dfc00c17 	ldw	ra,48(sp)
  8025a0:	df000b17 	ldw	fp,44(sp)
  8025a4:	ddc00a17 	ldw	r23,40(sp)
  8025a8:	dd800917 	ldw	r22,36(sp)
  8025ac:	dd400817 	ldw	r21,32(sp)
  8025b0:	dd000717 	ldw	r20,28(sp)
  8025b4:	dcc00617 	ldw	r19,24(sp)
  8025b8:	dc800517 	ldw	r18,20(sp)
  8025bc:	dc400417 	ldw	r17,16(sp)
  8025c0:	dc000317 	ldw	r16,12(sp)
  8025c4:	dec00d04 	addi	sp,sp,52
  8025c8:	f800283a 	ret
  8025cc:	2404b03a 	or	r2,r4,r16
  8025d0:	2027883a 	mov	r19,r4
  8025d4:	10004226 	beq	r2,zero,8026e0 <__muldf3+0x2e4>
  8025d8:	8000fc26 	beq	r16,zero,8029cc <__muldf3+0x5d0>
  8025dc:	8009883a 	mov	r4,r16
  8025e0:	d9800215 	stw	r6,8(sp)
  8025e4:	d9c00015 	stw	r7,0(sp)
  8025e8:	da400115 	stw	r9,4(sp)
  8025ec:	08036c80 	call	8036c8 <__clzsi2>
  8025f0:	d9800217 	ldw	r6,8(sp)
  8025f4:	d9c00017 	ldw	r7,0(sp)
  8025f8:	da400117 	ldw	r9,4(sp)
  8025fc:	113ffd44 	addi	r4,r2,-11
  802600:	00c00704 	movi	r3,28
  802604:	1900ed16 	blt	r3,r4,8029bc <__muldf3+0x5c0>
  802608:	00c00744 	movi	r3,29
  80260c:	147ffe04 	addi	r17,r2,-8
  802610:	1907c83a 	sub	r3,r3,r4
  802614:	8460983a 	sll	r16,r16,r17
  802618:	98c6d83a 	srl	r3,r19,r3
  80261c:	9c68983a 	sll	r20,r19,r17
  802620:	1c20b03a 	or	r16,r3,r16
  802624:	1080fcc4 	addi	r2,r2,1011
  802628:	00a5c83a 	sub	r18,zero,r2
  80262c:	0027883a 	mov	r19,zero
  802630:	0039883a 	mov	fp,zero
  802634:	003f9006 	br	802478 <__alt_data_end+0xff802478>
  802638:	3446b03a 	or	r3,r6,r17
  80263c:	1800261e 	bne	r3,zero,8026d8 <__muldf3+0x2dc>
  802640:	0023883a 	mov	r17,zero
  802644:	0011883a 	mov	r8,zero
  802648:	01400084 	movi	r5,2
  80264c:	003f9c06 	br	8024c0 <__alt_data_end+0xff8024c0>
  802650:	3446b03a 	or	r3,r6,r17
  802654:	18001c26 	beq	r3,zero,8026c8 <__muldf3+0x2cc>
  802658:	8800ce26 	beq	r17,zero,802994 <__muldf3+0x598>
  80265c:	8809883a 	mov	r4,r17
  802660:	d9800215 	stw	r6,8(sp)
  802664:	da400115 	stw	r9,4(sp)
  802668:	da800015 	stw	r10,0(sp)
  80266c:	08036c80 	call	8036c8 <__clzsi2>
  802670:	d9800217 	ldw	r6,8(sp)
  802674:	da400117 	ldw	r9,4(sp)
  802678:	da800017 	ldw	r10,0(sp)
  80267c:	113ffd44 	addi	r4,r2,-11
  802680:	00c00704 	movi	r3,28
  802684:	1900bf16 	blt	r3,r4,802984 <__muldf3+0x588>
  802688:	00c00744 	movi	r3,29
  80268c:	123ffe04 	addi	r8,r2,-8
  802690:	1907c83a 	sub	r3,r3,r4
  802694:	8a22983a 	sll	r17,r17,r8
  802698:	30c6d83a 	srl	r3,r6,r3
  80269c:	3210983a 	sll	r8,r6,r8
  8026a0:	1c62b03a 	or	r17,r3,r17
  8026a4:	1080fcc4 	addi	r2,r2,1011
  8026a8:	0085c83a 	sub	r2,zero,r2
  8026ac:	000b883a 	mov	r5,zero
  8026b0:	003f8306 	br	8024c0 <__alt_data_end+0xff8024c0>
  8026b4:	b02b883a 	mov	r21,r22
  8026b8:	0081ffc4 	movi	r2,2047
  8026bc:	000b883a 	mov	r5,zero
  8026c0:	0029883a 	mov	r20,zero
  8026c4:	003fac06 	br	802578 <__alt_data_end+0xff802578>
  8026c8:	0023883a 	mov	r17,zero
  8026cc:	0011883a 	mov	r8,zero
  8026d0:	01400044 	movi	r5,1
  8026d4:	003f7a06 	br	8024c0 <__alt_data_end+0xff8024c0>
  8026d8:	014000c4 	movi	r5,3
  8026dc:	003f7806 	br	8024c0 <__alt_data_end+0xff8024c0>
  8026e0:	04c00104 	movi	r19,4
  8026e4:	0021883a 	mov	r16,zero
  8026e8:	0029883a 	mov	r20,zero
  8026ec:	07000044 	movi	fp,1
  8026f0:	003f6106 	br	802478 <__alt_data_end+0xff802478>
  8026f4:	04c00304 	movi	r19,12
  8026f8:	070000c4 	movi	fp,3
  8026fc:	003f5e06 	br	802478 <__alt_data_end+0xff802478>
  802700:	01400434 	movhi	r5,16
  802704:	002b883a 	mov	r21,zero
  802708:	297fffc4 	addi	r5,r5,-1
  80270c:	053fffc4 	movi	r20,-1
  802710:	0081ffc4 	movi	r2,2047
  802714:	003f9806 	br	802578 <__alt_data_end+0xff802578>
  802718:	8023883a 	mov	r17,r16
  80271c:	a011883a 	mov	r8,r20
  802720:	e00b883a 	mov	r5,fp
  802724:	003f8a06 	br	802550 <__alt_data_end+0xff802550>
  802728:	8023883a 	mov	r17,r16
  80272c:	a011883a 	mov	r8,r20
  802730:	482d883a 	mov	r22,r9
  802734:	e00b883a 	mov	r5,fp
  802738:	003f8506 	br	802550 <__alt_data_end+0xff802550>
  80273c:	a00ad43a 	srli	r5,r20,16
  802740:	401ad43a 	srli	r13,r8,16
  802744:	a53fffcc 	andi	r20,r20,65535
  802748:	423fffcc 	andi	r8,r8,65535
  80274c:	4519383a 	mul	r12,r8,r20
  802750:	4147383a 	mul	r3,r8,r5
  802754:	6d09383a 	mul	r4,r13,r20
  802758:	600cd43a 	srli	r6,r12,16
  80275c:	2b5d383a 	mul	r14,r5,r13
  802760:	20c9883a 	add	r4,r4,r3
  802764:	310d883a 	add	r6,r6,r4
  802768:	30c0022e 	bgeu	r6,r3,802774 <__muldf3+0x378>
  80276c:	00c00074 	movhi	r3,1
  802770:	70dd883a 	add	r14,r14,r3
  802774:	8826d43a 	srli	r19,r17,16
  802778:	8bffffcc 	andi	r15,r17,65535
  80277c:	7d23383a 	mul	r17,r15,r20
  802780:	7949383a 	mul	r4,r15,r5
  802784:	9d29383a 	mul	r20,r19,r20
  802788:	8814d43a 	srli	r10,r17,16
  80278c:	3012943a 	slli	r9,r6,16
  802790:	a129883a 	add	r20,r20,r4
  802794:	633fffcc 	andi	r12,r12,65535
  802798:	5515883a 	add	r10,r10,r20
  80279c:	3006d43a 	srli	r3,r6,16
  8027a0:	4b13883a 	add	r9,r9,r12
  8027a4:	2ccb383a 	mul	r5,r5,r19
  8027a8:	5100022e 	bgeu	r10,r4,8027b4 <__muldf3+0x3b8>
  8027ac:	01000074 	movhi	r4,1
  8027b0:	290b883a 	add	r5,r5,r4
  8027b4:	802ad43a 	srli	r21,r16,16
  8027b8:	843fffcc 	andi	r16,r16,65535
  8027bc:	440d383a 	mul	r6,r8,r16
  8027c0:	4565383a 	mul	r18,r8,r21
  8027c4:	8349383a 	mul	r4,r16,r13
  8027c8:	500e943a 	slli	r7,r10,16
  8027cc:	3010d43a 	srli	r8,r6,16
  8027d0:	5028d43a 	srli	r20,r10,16
  8027d4:	2489883a 	add	r4,r4,r18
  8027d8:	8abfffcc 	andi	r10,r17,65535
  8027dc:	3a95883a 	add	r10,r7,r10
  8027e0:	4119883a 	add	r12,r8,r4
  8027e4:	a169883a 	add	r20,r20,r5
  8027e8:	1a87883a 	add	r3,r3,r10
  8027ec:	6d5b383a 	mul	r13,r13,r21
  8027f0:	6480022e 	bgeu	r12,r18,8027fc <__muldf3+0x400>
  8027f4:	01000074 	movhi	r4,1
  8027f8:	691b883a 	add	r13,r13,r4
  8027fc:	7c25383a 	mul	r18,r15,r16
  802800:	7d4b383a 	mul	r5,r15,r21
  802804:	84cf383a 	mul	r7,r16,r19
  802808:	901ed43a 	srli	r15,r18,16
  80280c:	6008d43a 	srli	r4,r12,16
  802810:	6010943a 	slli	r8,r12,16
  802814:	394f883a 	add	r7,r7,r5
  802818:	333fffcc 	andi	r12,r6,65535
  80281c:	79df883a 	add	r15,r15,r7
  802820:	235b883a 	add	r13,r4,r13
  802824:	9d63383a 	mul	r17,r19,r21
  802828:	4309883a 	add	r4,r8,r12
  80282c:	7940022e 	bgeu	r15,r5,802838 <__muldf3+0x43c>
  802830:	01400074 	movhi	r5,1
  802834:	8963883a 	add	r17,r17,r5
  802838:	780a943a 	slli	r5,r15,16
  80283c:	91bfffcc 	andi	r6,r18,65535
  802840:	70c7883a 	add	r3,r14,r3
  802844:	298d883a 	add	r6,r5,r6
  802848:	1a8f803a 	cmpltu	r7,r3,r10
  80284c:	350b883a 	add	r5,r6,r20
  802850:	20c7883a 	add	r3,r4,r3
  802854:	3955883a 	add	r10,r7,r5
  802858:	1909803a 	cmpltu	r4,r3,r4
  80285c:	6a91883a 	add	r8,r13,r10
  802860:	780cd43a 	srli	r6,r15,16
  802864:	2219883a 	add	r12,r4,r8
  802868:	2d0b803a 	cmpltu	r5,r5,r20
  80286c:	51cf803a 	cmpltu	r7,r10,r7
  802870:	29ceb03a 	or	r7,r5,r7
  802874:	4351803a 	cmpltu	r8,r8,r13
  802878:	610b803a 	cmpltu	r5,r12,r4
  80287c:	4148b03a 	or	r4,r8,r5
  802880:	398f883a 	add	r7,r7,r6
  802884:	3909883a 	add	r4,r7,r4
  802888:	1810927a 	slli	r8,r3,9
  80288c:	2449883a 	add	r4,r4,r17
  802890:	2008927a 	slli	r4,r4,9
  802894:	6022d5fa 	srli	r17,r12,23
  802898:	1806d5fa 	srli	r3,r3,23
  80289c:	4252b03a 	or	r9,r8,r9
  8028a0:	600a927a 	slli	r5,r12,9
  8028a4:	4810c03a 	cmpne	r8,r9,zero
  8028a8:	2462b03a 	or	r17,r4,r17
  8028ac:	40c6b03a 	or	r3,r8,r3
  8028b0:	8900402c 	andhi	r4,r17,256
  8028b4:	1950b03a 	or	r8,r3,r5
  8028b8:	20000726 	beq	r4,zero,8028d8 <__muldf3+0x4dc>
  8028bc:	4006d07a 	srli	r3,r8,1
  8028c0:	880497fa 	slli	r2,r17,31
  8028c4:	4200004c 	andi	r8,r8,1
  8028c8:	8822d07a 	srli	r17,r17,1
  8028cc:	1a10b03a 	or	r8,r3,r8
  8028d0:	1210b03a 	or	r8,r2,r8
  8028d4:	5805883a 	mov	r2,r11
  8028d8:	1140ffc4 	addi	r5,r2,1023
  8028dc:	0140440e 	bge	zero,r5,8029f0 <__muldf3+0x5f4>
  8028e0:	40c001cc 	andi	r3,r8,7
  8028e4:	18000726 	beq	r3,zero,802904 <__muldf3+0x508>
  8028e8:	40c003cc 	andi	r3,r8,15
  8028ec:	01000104 	movi	r4,4
  8028f0:	19000426 	beq	r3,r4,802904 <__muldf3+0x508>
  8028f4:	4107883a 	add	r3,r8,r4
  8028f8:	1a11803a 	cmpltu	r8,r3,r8
  8028fc:	8a23883a 	add	r17,r17,r8
  802900:	1811883a 	mov	r8,r3
  802904:	88c0402c 	andhi	r3,r17,256
  802908:	18000426 	beq	r3,zero,80291c <__muldf3+0x520>
  80290c:	11410004 	addi	r5,r2,1024
  802910:	00bfc034 	movhi	r2,65280
  802914:	10bfffc4 	addi	r2,r2,-1
  802918:	88a2703a 	and	r17,r17,r2
  80291c:	0081ff84 	movi	r2,2046
  802920:	117f6416 	blt	r2,r5,8026b4 <__alt_data_end+0xff8026b4>
  802924:	8828977a 	slli	r20,r17,29
  802928:	4010d0fa 	srli	r8,r8,3
  80292c:	8822927a 	slli	r17,r17,9
  802930:	2881ffcc 	andi	r2,r5,2047
  802934:	a228b03a 	or	r20,r20,r8
  802938:	880ad33a 	srli	r5,r17,12
  80293c:	b02b883a 	mov	r21,r22
  802940:	003f0d06 	br	802578 <__alt_data_end+0xff802578>
  802944:	8080022c 	andhi	r2,r16,8
  802948:	10000926 	beq	r2,zero,802970 <__muldf3+0x574>
  80294c:	8880022c 	andhi	r2,r17,8
  802950:	1000071e 	bne	r2,zero,802970 <__muldf3+0x574>
  802954:	00800434 	movhi	r2,16
  802958:	89400234 	orhi	r5,r17,8
  80295c:	10bfffc4 	addi	r2,r2,-1
  802960:	b82b883a 	mov	r21,r23
  802964:	288a703a 	and	r5,r5,r2
  802968:	4029883a 	mov	r20,r8
  80296c:	003f6806 	br	802710 <__alt_data_end+0xff802710>
  802970:	00800434 	movhi	r2,16
  802974:	81400234 	orhi	r5,r16,8
  802978:	10bfffc4 	addi	r2,r2,-1
  80297c:	288a703a 	and	r5,r5,r2
  802980:	003f6306 	br	802710 <__alt_data_end+0xff802710>
  802984:	147ff604 	addi	r17,r2,-40
  802988:	3462983a 	sll	r17,r6,r17
  80298c:	0011883a 	mov	r8,zero
  802990:	003f4406 	br	8026a4 <__alt_data_end+0xff8026a4>
  802994:	3009883a 	mov	r4,r6
  802998:	d9800215 	stw	r6,8(sp)
  80299c:	da400115 	stw	r9,4(sp)
  8029a0:	da800015 	stw	r10,0(sp)
  8029a4:	08036c80 	call	8036c8 <__clzsi2>
  8029a8:	10800804 	addi	r2,r2,32
  8029ac:	da800017 	ldw	r10,0(sp)
  8029b0:	da400117 	ldw	r9,4(sp)
  8029b4:	d9800217 	ldw	r6,8(sp)
  8029b8:	003f3006 	br	80267c <__alt_data_end+0xff80267c>
  8029bc:	143ff604 	addi	r16,r2,-40
  8029c0:	9c20983a 	sll	r16,r19,r16
  8029c4:	0029883a 	mov	r20,zero
  8029c8:	003f1606 	br	802624 <__alt_data_end+0xff802624>
  8029cc:	d9800215 	stw	r6,8(sp)
  8029d0:	d9c00015 	stw	r7,0(sp)
  8029d4:	da400115 	stw	r9,4(sp)
  8029d8:	08036c80 	call	8036c8 <__clzsi2>
  8029dc:	10800804 	addi	r2,r2,32
  8029e0:	da400117 	ldw	r9,4(sp)
  8029e4:	d9c00017 	ldw	r7,0(sp)
  8029e8:	d9800217 	ldw	r6,8(sp)
  8029ec:	003f0306 	br	8025fc <__alt_data_end+0xff8025fc>
  8029f0:	00c00044 	movi	r3,1
  8029f4:	1947c83a 	sub	r3,r3,r5
  8029f8:	00800e04 	movi	r2,56
  8029fc:	10feda16 	blt	r2,r3,802568 <__alt_data_end+0xff802568>
  802a00:	008007c4 	movi	r2,31
  802a04:	10c01b16 	blt	r2,r3,802a74 <__muldf3+0x678>
  802a08:	00800804 	movi	r2,32
  802a0c:	10c5c83a 	sub	r2,r2,r3
  802a10:	888a983a 	sll	r5,r17,r2
  802a14:	40c8d83a 	srl	r4,r8,r3
  802a18:	4084983a 	sll	r2,r8,r2
  802a1c:	88e2d83a 	srl	r17,r17,r3
  802a20:	2906b03a 	or	r3,r5,r4
  802a24:	1004c03a 	cmpne	r2,r2,zero
  802a28:	1886b03a 	or	r3,r3,r2
  802a2c:	188001cc 	andi	r2,r3,7
  802a30:	10000726 	beq	r2,zero,802a50 <__muldf3+0x654>
  802a34:	188003cc 	andi	r2,r3,15
  802a38:	01000104 	movi	r4,4
  802a3c:	11000426 	beq	r2,r4,802a50 <__muldf3+0x654>
  802a40:	1805883a 	mov	r2,r3
  802a44:	10c00104 	addi	r3,r2,4
  802a48:	1885803a 	cmpltu	r2,r3,r2
  802a4c:	88a3883a 	add	r17,r17,r2
  802a50:	8880202c 	andhi	r2,r17,128
  802a54:	10001c26 	beq	r2,zero,802ac8 <__muldf3+0x6cc>
  802a58:	b02b883a 	mov	r21,r22
  802a5c:	00800044 	movi	r2,1
  802a60:	000b883a 	mov	r5,zero
  802a64:	0029883a 	mov	r20,zero
  802a68:	003ec306 	br	802578 <__alt_data_end+0xff802578>
  802a6c:	5805883a 	mov	r2,r11
  802a70:	003f9906 	br	8028d8 <__alt_data_end+0xff8028d8>
  802a74:	00bff844 	movi	r2,-31
  802a78:	1145c83a 	sub	r2,r2,r5
  802a7c:	8888d83a 	srl	r4,r17,r2
  802a80:	00800804 	movi	r2,32
  802a84:	18801a26 	beq	r3,r2,802af0 <__muldf3+0x6f4>
  802a88:	00801004 	movi	r2,64
  802a8c:	10c5c83a 	sub	r2,r2,r3
  802a90:	8884983a 	sll	r2,r17,r2
  802a94:	1204b03a 	or	r2,r2,r8
  802a98:	1004c03a 	cmpne	r2,r2,zero
  802a9c:	2084b03a 	or	r2,r4,r2
  802aa0:	144001cc 	andi	r17,r2,7
  802aa4:	88000d1e 	bne	r17,zero,802adc <__muldf3+0x6e0>
  802aa8:	000b883a 	mov	r5,zero
  802aac:	1028d0fa 	srli	r20,r2,3
  802ab0:	b02b883a 	mov	r21,r22
  802ab4:	0005883a 	mov	r2,zero
  802ab8:	a468b03a 	or	r20,r20,r17
  802abc:	003eae06 	br	802578 <__alt_data_end+0xff802578>
  802ac0:	1007883a 	mov	r3,r2
  802ac4:	0023883a 	mov	r17,zero
  802ac8:	880a927a 	slli	r5,r17,9
  802acc:	1805883a 	mov	r2,r3
  802ad0:	8822977a 	slli	r17,r17,29
  802ad4:	280ad33a 	srli	r5,r5,12
  802ad8:	003ff406 	br	802aac <__alt_data_end+0xff802aac>
  802adc:	10c003cc 	andi	r3,r2,15
  802ae0:	01000104 	movi	r4,4
  802ae4:	193ff626 	beq	r3,r4,802ac0 <__alt_data_end+0xff802ac0>
  802ae8:	0023883a 	mov	r17,zero
  802aec:	003fd506 	br	802a44 <__alt_data_end+0xff802a44>
  802af0:	0005883a 	mov	r2,zero
  802af4:	003fe706 	br	802a94 <__alt_data_end+0xff802a94>
  802af8:	00800434 	movhi	r2,16
  802afc:	89400234 	orhi	r5,r17,8
  802b00:	10bfffc4 	addi	r2,r2,-1
  802b04:	b02b883a 	mov	r21,r22
  802b08:	288a703a 	and	r5,r5,r2
  802b0c:	4029883a 	mov	r20,r8
  802b10:	003eff06 	br	802710 <__alt_data_end+0xff802710>

00802b14 <__subdf3>:
  802b14:	02000434 	movhi	r8,16
  802b18:	423fffc4 	addi	r8,r8,-1
  802b1c:	defffb04 	addi	sp,sp,-20
  802b20:	2a14703a 	and	r10,r5,r8
  802b24:	3812d53a 	srli	r9,r7,20
  802b28:	3a10703a 	and	r8,r7,r8
  802b2c:	2006d77a 	srli	r3,r4,29
  802b30:	3004d77a 	srli	r2,r6,29
  802b34:	dc000015 	stw	r16,0(sp)
  802b38:	501490fa 	slli	r10,r10,3
  802b3c:	2820d53a 	srli	r16,r5,20
  802b40:	401090fa 	slli	r8,r8,3
  802b44:	dc800215 	stw	r18,8(sp)
  802b48:	dc400115 	stw	r17,4(sp)
  802b4c:	dfc00415 	stw	ra,16(sp)
  802b50:	202290fa 	slli	r17,r4,3
  802b54:	dcc00315 	stw	r19,12(sp)
  802b58:	4a41ffcc 	andi	r9,r9,2047
  802b5c:	0101ffc4 	movi	r4,2047
  802b60:	2824d7fa 	srli	r18,r5,31
  802b64:	8401ffcc 	andi	r16,r16,2047
  802b68:	50c6b03a 	or	r3,r10,r3
  802b6c:	380ed7fa 	srli	r7,r7,31
  802b70:	408ab03a 	or	r5,r8,r2
  802b74:	300c90fa 	slli	r6,r6,3
  802b78:	49009626 	beq	r9,r4,802dd4 <__subdf3+0x2c0>
  802b7c:	39c0005c 	xori	r7,r7,1
  802b80:	8245c83a 	sub	r2,r16,r9
  802b84:	3c807426 	beq	r7,r18,802d58 <__subdf3+0x244>
  802b88:	0080af0e 	bge	zero,r2,802e48 <__subdf3+0x334>
  802b8c:	48002a1e 	bne	r9,zero,802c38 <__subdf3+0x124>
  802b90:	2988b03a 	or	r4,r5,r6
  802b94:	20009a1e 	bne	r4,zero,802e00 <__subdf3+0x2ec>
  802b98:	888001cc 	andi	r2,r17,7
  802b9c:	10000726 	beq	r2,zero,802bbc <__subdf3+0xa8>
  802ba0:	888003cc 	andi	r2,r17,15
  802ba4:	01000104 	movi	r4,4
  802ba8:	11000426 	beq	r2,r4,802bbc <__subdf3+0xa8>
  802bac:	890b883a 	add	r5,r17,r4
  802bb0:	2c63803a 	cmpltu	r17,r5,r17
  802bb4:	1c47883a 	add	r3,r3,r17
  802bb8:	2823883a 	mov	r17,r5
  802bbc:	1880202c 	andhi	r2,r3,128
  802bc0:	10005926 	beq	r2,zero,802d28 <__subdf3+0x214>
  802bc4:	84000044 	addi	r16,r16,1
  802bc8:	0081ffc4 	movi	r2,2047
  802bcc:	8080be26 	beq	r16,r2,802ec8 <__subdf3+0x3b4>
  802bd0:	017fe034 	movhi	r5,65408
  802bd4:	297fffc4 	addi	r5,r5,-1
  802bd8:	1946703a 	and	r3,r3,r5
  802bdc:	1804977a 	slli	r2,r3,29
  802be0:	1806927a 	slli	r3,r3,9
  802be4:	8822d0fa 	srli	r17,r17,3
  802be8:	8401ffcc 	andi	r16,r16,2047
  802bec:	180ad33a 	srli	r5,r3,12
  802bf0:	9100004c 	andi	r4,r18,1
  802bf4:	1444b03a 	or	r2,r2,r17
  802bf8:	80c1ffcc 	andi	r3,r16,2047
  802bfc:	1820953a 	slli	r16,r3,20
  802c00:	20c03fcc 	andi	r3,r4,255
  802c04:	180897fa 	slli	r4,r3,31
  802c08:	00c00434 	movhi	r3,16
  802c0c:	18ffffc4 	addi	r3,r3,-1
  802c10:	28c6703a 	and	r3,r5,r3
  802c14:	1c06b03a 	or	r3,r3,r16
  802c18:	1906b03a 	or	r3,r3,r4
  802c1c:	dfc00417 	ldw	ra,16(sp)
  802c20:	dcc00317 	ldw	r19,12(sp)
  802c24:	dc800217 	ldw	r18,8(sp)
  802c28:	dc400117 	ldw	r17,4(sp)
  802c2c:	dc000017 	ldw	r16,0(sp)
  802c30:	dec00504 	addi	sp,sp,20
  802c34:	f800283a 	ret
  802c38:	0101ffc4 	movi	r4,2047
  802c3c:	813fd626 	beq	r16,r4,802b98 <__alt_data_end+0xff802b98>
  802c40:	29402034 	orhi	r5,r5,128
  802c44:	01000e04 	movi	r4,56
  802c48:	2080a316 	blt	r4,r2,802ed8 <__subdf3+0x3c4>
  802c4c:	010007c4 	movi	r4,31
  802c50:	2080c616 	blt	r4,r2,802f6c <__subdf3+0x458>
  802c54:	01000804 	movi	r4,32
  802c58:	2089c83a 	sub	r4,r4,r2
  802c5c:	2910983a 	sll	r8,r5,r4
  802c60:	308ed83a 	srl	r7,r6,r2
  802c64:	3108983a 	sll	r4,r6,r4
  802c68:	2884d83a 	srl	r2,r5,r2
  802c6c:	41ccb03a 	or	r6,r8,r7
  802c70:	2008c03a 	cmpne	r4,r4,zero
  802c74:	310cb03a 	or	r6,r6,r4
  802c78:	898dc83a 	sub	r6,r17,r6
  802c7c:	89a3803a 	cmpltu	r17,r17,r6
  802c80:	1887c83a 	sub	r3,r3,r2
  802c84:	1c47c83a 	sub	r3,r3,r17
  802c88:	3023883a 	mov	r17,r6
  802c8c:	1880202c 	andhi	r2,r3,128
  802c90:	10002326 	beq	r2,zero,802d20 <__subdf3+0x20c>
  802c94:	04c02034 	movhi	r19,128
  802c98:	9cffffc4 	addi	r19,r19,-1
  802c9c:	1ce6703a 	and	r19,r3,r19
  802ca0:	98007a26 	beq	r19,zero,802e8c <__subdf3+0x378>
  802ca4:	9809883a 	mov	r4,r19
  802ca8:	08036c80 	call	8036c8 <__clzsi2>
  802cac:	113ffe04 	addi	r4,r2,-8
  802cb0:	00c007c4 	movi	r3,31
  802cb4:	19007b16 	blt	r3,r4,802ea4 <__subdf3+0x390>
  802cb8:	00800804 	movi	r2,32
  802cbc:	1105c83a 	sub	r2,r2,r4
  802cc0:	8884d83a 	srl	r2,r17,r2
  802cc4:	9906983a 	sll	r3,r19,r4
  802cc8:	8922983a 	sll	r17,r17,r4
  802ccc:	10c4b03a 	or	r2,r2,r3
  802cd0:	24007816 	blt	r4,r16,802eb4 <__subdf3+0x3a0>
  802cd4:	2421c83a 	sub	r16,r4,r16
  802cd8:	80c00044 	addi	r3,r16,1
  802cdc:	010007c4 	movi	r4,31
  802ce0:	20c09516 	blt	r4,r3,802f38 <__subdf3+0x424>
  802ce4:	01400804 	movi	r5,32
  802ce8:	28cbc83a 	sub	r5,r5,r3
  802cec:	88c8d83a 	srl	r4,r17,r3
  802cf0:	8962983a 	sll	r17,r17,r5
  802cf4:	114a983a 	sll	r5,r2,r5
  802cf8:	10c6d83a 	srl	r3,r2,r3
  802cfc:	8804c03a 	cmpne	r2,r17,zero
  802d00:	290ab03a 	or	r5,r5,r4
  802d04:	28a2b03a 	or	r17,r5,r2
  802d08:	0021883a 	mov	r16,zero
  802d0c:	003fa206 	br	802b98 <__alt_data_end+0xff802b98>
  802d10:	2090b03a 	or	r8,r4,r2
  802d14:	40018e26 	beq	r8,zero,803350 <__subdf3+0x83c>
  802d18:	1007883a 	mov	r3,r2
  802d1c:	2023883a 	mov	r17,r4
  802d20:	888001cc 	andi	r2,r17,7
  802d24:	103f9e1e 	bne	r2,zero,802ba0 <__alt_data_end+0xff802ba0>
  802d28:	1804977a 	slli	r2,r3,29
  802d2c:	8822d0fa 	srli	r17,r17,3
  802d30:	1810d0fa 	srli	r8,r3,3
  802d34:	9100004c 	andi	r4,r18,1
  802d38:	1444b03a 	or	r2,r2,r17
  802d3c:	00c1ffc4 	movi	r3,2047
  802d40:	80c02826 	beq	r16,r3,802de4 <__subdf3+0x2d0>
  802d44:	01400434 	movhi	r5,16
  802d48:	297fffc4 	addi	r5,r5,-1
  802d4c:	80e0703a 	and	r16,r16,r3
  802d50:	414a703a 	and	r5,r8,r5
  802d54:	003fa806 	br	802bf8 <__alt_data_end+0xff802bf8>
  802d58:	0080630e 	bge	zero,r2,802ee8 <__subdf3+0x3d4>
  802d5c:	48003026 	beq	r9,zero,802e20 <__subdf3+0x30c>
  802d60:	0101ffc4 	movi	r4,2047
  802d64:	813f8c26 	beq	r16,r4,802b98 <__alt_data_end+0xff802b98>
  802d68:	29402034 	orhi	r5,r5,128
  802d6c:	01000e04 	movi	r4,56
  802d70:	2080a90e 	bge	r4,r2,803018 <__subdf3+0x504>
  802d74:	298cb03a 	or	r6,r5,r6
  802d78:	3012c03a 	cmpne	r9,r6,zero
  802d7c:	0005883a 	mov	r2,zero
  802d80:	4c53883a 	add	r9,r9,r17
  802d84:	4c63803a 	cmpltu	r17,r9,r17
  802d88:	10c7883a 	add	r3,r2,r3
  802d8c:	88c7883a 	add	r3,r17,r3
  802d90:	4823883a 	mov	r17,r9
  802d94:	1880202c 	andhi	r2,r3,128
  802d98:	1000d026 	beq	r2,zero,8030dc <__subdf3+0x5c8>
  802d9c:	84000044 	addi	r16,r16,1
  802da0:	0081ffc4 	movi	r2,2047
  802da4:	8080fe26 	beq	r16,r2,8031a0 <__subdf3+0x68c>
  802da8:	00bfe034 	movhi	r2,65408
  802dac:	10bfffc4 	addi	r2,r2,-1
  802db0:	1886703a 	and	r3,r3,r2
  802db4:	880ad07a 	srli	r5,r17,1
  802db8:	180497fa 	slli	r2,r3,31
  802dbc:	8900004c 	andi	r4,r17,1
  802dc0:	2922b03a 	or	r17,r5,r4
  802dc4:	1806d07a 	srli	r3,r3,1
  802dc8:	1462b03a 	or	r17,r2,r17
  802dcc:	3825883a 	mov	r18,r7
  802dd0:	003f7106 	br	802b98 <__alt_data_end+0xff802b98>
  802dd4:	2984b03a 	or	r2,r5,r6
  802dd8:	103f6826 	beq	r2,zero,802b7c <__alt_data_end+0xff802b7c>
  802ddc:	39c03fcc 	andi	r7,r7,255
  802de0:	003f6706 	br	802b80 <__alt_data_end+0xff802b80>
  802de4:	4086b03a 	or	r3,r8,r2
  802de8:	18015226 	beq	r3,zero,803334 <__subdf3+0x820>
  802dec:	00c00434 	movhi	r3,16
  802df0:	41400234 	orhi	r5,r8,8
  802df4:	18ffffc4 	addi	r3,r3,-1
  802df8:	28ca703a 	and	r5,r5,r3
  802dfc:	003f7e06 	br	802bf8 <__alt_data_end+0xff802bf8>
  802e00:	10bfffc4 	addi	r2,r2,-1
  802e04:	1000491e 	bne	r2,zero,802f2c <__subdf3+0x418>
  802e08:	898fc83a 	sub	r7,r17,r6
  802e0c:	89e3803a 	cmpltu	r17,r17,r7
  802e10:	1947c83a 	sub	r3,r3,r5
  802e14:	1c47c83a 	sub	r3,r3,r17
  802e18:	3823883a 	mov	r17,r7
  802e1c:	003f9b06 	br	802c8c <__alt_data_end+0xff802c8c>
  802e20:	2988b03a 	or	r4,r5,r6
  802e24:	203f5c26 	beq	r4,zero,802b98 <__alt_data_end+0xff802b98>
  802e28:	10bfffc4 	addi	r2,r2,-1
  802e2c:	1000931e 	bne	r2,zero,80307c <__subdf3+0x568>
  802e30:	898d883a 	add	r6,r17,r6
  802e34:	3463803a 	cmpltu	r17,r6,r17
  802e38:	1947883a 	add	r3,r3,r5
  802e3c:	88c7883a 	add	r3,r17,r3
  802e40:	3023883a 	mov	r17,r6
  802e44:	003fd306 	br	802d94 <__alt_data_end+0xff802d94>
  802e48:	1000541e 	bne	r2,zero,802f9c <__subdf3+0x488>
  802e4c:	80800044 	addi	r2,r16,1
  802e50:	1081ffcc 	andi	r2,r2,2047
  802e54:	01000044 	movi	r4,1
  802e58:	2080a20e 	bge	r4,r2,8030e4 <__subdf3+0x5d0>
  802e5c:	8989c83a 	sub	r4,r17,r6
  802e60:	8905803a 	cmpltu	r2,r17,r4
  802e64:	1967c83a 	sub	r19,r3,r5
  802e68:	98a7c83a 	sub	r19,r19,r2
  802e6c:	9880202c 	andhi	r2,r19,128
  802e70:	10006326 	beq	r2,zero,803000 <__subdf3+0x4ec>
  802e74:	3463c83a 	sub	r17,r6,r17
  802e78:	28c7c83a 	sub	r3,r5,r3
  802e7c:	344d803a 	cmpltu	r6,r6,r17
  802e80:	19a7c83a 	sub	r19,r3,r6
  802e84:	3825883a 	mov	r18,r7
  802e88:	983f861e 	bne	r19,zero,802ca4 <__alt_data_end+0xff802ca4>
  802e8c:	8809883a 	mov	r4,r17
  802e90:	08036c80 	call	8036c8 <__clzsi2>
  802e94:	10800804 	addi	r2,r2,32
  802e98:	113ffe04 	addi	r4,r2,-8
  802e9c:	00c007c4 	movi	r3,31
  802ea0:	193f850e 	bge	r3,r4,802cb8 <__alt_data_end+0xff802cb8>
  802ea4:	10bff604 	addi	r2,r2,-40
  802ea8:	8884983a 	sll	r2,r17,r2
  802eac:	0023883a 	mov	r17,zero
  802eb0:	243f880e 	bge	r4,r16,802cd4 <__alt_data_end+0xff802cd4>
  802eb4:	00ffe034 	movhi	r3,65408
  802eb8:	18ffffc4 	addi	r3,r3,-1
  802ebc:	8121c83a 	sub	r16,r16,r4
  802ec0:	10c6703a 	and	r3,r2,r3
  802ec4:	003f3406 	br	802b98 <__alt_data_end+0xff802b98>
  802ec8:	9100004c 	andi	r4,r18,1
  802ecc:	000b883a 	mov	r5,zero
  802ed0:	0005883a 	mov	r2,zero
  802ed4:	003f4806 	br	802bf8 <__alt_data_end+0xff802bf8>
  802ed8:	298cb03a 	or	r6,r5,r6
  802edc:	300cc03a 	cmpne	r6,r6,zero
  802ee0:	0005883a 	mov	r2,zero
  802ee4:	003f6406 	br	802c78 <__alt_data_end+0xff802c78>
  802ee8:	10009a1e 	bne	r2,zero,803154 <__subdf3+0x640>
  802eec:	82400044 	addi	r9,r16,1
  802ef0:	4881ffcc 	andi	r2,r9,2047
  802ef4:	02800044 	movi	r10,1
  802ef8:	5080670e 	bge	r10,r2,803098 <__subdf3+0x584>
  802efc:	0081ffc4 	movi	r2,2047
  802f00:	4880af26 	beq	r9,r2,8031c0 <__subdf3+0x6ac>
  802f04:	898d883a 	add	r6,r17,r6
  802f08:	1945883a 	add	r2,r3,r5
  802f0c:	3447803a 	cmpltu	r3,r6,r17
  802f10:	1887883a 	add	r3,r3,r2
  802f14:	182297fa 	slli	r17,r3,31
  802f18:	300cd07a 	srli	r6,r6,1
  802f1c:	1806d07a 	srli	r3,r3,1
  802f20:	4821883a 	mov	r16,r9
  802f24:	89a2b03a 	or	r17,r17,r6
  802f28:	003f1b06 	br	802b98 <__alt_data_end+0xff802b98>
  802f2c:	0101ffc4 	movi	r4,2047
  802f30:	813f441e 	bne	r16,r4,802c44 <__alt_data_end+0xff802c44>
  802f34:	003f1806 	br	802b98 <__alt_data_end+0xff802b98>
  802f38:	843ff844 	addi	r16,r16,-31
  802f3c:	01400804 	movi	r5,32
  802f40:	1408d83a 	srl	r4,r2,r16
  802f44:	19405026 	beq	r3,r5,803088 <__subdf3+0x574>
  802f48:	01401004 	movi	r5,64
  802f4c:	28c7c83a 	sub	r3,r5,r3
  802f50:	10c4983a 	sll	r2,r2,r3
  802f54:	88a2b03a 	or	r17,r17,r2
  802f58:	8822c03a 	cmpne	r17,r17,zero
  802f5c:	2462b03a 	or	r17,r4,r17
  802f60:	0007883a 	mov	r3,zero
  802f64:	0021883a 	mov	r16,zero
  802f68:	003f6d06 	br	802d20 <__alt_data_end+0xff802d20>
  802f6c:	11fff804 	addi	r7,r2,-32
  802f70:	01000804 	movi	r4,32
  802f74:	29ced83a 	srl	r7,r5,r7
  802f78:	11004526 	beq	r2,r4,803090 <__subdf3+0x57c>
  802f7c:	01001004 	movi	r4,64
  802f80:	2089c83a 	sub	r4,r4,r2
  802f84:	2904983a 	sll	r2,r5,r4
  802f88:	118cb03a 	or	r6,r2,r6
  802f8c:	300cc03a 	cmpne	r6,r6,zero
  802f90:	398cb03a 	or	r6,r7,r6
  802f94:	0005883a 	mov	r2,zero
  802f98:	003f3706 	br	802c78 <__alt_data_end+0xff802c78>
  802f9c:	80002a26 	beq	r16,zero,803048 <__subdf3+0x534>
  802fa0:	0101ffc4 	movi	r4,2047
  802fa4:	49006626 	beq	r9,r4,803140 <__subdf3+0x62c>
  802fa8:	0085c83a 	sub	r2,zero,r2
  802fac:	18c02034 	orhi	r3,r3,128
  802fb0:	01000e04 	movi	r4,56
  802fb4:	20807e16 	blt	r4,r2,8031b0 <__subdf3+0x69c>
  802fb8:	010007c4 	movi	r4,31
  802fbc:	2080e716 	blt	r4,r2,80335c <__subdf3+0x848>
  802fc0:	01000804 	movi	r4,32
  802fc4:	2089c83a 	sub	r4,r4,r2
  802fc8:	1914983a 	sll	r10,r3,r4
  802fcc:	8890d83a 	srl	r8,r17,r2
  802fd0:	8908983a 	sll	r4,r17,r4
  802fd4:	1884d83a 	srl	r2,r3,r2
  802fd8:	5222b03a 	or	r17,r10,r8
  802fdc:	2006c03a 	cmpne	r3,r4,zero
  802fe0:	88e2b03a 	or	r17,r17,r3
  802fe4:	3463c83a 	sub	r17,r6,r17
  802fe8:	2885c83a 	sub	r2,r5,r2
  802fec:	344d803a 	cmpltu	r6,r6,r17
  802ff0:	1187c83a 	sub	r3,r2,r6
  802ff4:	4821883a 	mov	r16,r9
  802ff8:	3825883a 	mov	r18,r7
  802ffc:	003f2306 	br	802c8c <__alt_data_end+0xff802c8c>
  803000:	24d0b03a 	or	r8,r4,r19
  803004:	40001b1e 	bne	r8,zero,803074 <__subdf3+0x560>
  803008:	0005883a 	mov	r2,zero
  80300c:	0009883a 	mov	r4,zero
  803010:	0021883a 	mov	r16,zero
  803014:	003f4906 	br	802d3c <__alt_data_end+0xff802d3c>
  803018:	010007c4 	movi	r4,31
  80301c:	20803a16 	blt	r4,r2,803108 <__subdf3+0x5f4>
  803020:	01000804 	movi	r4,32
  803024:	2089c83a 	sub	r4,r4,r2
  803028:	2912983a 	sll	r9,r5,r4
  80302c:	3090d83a 	srl	r8,r6,r2
  803030:	3108983a 	sll	r4,r6,r4
  803034:	2884d83a 	srl	r2,r5,r2
  803038:	4a12b03a 	or	r9,r9,r8
  80303c:	2008c03a 	cmpne	r4,r4,zero
  803040:	4912b03a 	or	r9,r9,r4
  803044:	003f4e06 	br	802d80 <__alt_data_end+0xff802d80>
  803048:	1c48b03a 	or	r4,r3,r17
  80304c:	20003c26 	beq	r4,zero,803140 <__subdf3+0x62c>
  803050:	0084303a 	nor	r2,zero,r2
  803054:	1000381e 	bne	r2,zero,803138 <__subdf3+0x624>
  803058:	3463c83a 	sub	r17,r6,r17
  80305c:	28c5c83a 	sub	r2,r5,r3
  803060:	344d803a 	cmpltu	r6,r6,r17
  803064:	1187c83a 	sub	r3,r2,r6
  803068:	4821883a 	mov	r16,r9
  80306c:	3825883a 	mov	r18,r7
  803070:	003f0606 	br	802c8c <__alt_data_end+0xff802c8c>
  803074:	2023883a 	mov	r17,r4
  803078:	003f0906 	br	802ca0 <__alt_data_end+0xff802ca0>
  80307c:	0101ffc4 	movi	r4,2047
  803080:	813f3a1e 	bne	r16,r4,802d6c <__alt_data_end+0xff802d6c>
  803084:	003ec406 	br	802b98 <__alt_data_end+0xff802b98>
  803088:	0005883a 	mov	r2,zero
  80308c:	003fb106 	br	802f54 <__alt_data_end+0xff802f54>
  803090:	0005883a 	mov	r2,zero
  803094:	003fbc06 	br	802f88 <__alt_data_end+0xff802f88>
  803098:	1c44b03a 	or	r2,r3,r17
  80309c:	80008e1e 	bne	r16,zero,8032d8 <__subdf3+0x7c4>
  8030a0:	1000c826 	beq	r2,zero,8033c4 <__subdf3+0x8b0>
  8030a4:	2984b03a 	or	r2,r5,r6
  8030a8:	103ebb26 	beq	r2,zero,802b98 <__alt_data_end+0xff802b98>
  8030ac:	8989883a 	add	r4,r17,r6
  8030b0:	1945883a 	add	r2,r3,r5
  8030b4:	2447803a 	cmpltu	r3,r4,r17
  8030b8:	1887883a 	add	r3,r3,r2
  8030bc:	1880202c 	andhi	r2,r3,128
  8030c0:	2023883a 	mov	r17,r4
  8030c4:	103f1626 	beq	r2,zero,802d20 <__alt_data_end+0xff802d20>
  8030c8:	00bfe034 	movhi	r2,65408
  8030cc:	10bfffc4 	addi	r2,r2,-1
  8030d0:	5021883a 	mov	r16,r10
  8030d4:	1886703a 	and	r3,r3,r2
  8030d8:	003eaf06 	br	802b98 <__alt_data_end+0xff802b98>
  8030dc:	3825883a 	mov	r18,r7
  8030e0:	003f0f06 	br	802d20 <__alt_data_end+0xff802d20>
  8030e4:	1c44b03a 	or	r2,r3,r17
  8030e8:	8000251e 	bne	r16,zero,803180 <__subdf3+0x66c>
  8030ec:	1000661e 	bne	r2,zero,803288 <__subdf3+0x774>
  8030f0:	2990b03a 	or	r8,r5,r6
  8030f4:	40009626 	beq	r8,zero,803350 <__subdf3+0x83c>
  8030f8:	2807883a 	mov	r3,r5
  8030fc:	3023883a 	mov	r17,r6
  803100:	3825883a 	mov	r18,r7
  803104:	003ea406 	br	802b98 <__alt_data_end+0xff802b98>
  803108:	127ff804 	addi	r9,r2,-32
  80310c:	01000804 	movi	r4,32
  803110:	2a52d83a 	srl	r9,r5,r9
  803114:	11008c26 	beq	r2,r4,803348 <__subdf3+0x834>
  803118:	01001004 	movi	r4,64
  80311c:	2085c83a 	sub	r2,r4,r2
  803120:	2884983a 	sll	r2,r5,r2
  803124:	118cb03a 	or	r6,r2,r6
  803128:	300cc03a 	cmpne	r6,r6,zero
  80312c:	4992b03a 	or	r9,r9,r6
  803130:	0005883a 	mov	r2,zero
  803134:	003f1206 	br	802d80 <__alt_data_end+0xff802d80>
  803138:	0101ffc4 	movi	r4,2047
  80313c:	493f9c1e 	bne	r9,r4,802fb0 <__alt_data_end+0xff802fb0>
  803140:	2807883a 	mov	r3,r5
  803144:	3023883a 	mov	r17,r6
  803148:	4821883a 	mov	r16,r9
  80314c:	3825883a 	mov	r18,r7
  803150:	003e9106 	br	802b98 <__alt_data_end+0xff802b98>
  803154:	80001f1e 	bne	r16,zero,8031d4 <__subdf3+0x6c0>
  803158:	1c48b03a 	or	r4,r3,r17
  80315c:	20005a26 	beq	r4,zero,8032c8 <__subdf3+0x7b4>
  803160:	0084303a 	nor	r2,zero,r2
  803164:	1000561e 	bne	r2,zero,8032c0 <__subdf3+0x7ac>
  803168:	89a3883a 	add	r17,r17,r6
  80316c:	1945883a 	add	r2,r3,r5
  803170:	898d803a 	cmpltu	r6,r17,r6
  803174:	3087883a 	add	r3,r6,r2
  803178:	4821883a 	mov	r16,r9
  80317c:	003f0506 	br	802d94 <__alt_data_end+0xff802d94>
  803180:	10002b1e 	bne	r2,zero,803230 <__subdf3+0x71c>
  803184:	2984b03a 	or	r2,r5,r6
  803188:	10008026 	beq	r2,zero,80338c <__subdf3+0x878>
  80318c:	2807883a 	mov	r3,r5
  803190:	3023883a 	mov	r17,r6
  803194:	3825883a 	mov	r18,r7
  803198:	0401ffc4 	movi	r16,2047
  80319c:	003e7e06 	br	802b98 <__alt_data_end+0xff802b98>
  8031a0:	3809883a 	mov	r4,r7
  8031a4:	0011883a 	mov	r8,zero
  8031a8:	0005883a 	mov	r2,zero
  8031ac:	003ee306 	br	802d3c <__alt_data_end+0xff802d3c>
  8031b0:	1c62b03a 	or	r17,r3,r17
  8031b4:	8822c03a 	cmpne	r17,r17,zero
  8031b8:	0005883a 	mov	r2,zero
  8031bc:	003f8906 	br	802fe4 <__alt_data_end+0xff802fe4>
  8031c0:	3809883a 	mov	r4,r7
  8031c4:	4821883a 	mov	r16,r9
  8031c8:	0011883a 	mov	r8,zero
  8031cc:	0005883a 	mov	r2,zero
  8031d0:	003eda06 	br	802d3c <__alt_data_end+0xff802d3c>
  8031d4:	0101ffc4 	movi	r4,2047
  8031d8:	49003b26 	beq	r9,r4,8032c8 <__subdf3+0x7b4>
  8031dc:	0085c83a 	sub	r2,zero,r2
  8031e0:	18c02034 	orhi	r3,r3,128
  8031e4:	01000e04 	movi	r4,56
  8031e8:	20806e16 	blt	r4,r2,8033a4 <__subdf3+0x890>
  8031ec:	010007c4 	movi	r4,31
  8031f0:	20807716 	blt	r4,r2,8033d0 <__subdf3+0x8bc>
  8031f4:	01000804 	movi	r4,32
  8031f8:	2089c83a 	sub	r4,r4,r2
  8031fc:	1914983a 	sll	r10,r3,r4
  803200:	8890d83a 	srl	r8,r17,r2
  803204:	8908983a 	sll	r4,r17,r4
  803208:	1884d83a 	srl	r2,r3,r2
  80320c:	5222b03a 	or	r17,r10,r8
  803210:	2006c03a 	cmpne	r3,r4,zero
  803214:	88e2b03a 	or	r17,r17,r3
  803218:	89a3883a 	add	r17,r17,r6
  80321c:	1145883a 	add	r2,r2,r5
  803220:	898d803a 	cmpltu	r6,r17,r6
  803224:	3087883a 	add	r3,r6,r2
  803228:	4821883a 	mov	r16,r9
  80322c:	003ed906 	br	802d94 <__alt_data_end+0xff802d94>
  803230:	2984b03a 	or	r2,r5,r6
  803234:	10004226 	beq	r2,zero,803340 <__subdf3+0x82c>
  803238:	1808d0fa 	srli	r4,r3,3
  80323c:	8822d0fa 	srli	r17,r17,3
  803240:	1806977a 	slli	r3,r3,29
  803244:	2080022c 	andhi	r2,r4,8
  803248:	1c62b03a 	or	r17,r3,r17
  80324c:	10000826 	beq	r2,zero,803270 <__subdf3+0x75c>
  803250:	2812d0fa 	srli	r9,r5,3
  803254:	4880022c 	andhi	r2,r9,8
  803258:	1000051e 	bne	r2,zero,803270 <__subdf3+0x75c>
  80325c:	300cd0fa 	srli	r6,r6,3
  803260:	2804977a 	slli	r2,r5,29
  803264:	4809883a 	mov	r4,r9
  803268:	3825883a 	mov	r18,r7
  80326c:	11a2b03a 	or	r17,r2,r6
  803270:	8806d77a 	srli	r3,r17,29
  803274:	200890fa 	slli	r4,r4,3
  803278:	882290fa 	slli	r17,r17,3
  80327c:	0401ffc4 	movi	r16,2047
  803280:	1906b03a 	or	r3,r3,r4
  803284:	003e4406 	br	802b98 <__alt_data_end+0xff802b98>
  803288:	2984b03a 	or	r2,r5,r6
  80328c:	103e4226 	beq	r2,zero,802b98 <__alt_data_end+0xff802b98>
  803290:	8989c83a 	sub	r4,r17,r6
  803294:	8911803a 	cmpltu	r8,r17,r4
  803298:	1945c83a 	sub	r2,r3,r5
  80329c:	1205c83a 	sub	r2,r2,r8
  8032a0:	1200202c 	andhi	r8,r2,128
  8032a4:	403e9a26 	beq	r8,zero,802d10 <__alt_data_end+0xff802d10>
  8032a8:	3463c83a 	sub	r17,r6,r17
  8032ac:	28c5c83a 	sub	r2,r5,r3
  8032b0:	344d803a 	cmpltu	r6,r6,r17
  8032b4:	1187c83a 	sub	r3,r2,r6
  8032b8:	3825883a 	mov	r18,r7
  8032bc:	003e3606 	br	802b98 <__alt_data_end+0xff802b98>
  8032c0:	0101ffc4 	movi	r4,2047
  8032c4:	493fc71e 	bne	r9,r4,8031e4 <__alt_data_end+0xff8031e4>
  8032c8:	2807883a 	mov	r3,r5
  8032cc:	3023883a 	mov	r17,r6
  8032d0:	4821883a 	mov	r16,r9
  8032d4:	003e3006 	br	802b98 <__alt_data_end+0xff802b98>
  8032d8:	10003626 	beq	r2,zero,8033b4 <__subdf3+0x8a0>
  8032dc:	2984b03a 	or	r2,r5,r6
  8032e0:	10001726 	beq	r2,zero,803340 <__subdf3+0x82c>
  8032e4:	1808d0fa 	srli	r4,r3,3
  8032e8:	8822d0fa 	srli	r17,r17,3
  8032ec:	1806977a 	slli	r3,r3,29
  8032f0:	2080022c 	andhi	r2,r4,8
  8032f4:	1c62b03a 	or	r17,r3,r17
  8032f8:	10000726 	beq	r2,zero,803318 <__subdf3+0x804>
  8032fc:	2812d0fa 	srli	r9,r5,3
  803300:	4880022c 	andhi	r2,r9,8
  803304:	1000041e 	bne	r2,zero,803318 <__subdf3+0x804>
  803308:	300cd0fa 	srli	r6,r6,3
  80330c:	2804977a 	slli	r2,r5,29
  803310:	4809883a 	mov	r4,r9
  803314:	11a2b03a 	or	r17,r2,r6
  803318:	8806d77a 	srli	r3,r17,29
  80331c:	200890fa 	slli	r4,r4,3
  803320:	882290fa 	slli	r17,r17,3
  803324:	3825883a 	mov	r18,r7
  803328:	1906b03a 	or	r3,r3,r4
  80332c:	0401ffc4 	movi	r16,2047
  803330:	003e1906 	br	802b98 <__alt_data_end+0xff802b98>
  803334:	000b883a 	mov	r5,zero
  803338:	0005883a 	mov	r2,zero
  80333c:	003e2e06 	br	802bf8 <__alt_data_end+0xff802bf8>
  803340:	0401ffc4 	movi	r16,2047
  803344:	003e1406 	br	802b98 <__alt_data_end+0xff802b98>
  803348:	0005883a 	mov	r2,zero
  80334c:	003f7506 	br	803124 <__alt_data_end+0xff803124>
  803350:	0005883a 	mov	r2,zero
  803354:	0009883a 	mov	r4,zero
  803358:	003e7806 	br	802d3c <__alt_data_end+0xff802d3c>
  80335c:	123ff804 	addi	r8,r2,-32
  803360:	01000804 	movi	r4,32
  803364:	1a10d83a 	srl	r8,r3,r8
  803368:	11002526 	beq	r2,r4,803400 <__subdf3+0x8ec>
  80336c:	01001004 	movi	r4,64
  803370:	2085c83a 	sub	r2,r4,r2
  803374:	1884983a 	sll	r2,r3,r2
  803378:	1444b03a 	or	r2,r2,r17
  80337c:	1004c03a 	cmpne	r2,r2,zero
  803380:	40a2b03a 	or	r17,r8,r2
  803384:	0005883a 	mov	r2,zero
  803388:	003f1606 	br	802fe4 <__alt_data_end+0xff802fe4>
  80338c:	02000434 	movhi	r8,16
  803390:	0009883a 	mov	r4,zero
  803394:	423fffc4 	addi	r8,r8,-1
  803398:	00bfffc4 	movi	r2,-1
  80339c:	0401ffc4 	movi	r16,2047
  8033a0:	003e6606 	br	802d3c <__alt_data_end+0xff802d3c>
  8033a4:	1c62b03a 	or	r17,r3,r17
  8033a8:	8822c03a 	cmpne	r17,r17,zero
  8033ac:	0005883a 	mov	r2,zero
  8033b0:	003f9906 	br	803218 <__alt_data_end+0xff803218>
  8033b4:	2807883a 	mov	r3,r5
  8033b8:	3023883a 	mov	r17,r6
  8033bc:	0401ffc4 	movi	r16,2047
  8033c0:	003df506 	br	802b98 <__alt_data_end+0xff802b98>
  8033c4:	2807883a 	mov	r3,r5
  8033c8:	3023883a 	mov	r17,r6
  8033cc:	003df206 	br	802b98 <__alt_data_end+0xff802b98>
  8033d0:	123ff804 	addi	r8,r2,-32
  8033d4:	01000804 	movi	r4,32
  8033d8:	1a10d83a 	srl	r8,r3,r8
  8033dc:	11000a26 	beq	r2,r4,803408 <__subdf3+0x8f4>
  8033e0:	01001004 	movi	r4,64
  8033e4:	2085c83a 	sub	r2,r4,r2
  8033e8:	1884983a 	sll	r2,r3,r2
  8033ec:	1444b03a 	or	r2,r2,r17
  8033f0:	1004c03a 	cmpne	r2,r2,zero
  8033f4:	40a2b03a 	or	r17,r8,r2
  8033f8:	0005883a 	mov	r2,zero
  8033fc:	003f8606 	br	803218 <__alt_data_end+0xff803218>
  803400:	0005883a 	mov	r2,zero
  803404:	003fdc06 	br	803378 <__alt_data_end+0xff803378>
  803408:	0005883a 	mov	r2,zero
  80340c:	003ff706 	br	8033ec <__alt_data_end+0xff8033ec>

00803410 <__extendsfdf2>:
  803410:	200ad5fa 	srli	r5,r4,23
  803414:	defffd04 	addi	sp,sp,-12
  803418:	dc400115 	stw	r17,4(sp)
  80341c:	29403fcc 	andi	r5,r5,255
  803420:	29800044 	addi	r6,r5,1
  803424:	04402034 	movhi	r17,128
  803428:	dc000015 	stw	r16,0(sp)
  80342c:	8c7fffc4 	addi	r17,r17,-1
  803430:	dfc00215 	stw	ra,8(sp)
  803434:	31803fcc 	andi	r6,r6,255
  803438:	00800044 	movi	r2,1
  80343c:	8922703a 	and	r17,r17,r4
  803440:	2020d7fa 	srli	r16,r4,31
  803444:	1180110e 	bge	r2,r6,80348c <__extendsfdf2+0x7c>
  803448:	880cd0fa 	srli	r6,r17,3
  80344c:	8822977a 	slli	r17,r17,29
  803450:	2940e004 	addi	r5,r5,896
  803454:	2941ffcc 	andi	r5,r5,2047
  803458:	2804953a 	slli	r2,r5,20
  80345c:	01400434 	movhi	r5,16
  803460:	800697fa 	slli	r3,r16,31
  803464:	297fffc4 	addi	r5,r5,-1
  803468:	314a703a 	and	r5,r6,r5
  80346c:	288ab03a 	or	r5,r5,r2
  803470:	28c6b03a 	or	r3,r5,r3
  803474:	8805883a 	mov	r2,r17
  803478:	dfc00217 	ldw	ra,8(sp)
  80347c:	dc400117 	ldw	r17,4(sp)
  803480:	dc000017 	ldw	r16,0(sp)
  803484:	dec00304 	addi	sp,sp,12
  803488:	f800283a 	ret
  80348c:	2800111e 	bne	r5,zero,8034d4 <__extendsfdf2+0xc4>
  803490:	88001c26 	beq	r17,zero,803504 <__extendsfdf2+0xf4>
  803494:	8809883a 	mov	r4,r17
  803498:	08036c80 	call	8036c8 <__clzsi2>
  80349c:	00c00284 	movi	r3,10
  8034a0:	18801b16 	blt	r3,r2,803510 <__extendsfdf2+0x100>
  8034a4:	018002c4 	movi	r6,11
  8034a8:	308dc83a 	sub	r6,r6,r2
  8034ac:	11000544 	addi	r4,r2,21
  8034b0:	8986d83a 	srl	r3,r17,r6
  8034b4:	8922983a 	sll	r17,r17,r4
  8034b8:	0180e244 	movi	r6,905
  8034bc:	01400434 	movhi	r5,16
  8034c0:	3085c83a 	sub	r2,r6,r2
  8034c4:	297fffc4 	addi	r5,r5,-1
  8034c8:	194c703a 	and	r6,r3,r5
  8034cc:	1141ffcc 	andi	r5,r2,2047
  8034d0:	003fe006 	br	803454 <__alt_data_end+0xff803454>
  8034d4:	88000826 	beq	r17,zero,8034f8 <__extendsfdf2+0xe8>
  8034d8:	880cd0fa 	srli	r6,r17,3
  8034dc:	00800434 	movhi	r2,16
  8034e0:	10bfffc4 	addi	r2,r2,-1
  8034e4:	31800234 	orhi	r6,r6,8
  8034e8:	8822977a 	slli	r17,r17,29
  8034ec:	308c703a 	and	r6,r6,r2
  8034f0:	0141ffc4 	movi	r5,2047
  8034f4:	003fd706 	br	803454 <__alt_data_end+0xff803454>
  8034f8:	0141ffc4 	movi	r5,2047
  8034fc:	000d883a 	mov	r6,zero
  803500:	003fd406 	br	803454 <__alt_data_end+0xff803454>
  803504:	000b883a 	mov	r5,zero
  803508:	000d883a 	mov	r6,zero
  80350c:	003fd106 	br	803454 <__alt_data_end+0xff803454>
  803510:	11bffd44 	addi	r6,r2,-11
  803514:	8986983a 	sll	r3,r17,r6
  803518:	0023883a 	mov	r17,zero
  80351c:	003fe606 	br	8034b8 <__alt_data_end+0xff8034b8>

00803520 <__truncdfsf2>:
  803520:	2810d53a 	srli	r8,r5,20
  803524:	01c00434 	movhi	r7,16
  803528:	39ffffc4 	addi	r7,r7,-1
  80352c:	29ce703a 	and	r7,r5,r7
  803530:	4201ffcc 	andi	r8,r8,2047
  803534:	380e90fa 	slli	r7,r7,3
  803538:	200cd77a 	srli	r6,r4,29
  80353c:	42400044 	addi	r9,r8,1
  803540:	4a41ffcc 	andi	r9,r9,2047
  803544:	00c00044 	movi	r3,1
  803548:	280ad7fa 	srli	r5,r5,31
  80354c:	31ceb03a 	or	r7,r6,r7
  803550:	200490fa 	slli	r2,r4,3
  803554:	1a40230e 	bge	r3,r9,8035e4 <__truncdfsf2+0xc4>
  803558:	40ff2004 	addi	r3,r8,-896
  80355c:	01803f84 	movi	r6,254
  803560:	30c01516 	blt	r6,r3,8035b8 <__truncdfsf2+0x98>
  803564:	00c0380e 	bge	zero,r3,803648 <__truncdfsf2+0x128>
  803568:	200c91ba 	slli	r6,r4,6
  80356c:	380e90fa 	slli	r7,r7,3
  803570:	1004d77a 	srli	r2,r2,29
  803574:	300cc03a 	cmpne	r6,r6,zero
  803578:	31ccb03a 	or	r6,r6,r7
  80357c:	308cb03a 	or	r6,r6,r2
  803580:	308001cc 	andi	r2,r6,7
  803584:	10000426 	beq	r2,zero,803598 <__truncdfsf2+0x78>
  803588:	308003cc 	andi	r2,r6,15
  80358c:	01000104 	movi	r4,4
  803590:	11000126 	beq	r2,r4,803598 <__truncdfsf2+0x78>
  803594:	31800104 	addi	r6,r6,4
  803598:	3081002c 	andhi	r2,r6,1024
  80359c:	10001626 	beq	r2,zero,8035f8 <__truncdfsf2+0xd8>
  8035a0:	18c00044 	addi	r3,r3,1
  8035a4:	00803fc4 	movi	r2,255
  8035a8:	18800326 	beq	r3,r2,8035b8 <__truncdfsf2+0x98>
  8035ac:	300c91ba 	slli	r6,r6,6
  8035b0:	300cd27a 	srli	r6,r6,9
  8035b4:	00000206 	br	8035c0 <__truncdfsf2+0xa0>
  8035b8:	00ffffc4 	movi	r3,-1
  8035bc:	000d883a 	mov	r6,zero
  8035c0:	18c03fcc 	andi	r3,r3,255
  8035c4:	180895fa 	slli	r4,r3,23
  8035c8:	00c02034 	movhi	r3,128
  8035cc:	280a97fa 	slli	r5,r5,31
  8035d0:	18ffffc4 	addi	r3,r3,-1
  8035d4:	30c6703a 	and	r3,r6,r3
  8035d8:	1906b03a 	or	r3,r3,r4
  8035dc:	1944b03a 	or	r2,r3,r5
  8035e0:	f800283a 	ret
  8035e4:	40000b1e 	bne	r8,zero,803614 <__truncdfsf2+0xf4>
  8035e8:	388cb03a 	or	r6,r7,r2
  8035ec:	0007883a 	mov	r3,zero
  8035f0:	30000426 	beq	r6,zero,803604 <__truncdfsf2+0xe4>
  8035f4:	01800144 	movi	r6,5
  8035f8:	00803fc4 	movi	r2,255
  8035fc:	300cd0fa 	srli	r6,r6,3
  803600:	18800a26 	beq	r3,r2,80362c <__truncdfsf2+0x10c>
  803604:	00802034 	movhi	r2,128
  803608:	10bfffc4 	addi	r2,r2,-1
  80360c:	308c703a 	and	r6,r6,r2
  803610:	003feb06 	br	8035c0 <__alt_data_end+0xff8035c0>
  803614:	3888b03a 	or	r4,r7,r2
  803618:	203fe726 	beq	r4,zero,8035b8 <__alt_data_end+0xff8035b8>
  80361c:	380c90fa 	slli	r6,r7,3
  803620:	00c03fc4 	movi	r3,255
  803624:	31808034 	orhi	r6,r6,512
  803628:	003fd506 	br	803580 <__alt_data_end+0xff803580>
  80362c:	303fe226 	beq	r6,zero,8035b8 <__alt_data_end+0xff8035b8>
  803630:	00802034 	movhi	r2,128
  803634:	31801034 	orhi	r6,r6,64
  803638:	10bfffc4 	addi	r2,r2,-1
  80363c:	00ffffc4 	movi	r3,-1
  803640:	308c703a 	and	r6,r6,r2
  803644:	003fde06 	br	8035c0 <__alt_data_end+0xff8035c0>
  803648:	013ffa44 	movi	r4,-23
  80364c:	19000e16 	blt	r3,r4,803688 <__truncdfsf2+0x168>
  803650:	01000784 	movi	r4,30
  803654:	20c9c83a 	sub	r4,r4,r3
  803658:	018007c4 	movi	r6,31
  80365c:	39c02034 	orhi	r7,r7,128
  803660:	31000b16 	blt	r6,r4,803690 <__truncdfsf2+0x170>
  803664:	423f2084 	addi	r8,r8,-894
  803668:	120c983a 	sll	r6,r2,r8
  80366c:	3a0e983a 	sll	r7,r7,r8
  803670:	1104d83a 	srl	r2,r2,r4
  803674:	300cc03a 	cmpne	r6,r6,zero
  803678:	31ceb03a 	or	r7,r6,r7
  80367c:	388cb03a 	or	r6,r7,r2
  803680:	0007883a 	mov	r3,zero
  803684:	003fbe06 	br	803580 <__alt_data_end+0xff803580>
  803688:	0007883a 	mov	r3,zero
  80368c:	003fd906 	br	8035f4 <__alt_data_end+0xff8035f4>
  803690:	01bfff84 	movi	r6,-2
  803694:	30cdc83a 	sub	r6,r6,r3
  803698:	00c00804 	movi	r3,32
  80369c:	398cd83a 	srl	r6,r7,r6
  8036a0:	20c00726 	beq	r4,r3,8036c0 <__truncdfsf2+0x1a0>
  8036a4:	423f2884 	addi	r8,r8,-862
  8036a8:	3a0e983a 	sll	r7,r7,r8
  8036ac:	3884b03a 	or	r2,r7,r2
  8036b0:	1004c03a 	cmpne	r2,r2,zero
  8036b4:	118cb03a 	or	r6,r2,r6
  8036b8:	0007883a 	mov	r3,zero
  8036bc:	003fb006 	br	803580 <__alt_data_end+0xff803580>
  8036c0:	000f883a 	mov	r7,zero
  8036c4:	003ff906 	br	8036ac <__alt_data_end+0xff8036ac>

008036c8 <__clzsi2>:
  8036c8:	00bfffd4 	movui	r2,65535
  8036cc:	11000536 	bltu	r2,r4,8036e4 <__clzsi2+0x1c>
  8036d0:	00803fc4 	movi	r2,255
  8036d4:	11000f36 	bltu	r2,r4,803714 <__clzsi2+0x4c>
  8036d8:	00800804 	movi	r2,32
  8036dc:	0007883a 	mov	r3,zero
  8036e0:	00000506 	br	8036f8 <__clzsi2+0x30>
  8036e4:	00804034 	movhi	r2,256
  8036e8:	10bfffc4 	addi	r2,r2,-1
  8036ec:	11000c2e 	bgeu	r2,r4,803720 <__clzsi2+0x58>
  8036f0:	00800204 	movi	r2,8
  8036f4:	00c00604 	movi	r3,24
  8036f8:	20c8d83a 	srl	r4,r4,r3
  8036fc:	00c02074 	movhi	r3,129
  803700:	18c3fb44 	addi	r3,r3,4077
  803704:	1909883a 	add	r4,r3,r4
  803708:	20c00003 	ldbu	r3,0(r4)
  80370c:	10c5c83a 	sub	r2,r2,r3
  803710:	f800283a 	ret
  803714:	00800604 	movi	r2,24
  803718:	00c00204 	movi	r3,8
  80371c:	003ff606 	br	8036f8 <__alt_data_end+0xff8036f8>
  803720:	00800404 	movi	r2,16
  803724:	1007883a 	mov	r3,r2
  803728:	003ff306 	br	8036f8 <__alt_data_end+0xff8036f8>

0080372c <_printf_r>:
  80372c:	defffd04 	addi	sp,sp,-12
  803730:	2805883a 	mov	r2,r5
  803734:	dfc00015 	stw	ra,0(sp)
  803738:	d9800115 	stw	r6,4(sp)
  80373c:	d9c00215 	stw	r7,8(sp)
  803740:	21400217 	ldw	r5,8(r4)
  803744:	d9c00104 	addi	r7,sp,4
  803748:	100d883a 	mov	r6,r2
  80374c:	08037980 	call	803798 <___vfprintf_internal_r>
  803750:	dfc00017 	ldw	ra,0(sp)
  803754:	dec00304 	addi	sp,sp,12
  803758:	f800283a 	ret

0080375c <printf>:
  80375c:	defffc04 	addi	sp,sp,-16
  803760:	dfc00015 	stw	ra,0(sp)
  803764:	d9400115 	stw	r5,4(sp)
  803768:	d9800215 	stw	r6,8(sp)
  80376c:	d9c00315 	stw	r7,12(sp)
  803770:	00802074 	movhi	r2,129
  803774:	108b6504 	addi	r2,r2,11668
  803778:	10800017 	ldw	r2,0(r2)
  80377c:	200b883a 	mov	r5,r4
  803780:	d9800104 	addi	r6,sp,4
  803784:	11000217 	ldw	r4,8(r2)
  803788:	08059900 	call	805990 <__vfprintf_internal>
  80378c:	dfc00017 	ldw	ra,0(sp)
  803790:	dec00404 	addi	sp,sp,16
  803794:	f800283a 	ret

00803798 <___vfprintf_internal_r>:
  803798:	deffb804 	addi	sp,sp,-288
  80379c:	dfc04715 	stw	ra,284(sp)
  8037a0:	ddc04515 	stw	r23,276(sp)
  8037a4:	dd404315 	stw	r21,268(sp)
  8037a8:	d9002c15 	stw	r4,176(sp)
  8037ac:	282f883a 	mov	r23,r5
  8037b0:	302b883a 	mov	r21,r6
  8037b4:	d9c02d15 	stw	r7,180(sp)
  8037b8:	df004615 	stw	fp,280(sp)
  8037bc:	dd804415 	stw	r22,272(sp)
  8037c0:	dd004215 	stw	r20,264(sp)
  8037c4:	dcc04115 	stw	r19,260(sp)
  8037c8:	dc804015 	stw	r18,256(sp)
  8037cc:	dc403f15 	stw	r17,252(sp)
  8037d0:	dc003e15 	stw	r16,248(sp)
  8037d4:	08080f40 	call	8080f4 <_localeconv_r>
  8037d8:	10800017 	ldw	r2,0(r2)
  8037dc:	1009883a 	mov	r4,r2
  8037e0:	d8803415 	stw	r2,208(sp)
  8037e4:	080a11c0 	call	80a11c <strlen>
  8037e8:	d8803715 	stw	r2,220(sp)
  8037ec:	d8802c17 	ldw	r2,176(sp)
  8037f0:	10000226 	beq	r2,zero,8037fc <___vfprintf_internal_r+0x64>
  8037f4:	10800e17 	ldw	r2,56(r2)
  8037f8:	1000f926 	beq	r2,zero,803be0 <___vfprintf_internal_r+0x448>
  8037fc:	b880030b 	ldhu	r2,12(r23)
  803800:	10c8000c 	andi	r3,r2,8192
  803804:	1800061e 	bne	r3,zero,803820 <___vfprintf_internal_r+0x88>
  803808:	b9001917 	ldw	r4,100(r23)
  80380c:	00f7ffc4 	movi	r3,-8193
  803810:	10880014 	ori	r2,r2,8192
  803814:	20c6703a 	and	r3,r4,r3
  803818:	b880030d 	sth	r2,12(r23)
  80381c:	b8c01915 	stw	r3,100(r23)
  803820:	10c0020c 	andi	r3,r2,8
  803824:	1800c126 	beq	r3,zero,803b2c <___vfprintf_internal_r+0x394>
  803828:	b8c00417 	ldw	r3,16(r23)
  80382c:	1800bf26 	beq	r3,zero,803b2c <___vfprintf_internal_r+0x394>
  803830:	1080068c 	andi	r2,r2,26
  803834:	00c00284 	movi	r3,10
  803838:	10c0c426 	beq	r2,r3,803b4c <___vfprintf_internal_r+0x3b4>
  80383c:	d8c00404 	addi	r3,sp,16
  803840:	05002074 	movhi	r20,129
  803844:	d9001e04 	addi	r4,sp,120
  803848:	a5044c84 	addi	r20,r20,4402
  80384c:	d8c01e15 	stw	r3,120(sp)
  803850:	d8002015 	stw	zero,128(sp)
  803854:	d8001f15 	stw	zero,124(sp)
  803858:	d8003315 	stw	zero,204(sp)
  80385c:	d8003615 	stw	zero,216(sp)
  803860:	d8003815 	stw	zero,224(sp)
  803864:	1811883a 	mov	r8,r3
  803868:	d8003915 	stw	zero,228(sp)
  80386c:	d8003a15 	stw	zero,232(sp)
  803870:	d8002f15 	stw	zero,188(sp)
  803874:	d9002815 	stw	r4,160(sp)
  803878:	a8800007 	ldb	r2,0(r21)
  80387c:	10027b26 	beq	r2,zero,80426c <___vfprintf_internal_r+0xad4>
  803880:	00c00944 	movi	r3,37
  803884:	a821883a 	mov	r16,r21
  803888:	10c0021e 	bne	r2,r3,803894 <___vfprintf_internal_r+0xfc>
  80388c:	00001406 	br	8038e0 <___vfprintf_internal_r+0x148>
  803890:	10c00326 	beq	r2,r3,8038a0 <___vfprintf_internal_r+0x108>
  803894:	84000044 	addi	r16,r16,1
  803898:	80800007 	ldb	r2,0(r16)
  80389c:	103ffc1e 	bne	r2,zero,803890 <__alt_data_end+0xff803890>
  8038a0:	8563c83a 	sub	r17,r16,r21
  8038a4:	88000e26 	beq	r17,zero,8038e0 <___vfprintf_internal_r+0x148>
  8038a8:	d8c02017 	ldw	r3,128(sp)
  8038ac:	d8801f17 	ldw	r2,124(sp)
  8038b0:	45400015 	stw	r21,0(r8)
  8038b4:	1c47883a 	add	r3,r3,r17
  8038b8:	10800044 	addi	r2,r2,1
  8038bc:	d8c02015 	stw	r3,128(sp)
  8038c0:	44400115 	stw	r17,4(r8)
  8038c4:	d8801f15 	stw	r2,124(sp)
  8038c8:	00c001c4 	movi	r3,7
  8038cc:	1880a716 	blt	r3,r2,803b6c <___vfprintf_internal_r+0x3d4>
  8038d0:	42000204 	addi	r8,r8,8
  8038d4:	d9402f17 	ldw	r5,188(sp)
  8038d8:	2c4b883a 	add	r5,r5,r17
  8038dc:	d9402f15 	stw	r5,188(sp)
  8038e0:	80800007 	ldb	r2,0(r16)
  8038e4:	1000a826 	beq	r2,zero,803b88 <___vfprintf_internal_r+0x3f0>
  8038e8:	84400047 	ldb	r17,1(r16)
  8038ec:	00bfffc4 	movi	r2,-1
  8038f0:	85400044 	addi	r21,r16,1
  8038f4:	d8002785 	stb	zero,158(sp)
  8038f8:	0007883a 	mov	r3,zero
  8038fc:	000f883a 	mov	r7,zero
  803900:	d8802915 	stw	r2,164(sp)
  803904:	d8003115 	stw	zero,196(sp)
  803908:	0025883a 	mov	r18,zero
  80390c:	01401604 	movi	r5,88
  803910:	01800244 	movi	r6,9
  803914:	02800a84 	movi	r10,42
  803918:	02401b04 	movi	r9,108
  80391c:	ad400044 	addi	r21,r21,1
  803920:	88bff804 	addi	r2,r17,-32
  803924:	28830436 	bltu	r5,r2,804538 <___vfprintf_internal_r+0xda0>
  803928:	100490ba 	slli	r2,r2,2
  80392c:	01002034 	movhi	r4,128
  803930:	210e5004 	addi	r4,r4,14656
  803934:	1105883a 	add	r2,r2,r4
  803938:	10800017 	ldw	r2,0(r2)
  80393c:	1000683a 	jmp	r2
  803940:	00804458 	cmpnei	r2,zero,273
  803944:	00804538 	rdprs	r2,zero,276
  803948:	00804538 	rdprs	r2,zero,276
  80394c:	00804478 	rdprs	r2,zero,273
  803950:	00804538 	rdprs	r2,zero,276
  803954:	00804538 	rdprs	r2,zero,276
  803958:	00804538 	rdprs	r2,zero,276
  80395c:	00804538 	rdprs	r2,zero,276
  803960:	00804538 	rdprs	r2,zero,276
  803964:	00804538 	rdprs	r2,zero,276
  803968:	00803bec 	andhi	r2,zero,239
  80396c:	00804394 	movui	r2,270
  803970:	00804538 	rdprs	r2,zero,276
  803974:	00803ab4 	movhi	r2,234
  803978:	00803c14 	movui	r2,240
  80397c:	00804538 	rdprs	r2,zero,276
  803980:	00803c54 	movui	r2,241
  803984:	00803c60 	cmpeqi	r2,zero,241
  803988:	00803c60 	cmpeqi	r2,zero,241
  80398c:	00803c60 	cmpeqi	r2,zero,241
  803990:	00803c60 	cmpeqi	r2,zero,241
  803994:	00803c60 	cmpeqi	r2,zero,241
  803998:	00803c60 	cmpeqi	r2,zero,241
  80399c:	00803c60 	cmpeqi	r2,zero,241
  8039a0:	00803c60 	cmpeqi	r2,zero,241
  8039a4:	00803c60 	cmpeqi	r2,zero,241
  8039a8:	00804538 	rdprs	r2,zero,276
  8039ac:	00804538 	rdprs	r2,zero,276
  8039b0:	00804538 	rdprs	r2,zero,276
  8039b4:	00804538 	rdprs	r2,zero,276
  8039b8:	00804538 	rdprs	r2,zero,276
  8039bc:	00804538 	rdprs	r2,zero,276
  8039c0:	00804538 	rdprs	r2,zero,276
  8039c4:	00804538 	rdprs	r2,zero,276
  8039c8:	00804538 	rdprs	r2,zero,276
  8039cc:	00804538 	rdprs	r2,zero,276
  8039d0:	00803c94 	movui	r2,242
  8039d4:	00803d50 	cmplti	r2,zero,245
  8039d8:	00804538 	rdprs	r2,zero,276
  8039dc:	00803d50 	cmplti	r2,zero,245
  8039e0:	00804538 	rdprs	r2,zero,276
  8039e4:	00804538 	rdprs	r2,zero,276
  8039e8:	00804538 	rdprs	r2,zero,276
  8039ec:	00804538 	rdprs	r2,zero,276
  8039f0:	00803df0 	cmpltui	r2,zero,247
  8039f4:	00804538 	rdprs	r2,zero,276
  8039f8:	00804538 	rdprs	r2,zero,276
  8039fc:	00803dfc 	xorhi	r2,zero,247
  803a00:	00804538 	rdprs	r2,zero,276
  803a04:	00804538 	rdprs	r2,zero,276
  803a08:	00804538 	rdprs	r2,zero,276
  803a0c:	00804538 	rdprs	r2,zero,276
  803a10:	00804538 	rdprs	r2,zero,276
  803a14:	00804274 	movhi	r2,265
  803a18:	00804538 	rdprs	r2,zero,276
  803a1c:	00804538 	rdprs	r2,zero,276
  803a20:	008042d4 	movui	r2,267
  803a24:	00804538 	rdprs	r2,zero,276
  803a28:	00804538 	rdprs	r2,zero,276
  803a2c:	00804538 	rdprs	r2,zero,276
  803a30:	00804538 	rdprs	r2,zero,276
  803a34:	00804538 	rdprs	r2,zero,276
  803a38:	00804538 	rdprs	r2,zero,276
  803a3c:	00804538 	rdprs	r2,zero,276
  803a40:	00804538 	rdprs	r2,zero,276
  803a44:	00804538 	rdprs	r2,zero,276
  803a48:	00804538 	rdprs	r2,zero,276
  803a4c:	008044e4 	muli	r2,zero,275
  803a50:	00804484 	movi	r2,274
  803a54:	00803d50 	cmplti	r2,zero,245
  803a58:	00803d50 	cmplti	r2,zero,245
  803a5c:	00803d50 	cmplti	r2,zero,245
  803a60:	00804494 	movui	r2,274
  803a64:	00804484 	movi	r2,274
  803a68:	00804538 	rdprs	r2,zero,276
  803a6c:	00804538 	rdprs	r2,zero,276
  803a70:	008044a0 	cmpeqi	r2,zero,274
  803a74:	00804538 	rdprs	r2,zero,276
  803a78:	008044b0 	cmpltui	r2,zero,274
  803a7c:	00804384 	movi	r2,270
  803a80:	00803ac0 	call	803ac <__alt_mem_sdram-0x77fc54>
  803a84:	008043a4 	muli	r2,zero,270
  803a88:	00804538 	rdprs	r2,zero,276
  803a8c:	008043b0 	cmpltui	r2,zero,270
  803a90:	00804538 	rdprs	r2,zero,276
  803a94:	0080440c 	andi	r2,zero,272
  803a98:	00804538 	rdprs	r2,zero,276
  803a9c:	00804538 	rdprs	r2,zero,276
  803aa0:	0080441c 	xori	r2,zero,272
  803aa4:	d9003117 	ldw	r4,196(sp)
  803aa8:	d8802d15 	stw	r2,180(sp)
  803aac:	0109c83a 	sub	r4,zero,r4
  803ab0:	d9003115 	stw	r4,196(sp)
  803ab4:	94800114 	ori	r18,r18,4
  803ab8:	ac400007 	ldb	r17,0(r21)
  803abc:	003f9706 	br	80391c <__alt_data_end+0xff80391c>
  803ac0:	00800c04 	movi	r2,48
  803ac4:	d9002d17 	ldw	r4,180(sp)
  803ac8:	d9402917 	ldw	r5,164(sp)
  803acc:	d8802705 	stb	r2,156(sp)
  803ad0:	00801e04 	movi	r2,120
  803ad4:	d8802745 	stb	r2,157(sp)
  803ad8:	d8002785 	stb	zero,158(sp)
  803adc:	20c00104 	addi	r3,r4,4
  803ae0:	24c00017 	ldw	r19,0(r4)
  803ae4:	002d883a 	mov	r22,zero
  803ae8:	90800094 	ori	r2,r18,2
  803aec:	28029a16 	blt	r5,zero,804558 <___vfprintf_internal_r+0xdc0>
  803af0:	00bfdfc4 	movi	r2,-129
  803af4:	90a4703a 	and	r18,r18,r2
  803af8:	d8c02d15 	stw	r3,180(sp)
  803afc:	94800094 	ori	r18,r18,2
  803b00:	9802871e 	bne	r19,zero,804520 <___vfprintf_internal_r+0xd88>
  803b04:	00802074 	movhi	r2,129
  803b08:	10844504 	addi	r2,r2,4372
  803b0c:	d8803915 	stw	r2,228(sp)
  803b10:	04401e04 	movi	r17,120
  803b14:	d8802917 	ldw	r2,164(sp)
  803b18:	0039883a 	mov	fp,zero
  803b1c:	1001e926 	beq	r2,zero,8042c4 <___vfprintf_internal_r+0xb2c>
  803b20:	0027883a 	mov	r19,zero
  803b24:	002d883a 	mov	r22,zero
  803b28:	00020506 	br	804340 <___vfprintf_internal_r+0xba8>
  803b2c:	d9002c17 	ldw	r4,176(sp)
  803b30:	b80b883a 	mov	r5,r23
  803b34:	0805a680 	call	805a68 <__swsetup_r>
  803b38:	1005ac1e 	bne	r2,zero,8051ec <___vfprintf_internal_r+0x1a54>
  803b3c:	b880030b 	ldhu	r2,12(r23)
  803b40:	00c00284 	movi	r3,10
  803b44:	1080068c 	andi	r2,r2,26
  803b48:	10ff3c1e 	bne	r2,r3,80383c <__alt_data_end+0xff80383c>
  803b4c:	b880038f 	ldh	r2,14(r23)
  803b50:	103f3a16 	blt	r2,zero,80383c <__alt_data_end+0xff80383c>
  803b54:	d9c02d17 	ldw	r7,180(sp)
  803b58:	d9002c17 	ldw	r4,176(sp)
  803b5c:	a80d883a 	mov	r6,r21
  803b60:	b80b883a 	mov	r5,r23
  803b64:	08059ac0 	call	8059ac <__sbprintf>
  803b68:	00001106 	br	803bb0 <___vfprintf_internal_r+0x418>
  803b6c:	d9002c17 	ldw	r4,176(sp)
  803b70:	d9801e04 	addi	r6,sp,120
  803b74:	b80b883a 	mov	r5,r23
  803b78:	080a2b00 	call	80a2b0 <__sprint_r>
  803b7c:	1000081e 	bne	r2,zero,803ba0 <___vfprintf_internal_r+0x408>
  803b80:	da000404 	addi	r8,sp,16
  803b84:	003f5306 	br	8038d4 <__alt_data_end+0xff8038d4>
  803b88:	d8802017 	ldw	r2,128(sp)
  803b8c:	10000426 	beq	r2,zero,803ba0 <___vfprintf_internal_r+0x408>
  803b90:	d9002c17 	ldw	r4,176(sp)
  803b94:	d9801e04 	addi	r6,sp,120
  803b98:	b80b883a 	mov	r5,r23
  803b9c:	080a2b00 	call	80a2b0 <__sprint_r>
  803ba0:	b880030b 	ldhu	r2,12(r23)
  803ba4:	1080100c 	andi	r2,r2,64
  803ba8:	1005901e 	bne	r2,zero,8051ec <___vfprintf_internal_r+0x1a54>
  803bac:	d8802f17 	ldw	r2,188(sp)
  803bb0:	dfc04717 	ldw	ra,284(sp)
  803bb4:	df004617 	ldw	fp,280(sp)
  803bb8:	ddc04517 	ldw	r23,276(sp)
  803bbc:	dd804417 	ldw	r22,272(sp)
  803bc0:	dd404317 	ldw	r21,268(sp)
  803bc4:	dd004217 	ldw	r20,264(sp)
  803bc8:	dcc04117 	ldw	r19,260(sp)
  803bcc:	dc804017 	ldw	r18,256(sp)
  803bd0:	dc403f17 	ldw	r17,252(sp)
  803bd4:	dc003e17 	ldw	r16,248(sp)
  803bd8:	dec04804 	addi	sp,sp,288
  803bdc:	f800283a 	ret
  803be0:	d9002c17 	ldw	r4,176(sp)
  803be4:	0807a3c0 	call	807a3c <__sinit>
  803be8:	003f0406 	br	8037fc <__alt_data_end+0xff8037fc>
  803bec:	d8802d17 	ldw	r2,180(sp)
  803bf0:	d9002d17 	ldw	r4,180(sp)
  803bf4:	10800017 	ldw	r2,0(r2)
  803bf8:	d8803115 	stw	r2,196(sp)
  803bfc:	20800104 	addi	r2,r4,4
  803c00:	d9003117 	ldw	r4,196(sp)
  803c04:	203fa716 	blt	r4,zero,803aa4 <__alt_data_end+0xff803aa4>
  803c08:	d8802d15 	stw	r2,180(sp)
  803c0c:	ac400007 	ldb	r17,0(r21)
  803c10:	003f4206 	br	80391c <__alt_data_end+0xff80391c>
  803c14:	ac400007 	ldb	r17,0(r21)
  803c18:	aac00044 	addi	r11,r21,1
  803c1c:	8a872826 	beq	r17,r10,8058c0 <___vfprintf_internal_r+0x2128>
  803c20:	88bff404 	addi	r2,r17,-48
  803c24:	0009883a 	mov	r4,zero
  803c28:	30867d36 	bltu	r6,r2,805620 <___vfprintf_internal_r+0x1e88>
  803c2c:	5c400007 	ldb	r17,0(r11)
  803c30:	210002a4 	muli	r4,r4,10
  803c34:	5d400044 	addi	r21,r11,1
  803c38:	a817883a 	mov	r11,r21
  803c3c:	2089883a 	add	r4,r4,r2
  803c40:	88bff404 	addi	r2,r17,-48
  803c44:	30bff92e 	bgeu	r6,r2,803c2c <__alt_data_end+0xff803c2c>
  803c48:	2005c916 	blt	r4,zero,805370 <___vfprintf_internal_r+0x1bd8>
  803c4c:	d9002915 	stw	r4,164(sp)
  803c50:	003f3306 	br	803920 <__alt_data_end+0xff803920>
  803c54:	94802014 	ori	r18,r18,128
  803c58:	ac400007 	ldb	r17,0(r21)
  803c5c:	003f2f06 	br	80391c <__alt_data_end+0xff80391c>
  803c60:	a809883a 	mov	r4,r21
  803c64:	d8003115 	stw	zero,196(sp)
  803c68:	88bff404 	addi	r2,r17,-48
  803c6c:	0017883a 	mov	r11,zero
  803c70:	24400007 	ldb	r17,0(r4)
  803c74:	5ac002a4 	muli	r11,r11,10
  803c78:	ad400044 	addi	r21,r21,1
  803c7c:	a809883a 	mov	r4,r21
  803c80:	12d7883a 	add	r11,r2,r11
  803c84:	88bff404 	addi	r2,r17,-48
  803c88:	30bff92e 	bgeu	r6,r2,803c70 <__alt_data_end+0xff803c70>
  803c8c:	dac03115 	stw	r11,196(sp)
  803c90:	003f2306 	br	803920 <__alt_data_end+0xff803920>
  803c94:	18c03fcc 	andi	r3,r3,255
  803c98:	18072b1e 	bne	r3,zero,805948 <___vfprintf_internal_r+0x21b0>
  803c9c:	94800414 	ori	r18,r18,16
  803ca0:	9080080c 	andi	r2,r18,32
  803ca4:	10037b26 	beq	r2,zero,804a94 <___vfprintf_internal_r+0x12fc>
  803ca8:	d9402d17 	ldw	r5,180(sp)
  803cac:	28800117 	ldw	r2,4(r5)
  803cb0:	2cc00017 	ldw	r19,0(r5)
  803cb4:	29400204 	addi	r5,r5,8
  803cb8:	d9402d15 	stw	r5,180(sp)
  803cbc:	102d883a 	mov	r22,r2
  803cc0:	10044b16 	blt	r2,zero,804df0 <___vfprintf_internal_r+0x1658>
  803cc4:	d9402917 	ldw	r5,164(sp)
  803cc8:	df002783 	ldbu	fp,158(sp)
  803ccc:	2803bc16 	blt	r5,zero,804bc0 <___vfprintf_internal_r+0x1428>
  803cd0:	00ffdfc4 	movi	r3,-129
  803cd4:	9d84b03a 	or	r2,r19,r22
  803cd8:	90e4703a 	and	r18,r18,r3
  803cdc:	10017726 	beq	r2,zero,8042bc <___vfprintf_internal_r+0xb24>
  803ce0:	b0038326 	beq	r22,zero,804af0 <___vfprintf_internal_r+0x1358>
  803ce4:	dc402a15 	stw	r17,168(sp)
  803ce8:	dc001e04 	addi	r16,sp,120
  803cec:	b023883a 	mov	r17,r22
  803cf0:	402d883a 	mov	r22,r8
  803cf4:	9809883a 	mov	r4,r19
  803cf8:	880b883a 	mov	r5,r17
  803cfc:	01800284 	movi	r6,10
  803d00:	000f883a 	mov	r7,zero
  803d04:	080d2240 	call	80d224 <__umoddi3>
  803d08:	10800c04 	addi	r2,r2,48
  803d0c:	843fffc4 	addi	r16,r16,-1
  803d10:	9809883a 	mov	r4,r19
  803d14:	880b883a 	mov	r5,r17
  803d18:	80800005 	stb	r2,0(r16)
  803d1c:	01800284 	movi	r6,10
  803d20:	000f883a 	mov	r7,zero
  803d24:	080ccac0 	call	80ccac <__udivdi3>
  803d28:	1027883a 	mov	r19,r2
  803d2c:	10c4b03a 	or	r2,r2,r3
  803d30:	1823883a 	mov	r17,r3
  803d34:	103fef1e 	bne	r2,zero,803cf4 <__alt_data_end+0xff803cf4>
  803d38:	d8c02817 	ldw	r3,160(sp)
  803d3c:	dc402a17 	ldw	r17,168(sp)
  803d40:	b011883a 	mov	r8,r22
  803d44:	1c07c83a 	sub	r3,r3,r16
  803d48:	d8c02e15 	stw	r3,184(sp)
  803d4c:	00005906 	br	803eb4 <___vfprintf_internal_r+0x71c>
  803d50:	18c03fcc 	andi	r3,r3,255
  803d54:	1806fa1e 	bne	r3,zero,805940 <___vfprintf_internal_r+0x21a8>
  803d58:	9080020c 	andi	r2,r18,8
  803d5c:	10048a26 	beq	r2,zero,804f88 <___vfprintf_internal_r+0x17f0>
  803d60:	d8c02d17 	ldw	r3,180(sp)
  803d64:	d9002d17 	ldw	r4,180(sp)
  803d68:	d9402d17 	ldw	r5,180(sp)
  803d6c:	18c00017 	ldw	r3,0(r3)
  803d70:	21000117 	ldw	r4,4(r4)
  803d74:	29400204 	addi	r5,r5,8
  803d78:	d8c03615 	stw	r3,216(sp)
  803d7c:	d9003815 	stw	r4,224(sp)
  803d80:	d9402d15 	stw	r5,180(sp)
  803d84:	d9003617 	ldw	r4,216(sp)
  803d88:	d9403817 	ldw	r5,224(sp)
  803d8c:	da003d15 	stw	r8,244(sp)
  803d90:	04000044 	movi	r16,1
  803d94:	0809e3c0 	call	809e3c <__fpclassifyd>
  803d98:	da003d17 	ldw	r8,244(sp)
  803d9c:	14041f1e 	bne	r2,r16,804e1c <___vfprintf_internal_r+0x1684>
  803da0:	d9003617 	ldw	r4,216(sp)
  803da4:	d9403817 	ldw	r5,224(sp)
  803da8:	000d883a 	mov	r6,zero
  803dac:	000f883a 	mov	r7,zero
  803db0:	080e35c0 	call	80e35c <__ledf2>
  803db4:	da003d17 	ldw	r8,244(sp)
  803db8:	1005be16 	blt	r2,zero,8054b4 <___vfprintf_internal_r+0x1d1c>
  803dbc:	df002783 	ldbu	fp,158(sp)
  803dc0:	008011c4 	movi	r2,71
  803dc4:	1445330e 	bge	r2,r17,805294 <___vfprintf_internal_r+0x1afc>
  803dc8:	04002074 	movhi	r16,129
  803dcc:	84043d04 	addi	r16,r16,4340
  803dd0:	00c000c4 	movi	r3,3
  803dd4:	00bfdfc4 	movi	r2,-129
  803dd8:	d8c02a15 	stw	r3,168(sp)
  803ddc:	90a4703a 	and	r18,r18,r2
  803de0:	d8c02e15 	stw	r3,184(sp)
  803de4:	d8002915 	stw	zero,164(sp)
  803de8:	d8003215 	stw	zero,200(sp)
  803dec:	00003706 	br	803ecc <___vfprintf_internal_r+0x734>
  803df0:	94800214 	ori	r18,r18,8
  803df4:	ac400007 	ldb	r17,0(r21)
  803df8:	003ec806 	br	80391c <__alt_data_end+0xff80391c>
  803dfc:	18c03fcc 	andi	r3,r3,255
  803e00:	1806db1e 	bne	r3,zero,805970 <___vfprintf_internal_r+0x21d8>
  803e04:	94800414 	ori	r18,r18,16
  803e08:	9080080c 	andi	r2,r18,32
  803e0c:	1002d826 	beq	r2,zero,804970 <___vfprintf_internal_r+0x11d8>
  803e10:	d9402d17 	ldw	r5,180(sp)
  803e14:	d8c02917 	ldw	r3,164(sp)
  803e18:	d8002785 	stb	zero,158(sp)
  803e1c:	28800204 	addi	r2,r5,8
  803e20:	2cc00017 	ldw	r19,0(r5)
  803e24:	2d800117 	ldw	r22,4(r5)
  803e28:	18048f16 	blt	r3,zero,805068 <___vfprintf_internal_r+0x18d0>
  803e2c:	013fdfc4 	movi	r4,-129
  803e30:	9d86b03a 	or	r3,r19,r22
  803e34:	d8802d15 	stw	r2,180(sp)
  803e38:	9124703a 	and	r18,r18,r4
  803e3c:	1802d91e 	bne	r3,zero,8049a4 <___vfprintf_internal_r+0x120c>
  803e40:	d8c02917 	ldw	r3,164(sp)
  803e44:	0039883a 	mov	fp,zero
  803e48:	1805c326 	beq	r3,zero,805558 <___vfprintf_internal_r+0x1dc0>
  803e4c:	0027883a 	mov	r19,zero
  803e50:	002d883a 	mov	r22,zero
  803e54:	dc001e04 	addi	r16,sp,120
  803e58:	9806d0fa 	srli	r3,r19,3
  803e5c:	b008977a 	slli	r4,r22,29
  803e60:	b02cd0fa 	srli	r22,r22,3
  803e64:	9cc001cc 	andi	r19,r19,7
  803e68:	98800c04 	addi	r2,r19,48
  803e6c:	843fffc4 	addi	r16,r16,-1
  803e70:	20e6b03a 	or	r19,r4,r3
  803e74:	80800005 	stb	r2,0(r16)
  803e78:	9d86b03a 	or	r3,r19,r22
  803e7c:	183ff61e 	bne	r3,zero,803e58 <__alt_data_end+0xff803e58>
  803e80:	90c0004c 	andi	r3,r18,1
  803e84:	18013b26 	beq	r3,zero,804374 <___vfprintf_internal_r+0xbdc>
  803e88:	10803fcc 	andi	r2,r2,255
  803e8c:	1080201c 	xori	r2,r2,128
  803e90:	10bfe004 	addi	r2,r2,-128
  803e94:	00c00c04 	movi	r3,48
  803e98:	10c13626 	beq	r2,r3,804374 <___vfprintf_internal_r+0xbdc>
  803e9c:	80ffffc5 	stb	r3,-1(r16)
  803ea0:	d8c02817 	ldw	r3,160(sp)
  803ea4:	80bfffc4 	addi	r2,r16,-1
  803ea8:	1021883a 	mov	r16,r2
  803eac:	1887c83a 	sub	r3,r3,r2
  803eb0:	d8c02e15 	stw	r3,184(sp)
  803eb4:	d8802e17 	ldw	r2,184(sp)
  803eb8:	d9002917 	ldw	r4,164(sp)
  803ebc:	1100010e 	bge	r2,r4,803ec4 <___vfprintf_internal_r+0x72c>
  803ec0:	2005883a 	mov	r2,r4
  803ec4:	d8802a15 	stw	r2,168(sp)
  803ec8:	d8003215 	stw	zero,200(sp)
  803ecc:	e7003fcc 	andi	fp,fp,255
  803ed0:	e700201c 	xori	fp,fp,128
  803ed4:	e73fe004 	addi	fp,fp,-128
  803ed8:	e0000326 	beq	fp,zero,803ee8 <___vfprintf_internal_r+0x750>
  803edc:	d8c02a17 	ldw	r3,168(sp)
  803ee0:	18c00044 	addi	r3,r3,1
  803ee4:	d8c02a15 	stw	r3,168(sp)
  803ee8:	90c0008c 	andi	r3,r18,2
  803eec:	d8c02b15 	stw	r3,172(sp)
  803ef0:	18000326 	beq	r3,zero,803f00 <___vfprintf_internal_r+0x768>
  803ef4:	d8c02a17 	ldw	r3,168(sp)
  803ef8:	18c00084 	addi	r3,r3,2
  803efc:	d8c02a15 	stw	r3,168(sp)
  803f00:	90c0210c 	andi	r3,r18,132
  803f04:	d8c03015 	stw	r3,192(sp)
  803f08:	1801a31e 	bne	r3,zero,804598 <___vfprintf_internal_r+0xe00>
  803f0c:	d9003117 	ldw	r4,196(sp)
  803f10:	d8c02a17 	ldw	r3,168(sp)
  803f14:	20e7c83a 	sub	r19,r4,r3
  803f18:	04c19f0e 	bge	zero,r19,804598 <___vfprintf_internal_r+0xe00>
  803f1c:	02400404 	movi	r9,16
  803f20:	d8c02017 	ldw	r3,128(sp)
  803f24:	d8801f17 	ldw	r2,124(sp)
  803f28:	4cc50d0e 	bge	r9,r19,805360 <___vfprintf_internal_r+0x1bc8>
  803f2c:	01402074 	movhi	r5,129
  803f30:	29445084 	addi	r5,r5,4418
  803f34:	dc403b15 	stw	r17,236(sp)
  803f38:	d9403515 	stw	r5,212(sp)
  803f3c:	9823883a 	mov	r17,r19
  803f40:	482d883a 	mov	r22,r9
  803f44:	9027883a 	mov	r19,r18
  803f48:	070001c4 	movi	fp,7
  803f4c:	8025883a 	mov	r18,r16
  803f50:	dc002c17 	ldw	r16,176(sp)
  803f54:	00000306 	br	803f64 <___vfprintf_internal_r+0x7cc>
  803f58:	8c7ffc04 	addi	r17,r17,-16
  803f5c:	42000204 	addi	r8,r8,8
  803f60:	b440130e 	bge	r22,r17,803fb0 <___vfprintf_internal_r+0x818>
  803f64:	01002074 	movhi	r4,129
  803f68:	18c00404 	addi	r3,r3,16
  803f6c:	10800044 	addi	r2,r2,1
  803f70:	21045084 	addi	r4,r4,4418
  803f74:	41000015 	stw	r4,0(r8)
  803f78:	45800115 	stw	r22,4(r8)
  803f7c:	d8c02015 	stw	r3,128(sp)
  803f80:	d8801f15 	stw	r2,124(sp)
  803f84:	e0bff40e 	bge	fp,r2,803f58 <__alt_data_end+0xff803f58>
  803f88:	d9801e04 	addi	r6,sp,120
  803f8c:	b80b883a 	mov	r5,r23
  803f90:	8009883a 	mov	r4,r16
  803f94:	080a2b00 	call	80a2b0 <__sprint_r>
  803f98:	103f011e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  803f9c:	8c7ffc04 	addi	r17,r17,-16
  803fa0:	d8c02017 	ldw	r3,128(sp)
  803fa4:	d8801f17 	ldw	r2,124(sp)
  803fa8:	da000404 	addi	r8,sp,16
  803fac:	b47fed16 	blt	r22,r17,803f64 <__alt_data_end+0xff803f64>
  803fb0:	9021883a 	mov	r16,r18
  803fb4:	9825883a 	mov	r18,r19
  803fb8:	8827883a 	mov	r19,r17
  803fbc:	dc403b17 	ldw	r17,236(sp)
  803fc0:	d9403517 	ldw	r5,212(sp)
  803fc4:	98c7883a 	add	r3,r19,r3
  803fc8:	10800044 	addi	r2,r2,1
  803fcc:	41400015 	stw	r5,0(r8)
  803fd0:	44c00115 	stw	r19,4(r8)
  803fd4:	d8c02015 	stw	r3,128(sp)
  803fd8:	d8801f15 	stw	r2,124(sp)
  803fdc:	010001c4 	movi	r4,7
  803fe0:	2082a316 	blt	r4,r2,804a70 <___vfprintf_internal_r+0x12d8>
  803fe4:	df002787 	ldb	fp,158(sp)
  803fe8:	42000204 	addi	r8,r8,8
  803fec:	e0000c26 	beq	fp,zero,804020 <___vfprintf_internal_r+0x888>
  803ff0:	d8801f17 	ldw	r2,124(sp)
  803ff4:	d9002784 	addi	r4,sp,158
  803ff8:	18c00044 	addi	r3,r3,1
  803ffc:	10800044 	addi	r2,r2,1
  804000:	41000015 	stw	r4,0(r8)
  804004:	01000044 	movi	r4,1
  804008:	41000115 	stw	r4,4(r8)
  80400c:	d8c02015 	stw	r3,128(sp)
  804010:	d8801f15 	stw	r2,124(sp)
  804014:	010001c4 	movi	r4,7
  804018:	20823c16 	blt	r4,r2,80490c <___vfprintf_internal_r+0x1174>
  80401c:	42000204 	addi	r8,r8,8
  804020:	d8802b17 	ldw	r2,172(sp)
  804024:	10000c26 	beq	r2,zero,804058 <___vfprintf_internal_r+0x8c0>
  804028:	d8801f17 	ldw	r2,124(sp)
  80402c:	d9002704 	addi	r4,sp,156
  804030:	18c00084 	addi	r3,r3,2
  804034:	10800044 	addi	r2,r2,1
  804038:	41000015 	stw	r4,0(r8)
  80403c:	01000084 	movi	r4,2
  804040:	41000115 	stw	r4,4(r8)
  804044:	d8c02015 	stw	r3,128(sp)
  804048:	d8801f15 	stw	r2,124(sp)
  80404c:	010001c4 	movi	r4,7
  804050:	20823616 	blt	r4,r2,80492c <___vfprintf_internal_r+0x1194>
  804054:	42000204 	addi	r8,r8,8
  804058:	d9003017 	ldw	r4,192(sp)
  80405c:	00802004 	movi	r2,128
  804060:	20819926 	beq	r4,r2,8046c8 <___vfprintf_internal_r+0xf30>
  804064:	d9402917 	ldw	r5,164(sp)
  804068:	d8802e17 	ldw	r2,184(sp)
  80406c:	28adc83a 	sub	r22,r5,r2
  804070:	0580310e 	bge	zero,r22,804138 <___vfprintf_internal_r+0x9a0>
  804074:	07000404 	movi	fp,16
  804078:	d8801f17 	ldw	r2,124(sp)
  80407c:	e584140e 	bge	fp,r22,8050d0 <___vfprintf_internal_r+0x1938>
  804080:	01402074 	movhi	r5,129
  804084:	29444c84 	addi	r5,r5,4402
  804088:	dc402915 	stw	r17,164(sp)
  80408c:	d9402b15 	stw	r5,172(sp)
  804090:	b023883a 	mov	r17,r22
  804094:	04c001c4 	movi	r19,7
  804098:	a82d883a 	mov	r22,r21
  80409c:	902b883a 	mov	r21,r18
  8040a0:	8025883a 	mov	r18,r16
  8040a4:	dc002c17 	ldw	r16,176(sp)
  8040a8:	00000306 	br	8040b8 <___vfprintf_internal_r+0x920>
  8040ac:	8c7ffc04 	addi	r17,r17,-16
  8040b0:	42000204 	addi	r8,r8,8
  8040b4:	e440110e 	bge	fp,r17,8040fc <___vfprintf_internal_r+0x964>
  8040b8:	18c00404 	addi	r3,r3,16
  8040bc:	10800044 	addi	r2,r2,1
  8040c0:	45000015 	stw	r20,0(r8)
  8040c4:	47000115 	stw	fp,4(r8)
  8040c8:	d8c02015 	stw	r3,128(sp)
  8040cc:	d8801f15 	stw	r2,124(sp)
  8040d0:	98bff60e 	bge	r19,r2,8040ac <__alt_data_end+0xff8040ac>
  8040d4:	d9801e04 	addi	r6,sp,120
  8040d8:	b80b883a 	mov	r5,r23
  8040dc:	8009883a 	mov	r4,r16
  8040e0:	080a2b00 	call	80a2b0 <__sprint_r>
  8040e4:	103eae1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8040e8:	8c7ffc04 	addi	r17,r17,-16
  8040ec:	d8c02017 	ldw	r3,128(sp)
  8040f0:	d8801f17 	ldw	r2,124(sp)
  8040f4:	da000404 	addi	r8,sp,16
  8040f8:	e47fef16 	blt	fp,r17,8040b8 <__alt_data_end+0xff8040b8>
  8040fc:	9021883a 	mov	r16,r18
  804100:	a825883a 	mov	r18,r21
  804104:	b02b883a 	mov	r21,r22
  804108:	882d883a 	mov	r22,r17
  80410c:	dc402917 	ldw	r17,164(sp)
  804110:	d9002b17 	ldw	r4,172(sp)
  804114:	1d87883a 	add	r3,r3,r22
  804118:	10800044 	addi	r2,r2,1
  80411c:	41000015 	stw	r4,0(r8)
  804120:	45800115 	stw	r22,4(r8)
  804124:	d8c02015 	stw	r3,128(sp)
  804128:	d8801f15 	stw	r2,124(sp)
  80412c:	010001c4 	movi	r4,7
  804130:	2081ee16 	blt	r4,r2,8048ec <___vfprintf_internal_r+0x1154>
  804134:	42000204 	addi	r8,r8,8
  804138:	9080400c 	andi	r2,r18,256
  80413c:	1001181e 	bne	r2,zero,8045a0 <___vfprintf_internal_r+0xe08>
  804140:	d9402e17 	ldw	r5,184(sp)
  804144:	d8801f17 	ldw	r2,124(sp)
  804148:	44000015 	stw	r16,0(r8)
  80414c:	1947883a 	add	r3,r3,r5
  804150:	10800044 	addi	r2,r2,1
  804154:	41400115 	stw	r5,4(r8)
  804158:	d8c02015 	stw	r3,128(sp)
  80415c:	d8801f15 	stw	r2,124(sp)
  804160:	010001c4 	movi	r4,7
  804164:	2081d316 	blt	r4,r2,8048b4 <___vfprintf_internal_r+0x111c>
  804168:	42000204 	addi	r8,r8,8
  80416c:	9480010c 	andi	r18,r18,4
  804170:	90003226 	beq	r18,zero,80423c <___vfprintf_internal_r+0xaa4>
  804174:	d9403117 	ldw	r5,196(sp)
  804178:	d8802a17 	ldw	r2,168(sp)
  80417c:	28a1c83a 	sub	r16,r5,r2
  804180:	04002e0e 	bge	zero,r16,80423c <___vfprintf_internal_r+0xaa4>
  804184:	04400404 	movi	r17,16
  804188:	d8801f17 	ldw	r2,124(sp)
  80418c:	8c04a20e 	bge	r17,r16,805418 <___vfprintf_internal_r+0x1c80>
  804190:	01402074 	movhi	r5,129
  804194:	29445084 	addi	r5,r5,4418
  804198:	d9403515 	stw	r5,212(sp)
  80419c:	048001c4 	movi	r18,7
  8041a0:	dcc02c17 	ldw	r19,176(sp)
  8041a4:	00000306 	br	8041b4 <___vfprintf_internal_r+0xa1c>
  8041a8:	843ffc04 	addi	r16,r16,-16
  8041ac:	42000204 	addi	r8,r8,8
  8041b0:	8c00130e 	bge	r17,r16,804200 <___vfprintf_internal_r+0xa68>
  8041b4:	01002074 	movhi	r4,129
  8041b8:	18c00404 	addi	r3,r3,16
  8041bc:	10800044 	addi	r2,r2,1
  8041c0:	21045084 	addi	r4,r4,4418
  8041c4:	41000015 	stw	r4,0(r8)
  8041c8:	44400115 	stw	r17,4(r8)
  8041cc:	d8c02015 	stw	r3,128(sp)
  8041d0:	d8801f15 	stw	r2,124(sp)
  8041d4:	90bff40e 	bge	r18,r2,8041a8 <__alt_data_end+0xff8041a8>
  8041d8:	d9801e04 	addi	r6,sp,120
  8041dc:	b80b883a 	mov	r5,r23
  8041e0:	9809883a 	mov	r4,r19
  8041e4:	080a2b00 	call	80a2b0 <__sprint_r>
  8041e8:	103e6d1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8041ec:	843ffc04 	addi	r16,r16,-16
  8041f0:	d8c02017 	ldw	r3,128(sp)
  8041f4:	d8801f17 	ldw	r2,124(sp)
  8041f8:	da000404 	addi	r8,sp,16
  8041fc:	8c3fed16 	blt	r17,r16,8041b4 <__alt_data_end+0xff8041b4>
  804200:	d9403517 	ldw	r5,212(sp)
  804204:	1c07883a 	add	r3,r3,r16
  804208:	10800044 	addi	r2,r2,1
  80420c:	41400015 	stw	r5,0(r8)
  804210:	44000115 	stw	r16,4(r8)
  804214:	d8c02015 	stw	r3,128(sp)
  804218:	d8801f15 	stw	r2,124(sp)
  80421c:	010001c4 	movi	r4,7
  804220:	2080060e 	bge	r4,r2,80423c <___vfprintf_internal_r+0xaa4>
  804224:	d9002c17 	ldw	r4,176(sp)
  804228:	d9801e04 	addi	r6,sp,120
  80422c:	b80b883a 	mov	r5,r23
  804230:	080a2b00 	call	80a2b0 <__sprint_r>
  804234:	103e5a1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804238:	d8c02017 	ldw	r3,128(sp)
  80423c:	d8803117 	ldw	r2,196(sp)
  804240:	d9002a17 	ldw	r4,168(sp)
  804244:	1100010e 	bge	r2,r4,80424c <___vfprintf_internal_r+0xab4>
  804248:	2005883a 	mov	r2,r4
  80424c:	d9402f17 	ldw	r5,188(sp)
  804250:	288b883a 	add	r5,r5,r2
  804254:	d9402f15 	stw	r5,188(sp)
  804258:	18019e1e 	bne	r3,zero,8048d4 <___vfprintf_internal_r+0x113c>
  80425c:	a8800007 	ldb	r2,0(r21)
  804260:	d8001f15 	stw	zero,124(sp)
  804264:	da000404 	addi	r8,sp,16
  804268:	103d851e 	bne	r2,zero,803880 <__alt_data_end+0xff803880>
  80426c:	a821883a 	mov	r16,r21
  804270:	003d9b06 	br	8038e0 <__alt_data_end+0xff8038e0>
  804274:	18c03fcc 	andi	r3,r3,255
  804278:	1805c11e 	bne	r3,zero,805980 <___vfprintf_internal_r+0x21e8>
  80427c:	94800414 	ori	r18,r18,16
  804280:	9080080c 	andi	r2,r18,32
  804284:	10020c26 	beq	r2,zero,804ab8 <___vfprintf_internal_r+0x1320>
  804288:	d8802d17 	ldw	r2,180(sp)
  80428c:	d9002917 	ldw	r4,164(sp)
  804290:	d8002785 	stb	zero,158(sp)
  804294:	10c00204 	addi	r3,r2,8
  804298:	14c00017 	ldw	r19,0(r2)
  80429c:	15800117 	ldw	r22,4(r2)
  8042a0:	20040f16 	blt	r4,zero,8052e0 <___vfprintf_internal_r+0x1b48>
  8042a4:	013fdfc4 	movi	r4,-129
  8042a8:	9d84b03a 	or	r2,r19,r22
  8042ac:	d8c02d15 	stw	r3,180(sp)
  8042b0:	9124703a 	and	r18,r18,r4
  8042b4:	0039883a 	mov	fp,zero
  8042b8:	103e891e 	bne	r2,zero,803ce0 <__alt_data_end+0xff803ce0>
  8042bc:	d9002917 	ldw	r4,164(sp)
  8042c0:	2002c11e 	bne	r4,zero,804dc8 <___vfprintf_internal_r+0x1630>
  8042c4:	d8002915 	stw	zero,164(sp)
  8042c8:	d8002e15 	stw	zero,184(sp)
  8042cc:	dc001e04 	addi	r16,sp,120
  8042d0:	003ef806 	br	803eb4 <__alt_data_end+0xff803eb4>
  8042d4:	18c03fcc 	andi	r3,r3,255
  8042d8:	18059d1e 	bne	r3,zero,805950 <___vfprintf_internal_r+0x21b8>
  8042dc:	01402074 	movhi	r5,129
  8042e0:	29444004 	addi	r5,r5,4352
  8042e4:	d9403915 	stw	r5,228(sp)
  8042e8:	9080080c 	andi	r2,r18,32
  8042ec:	10005226 	beq	r2,zero,804438 <___vfprintf_internal_r+0xca0>
  8042f0:	d8802d17 	ldw	r2,180(sp)
  8042f4:	14c00017 	ldw	r19,0(r2)
  8042f8:	15800117 	ldw	r22,4(r2)
  8042fc:	10800204 	addi	r2,r2,8
  804300:	d8802d15 	stw	r2,180(sp)
  804304:	9080004c 	andi	r2,r18,1
  804308:	10019026 	beq	r2,zero,80494c <___vfprintf_internal_r+0x11b4>
  80430c:	9d84b03a 	or	r2,r19,r22
  804310:	10036926 	beq	r2,zero,8050b8 <___vfprintf_internal_r+0x1920>
  804314:	d8c02917 	ldw	r3,164(sp)
  804318:	00800c04 	movi	r2,48
  80431c:	d8802705 	stb	r2,156(sp)
  804320:	dc402745 	stb	r17,157(sp)
  804324:	d8002785 	stb	zero,158(sp)
  804328:	90800094 	ori	r2,r18,2
  80432c:	18045d16 	blt	r3,zero,8054a4 <___vfprintf_internal_r+0x1d0c>
  804330:	00bfdfc4 	movi	r2,-129
  804334:	90a4703a 	and	r18,r18,r2
  804338:	94800094 	ori	r18,r18,2
  80433c:	0039883a 	mov	fp,zero
  804340:	d9003917 	ldw	r4,228(sp)
  804344:	dc001e04 	addi	r16,sp,120
  804348:	988003cc 	andi	r2,r19,15
  80434c:	b006973a 	slli	r3,r22,28
  804350:	2085883a 	add	r2,r4,r2
  804354:	9826d13a 	srli	r19,r19,4
  804358:	10800003 	ldbu	r2,0(r2)
  80435c:	b02cd13a 	srli	r22,r22,4
  804360:	843fffc4 	addi	r16,r16,-1
  804364:	1ce6b03a 	or	r19,r3,r19
  804368:	80800005 	stb	r2,0(r16)
  80436c:	9d84b03a 	or	r2,r19,r22
  804370:	103ff51e 	bne	r2,zero,804348 <__alt_data_end+0xff804348>
  804374:	d8c02817 	ldw	r3,160(sp)
  804378:	1c07c83a 	sub	r3,r3,r16
  80437c:	d8c02e15 	stw	r3,184(sp)
  804380:	003ecc06 	br	803eb4 <__alt_data_end+0xff803eb4>
  804384:	18c03fcc 	andi	r3,r3,255
  804388:	183e9f26 	beq	r3,zero,803e08 <__alt_data_end+0xff803e08>
  80438c:	d9c02785 	stb	r7,158(sp)
  804390:	003e9d06 	br	803e08 <__alt_data_end+0xff803e08>
  804394:	00c00044 	movi	r3,1
  804398:	01c00ac4 	movi	r7,43
  80439c:	ac400007 	ldb	r17,0(r21)
  8043a0:	003d5e06 	br	80391c <__alt_data_end+0xff80391c>
  8043a4:	94800814 	ori	r18,r18,32
  8043a8:	ac400007 	ldb	r17,0(r21)
  8043ac:	003d5b06 	br	80391c <__alt_data_end+0xff80391c>
  8043b0:	d8c02d17 	ldw	r3,180(sp)
  8043b4:	d8002785 	stb	zero,158(sp)
  8043b8:	1c000017 	ldw	r16,0(r3)
  8043bc:	1cc00104 	addi	r19,r3,4
  8043c0:	80041926 	beq	r16,zero,805428 <___vfprintf_internal_r+0x1c90>
  8043c4:	d9002917 	ldw	r4,164(sp)
  8043c8:	2003d016 	blt	r4,zero,80530c <___vfprintf_internal_r+0x1b74>
  8043cc:	200d883a 	mov	r6,r4
  8043d0:	000b883a 	mov	r5,zero
  8043d4:	8009883a 	mov	r4,r16
  8043d8:	da003d15 	stw	r8,244(sp)
  8043dc:	0808aec0 	call	808aec <memchr>
  8043e0:	da003d17 	ldw	r8,244(sp)
  8043e4:	10045426 	beq	r2,zero,805538 <___vfprintf_internal_r+0x1da0>
  8043e8:	1405c83a 	sub	r2,r2,r16
  8043ec:	d8802e15 	stw	r2,184(sp)
  8043f0:	1003cc16 	blt	r2,zero,805324 <___vfprintf_internal_r+0x1b8c>
  8043f4:	df002783 	ldbu	fp,158(sp)
  8043f8:	d8802a15 	stw	r2,168(sp)
  8043fc:	dcc02d15 	stw	r19,180(sp)
  804400:	d8002915 	stw	zero,164(sp)
  804404:	d8003215 	stw	zero,200(sp)
  804408:	003eb006 	br	803ecc <__alt_data_end+0xff803ecc>
  80440c:	18c03fcc 	andi	r3,r3,255
  804410:	183f9b26 	beq	r3,zero,804280 <__alt_data_end+0xff804280>
  804414:	d9c02785 	stb	r7,158(sp)
  804418:	003f9906 	br	804280 <__alt_data_end+0xff804280>
  80441c:	18c03fcc 	andi	r3,r3,255
  804420:	1805551e 	bne	r3,zero,805978 <___vfprintf_internal_r+0x21e0>
  804424:	01402074 	movhi	r5,129
  804428:	29444504 	addi	r5,r5,4372
  80442c:	d9403915 	stw	r5,228(sp)
  804430:	9080080c 	andi	r2,r18,32
  804434:	103fae1e 	bne	r2,zero,8042f0 <__alt_data_end+0xff8042f0>
  804438:	9080040c 	andi	r2,r18,16
  80443c:	1002de26 	beq	r2,zero,804fb8 <___vfprintf_internal_r+0x1820>
  804440:	d8c02d17 	ldw	r3,180(sp)
  804444:	002d883a 	mov	r22,zero
  804448:	1cc00017 	ldw	r19,0(r3)
  80444c:	18c00104 	addi	r3,r3,4
  804450:	d8c02d15 	stw	r3,180(sp)
  804454:	003fab06 	br	804304 <__alt_data_end+0xff804304>
  804458:	38803fcc 	andi	r2,r7,255
  80445c:	1080201c 	xori	r2,r2,128
  804460:	10bfe004 	addi	r2,r2,-128
  804464:	1002d21e 	bne	r2,zero,804fb0 <___vfprintf_internal_r+0x1818>
  804468:	00c00044 	movi	r3,1
  80446c:	01c00804 	movi	r7,32
  804470:	ac400007 	ldb	r17,0(r21)
  804474:	003d2906 	br	80391c <__alt_data_end+0xff80391c>
  804478:	94800054 	ori	r18,r18,1
  80447c:	ac400007 	ldb	r17,0(r21)
  804480:	003d2606 	br	80391c <__alt_data_end+0xff80391c>
  804484:	18c03fcc 	andi	r3,r3,255
  804488:	183e0526 	beq	r3,zero,803ca0 <__alt_data_end+0xff803ca0>
  80448c:	d9c02785 	stb	r7,158(sp)
  804490:	003e0306 	br	803ca0 <__alt_data_end+0xff803ca0>
  804494:	94801014 	ori	r18,r18,64
  804498:	ac400007 	ldb	r17,0(r21)
  80449c:	003d1f06 	br	80391c <__alt_data_end+0xff80391c>
  8044a0:	ac400007 	ldb	r17,0(r21)
  8044a4:	8a438726 	beq	r17,r9,8052c4 <___vfprintf_internal_r+0x1b2c>
  8044a8:	94800414 	ori	r18,r18,16
  8044ac:	003d1b06 	br	80391c <__alt_data_end+0xff80391c>
  8044b0:	18c03fcc 	andi	r3,r3,255
  8044b4:	1805341e 	bne	r3,zero,805988 <___vfprintf_internal_r+0x21f0>
  8044b8:	9080080c 	andi	r2,r18,32
  8044bc:	1002cd26 	beq	r2,zero,804ff4 <___vfprintf_internal_r+0x185c>
  8044c0:	d9402d17 	ldw	r5,180(sp)
  8044c4:	d9002f17 	ldw	r4,188(sp)
  8044c8:	28800017 	ldw	r2,0(r5)
  8044cc:	2007d7fa 	srai	r3,r4,31
  8044d0:	29400104 	addi	r5,r5,4
  8044d4:	d9402d15 	stw	r5,180(sp)
  8044d8:	11000015 	stw	r4,0(r2)
  8044dc:	10c00115 	stw	r3,4(r2)
  8044e0:	003ce506 	br	803878 <__alt_data_end+0xff803878>
  8044e4:	d8c02d17 	ldw	r3,180(sp)
  8044e8:	d9002d17 	ldw	r4,180(sp)
  8044ec:	d8002785 	stb	zero,158(sp)
  8044f0:	18800017 	ldw	r2,0(r3)
  8044f4:	21000104 	addi	r4,r4,4
  8044f8:	00c00044 	movi	r3,1
  8044fc:	d8c02a15 	stw	r3,168(sp)
  804500:	d8801405 	stb	r2,80(sp)
  804504:	d9002d15 	stw	r4,180(sp)
  804508:	d8c02e15 	stw	r3,184(sp)
  80450c:	d8002915 	stw	zero,164(sp)
  804510:	d8003215 	stw	zero,200(sp)
  804514:	dc001404 	addi	r16,sp,80
  804518:	0039883a 	mov	fp,zero
  80451c:	003e7206 	br	803ee8 <__alt_data_end+0xff803ee8>
  804520:	01002074 	movhi	r4,129
  804524:	21044504 	addi	r4,r4,4372
  804528:	0039883a 	mov	fp,zero
  80452c:	d9003915 	stw	r4,228(sp)
  804530:	04401e04 	movi	r17,120
  804534:	003f8206 	br	804340 <__alt_data_end+0xff804340>
  804538:	18c03fcc 	andi	r3,r3,255
  80453c:	1805061e 	bne	r3,zero,805958 <___vfprintf_internal_r+0x21c0>
  804540:	883d9126 	beq	r17,zero,803b88 <__alt_data_end+0xff803b88>
  804544:	00c00044 	movi	r3,1
  804548:	d8c02a15 	stw	r3,168(sp)
  80454c:	dc401405 	stb	r17,80(sp)
  804550:	d8002785 	stb	zero,158(sp)
  804554:	003fec06 	br	804508 <__alt_data_end+0xff804508>
  804558:	01402074 	movhi	r5,129
  80455c:	29444504 	addi	r5,r5,4372
  804560:	d9403915 	stw	r5,228(sp)
  804564:	d8c02d15 	stw	r3,180(sp)
  804568:	1025883a 	mov	r18,r2
  80456c:	04401e04 	movi	r17,120
  804570:	9d84b03a 	or	r2,r19,r22
  804574:	1000fc1e 	bne	r2,zero,804968 <___vfprintf_internal_r+0x11d0>
  804578:	0039883a 	mov	fp,zero
  80457c:	00800084 	movi	r2,2
  804580:	10803fcc 	andi	r2,r2,255
  804584:	00c00044 	movi	r3,1
  804588:	10c20f26 	beq	r2,r3,804dc8 <___vfprintf_internal_r+0x1630>
  80458c:	00c00084 	movi	r3,2
  804590:	10fd6326 	beq	r2,r3,803b20 <__alt_data_end+0xff803b20>
  804594:	003e2d06 	br	803e4c <__alt_data_end+0xff803e4c>
  804598:	d8c02017 	ldw	r3,128(sp)
  80459c:	003e9306 	br	803fec <__alt_data_end+0xff803fec>
  8045a0:	00801944 	movi	r2,101
  8045a4:	14407e0e 	bge	r2,r17,8047a0 <___vfprintf_internal_r+0x1008>
  8045a8:	d9003617 	ldw	r4,216(sp)
  8045ac:	d9403817 	ldw	r5,224(sp)
  8045b0:	000d883a 	mov	r6,zero
  8045b4:	000f883a 	mov	r7,zero
  8045b8:	d8c03c15 	stw	r3,240(sp)
  8045bc:	da003d15 	stw	r8,244(sp)
  8045c0:	080e1f80 	call	80e1f8 <__eqdf2>
  8045c4:	d8c03c17 	ldw	r3,240(sp)
  8045c8:	da003d17 	ldw	r8,244(sp)
  8045cc:	1000f71e 	bne	r2,zero,8049ac <___vfprintf_internal_r+0x1214>
  8045d0:	d8801f17 	ldw	r2,124(sp)
  8045d4:	01002074 	movhi	r4,129
  8045d8:	21044c04 	addi	r4,r4,4400
  8045dc:	18c00044 	addi	r3,r3,1
  8045e0:	10800044 	addi	r2,r2,1
  8045e4:	41000015 	stw	r4,0(r8)
  8045e8:	01000044 	movi	r4,1
  8045ec:	41000115 	stw	r4,4(r8)
  8045f0:	d8c02015 	stw	r3,128(sp)
  8045f4:	d8801f15 	stw	r2,124(sp)
  8045f8:	010001c4 	movi	r4,7
  8045fc:	2082b816 	blt	r4,r2,8050e0 <___vfprintf_internal_r+0x1948>
  804600:	42000204 	addi	r8,r8,8
  804604:	d8802617 	ldw	r2,152(sp)
  804608:	d9403317 	ldw	r5,204(sp)
  80460c:	11400216 	blt	r2,r5,804618 <___vfprintf_internal_r+0xe80>
  804610:	9080004c 	andi	r2,r18,1
  804614:	103ed526 	beq	r2,zero,80416c <__alt_data_end+0xff80416c>
  804618:	d8803717 	ldw	r2,220(sp)
  80461c:	d9003417 	ldw	r4,208(sp)
  804620:	d9403717 	ldw	r5,220(sp)
  804624:	1887883a 	add	r3,r3,r2
  804628:	d8801f17 	ldw	r2,124(sp)
  80462c:	41000015 	stw	r4,0(r8)
  804630:	41400115 	stw	r5,4(r8)
  804634:	10800044 	addi	r2,r2,1
  804638:	d8c02015 	stw	r3,128(sp)
  80463c:	d8801f15 	stw	r2,124(sp)
  804640:	010001c4 	movi	r4,7
  804644:	20832916 	blt	r4,r2,8052ec <___vfprintf_internal_r+0x1b54>
  804648:	42000204 	addi	r8,r8,8
  80464c:	d8803317 	ldw	r2,204(sp)
  804650:	143fffc4 	addi	r16,r2,-1
  804654:	043ec50e 	bge	zero,r16,80416c <__alt_data_end+0xff80416c>
  804658:	04400404 	movi	r17,16
  80465c:	d8801f17 	ldw	r2,124(sp)
  804660:	8c00880e 	bge	r17,r16,804884 <___vfprintf_internal_r+0x10ec>
  804664:	01402074 	movhi	r5,129
  804668:	29444c84 	addi	r5,r5,4402
  80466c:	d9402b15 	stw	r5,172(sp)
  804670:	058001c4 	movi	r22,7
  804674:	dcc02c17 	ldw	r19,176(sp)
  804678:	00000306 	br	804688 <___vfprintf_internal_r+0xef0>
  80467c:	42000204 	addi	r8,r8,8
  804680:	843ffc04 	addi	r16,r16,-16
  804684:	8c00820e 	bge	r17,r16,804890 <___vfprintf_internal_r+0x10f8>
  804688:	18c00404 	addi	r3,r3,16
  80468c:	10800044 	addi	r2,r2,1
  804690:	45000015 	stw	r20,0(r8)
  804694:	44400115 	stw	r17,4(r8)
  804698:	d8c02015 	stw	r3,128(sp)
  80469c:	d8801f15 	stw	r2,124(sp)
  8046a0:	b0bff60e 	bge	r22,r2,80467c <__alt_data_end+0xff80467c>
  8046a4:	d9801e04 	addi	r6,sp,120
  8046a8:	b80b883a 	mov	r5,r23
  8046ac:	9809883a 	mov	r4,r19
  8046b0:	080a2b00 	call	80a2b0 <__sprint_r>
  8046b4:	103d3a1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8046b8:	d8c02017 	ldw	r3,128(sp)
  8046bc:	d8801f17 	ldw	r2,124(sp)
  8046c0:	da000404 	addi	r8,sp,16
  8046c4:	003fee06 	br	804680 <__alt_data_end+0xff804680>
  8046c8:	d9403117 	ldw	r5,196(sp)
  8046cc:	d8802a17 	ldw	r2,168(sp)
  8046d0:	28adc83a 	sub	r22,r5,r2
  8046d4:	05be630e 	bge	zero,r22,804064 <__alt_data_end+0xff804064>
  8046d8:	07000404 	movi	fp,16
  8046dc:	d8801f17 	ldw	r2,124(sp)
  8046e0:	e5838f0e 	bge	fp,r22,805520 <___vfprintf_internal_r+0x1d88>
  8046e4:	01402074 	movhi	r5,129
  8046e8:	29444c84 	addi	r5,r5,4402
  8046ec:	dc403015 	stw	r17,192(sp)
  8046f0:	d9402b15 	stw	r5,172(sp)
  8046f4:	b023883a 	mov	r17,r22
  8046f8:	04c001c4 	movi	r19,7
  8046fc:	a82d883a 	mov	r22,r21
  804700:	902b883a 	mov	r21,r18
  804704:	8025883a 	mov	r18,r16
  804708:	dc002c17 	ldw	r16,176(sp)
  80470c:	00000306 	br	80471c <___vfprintf_internal_r+0xf84>
  804710:	8c7ffc04 	addi	r17,r17,-16
  804714:	42000204 	addi	r8,r8,8
  804718:	e440110e 	bge	fp,r17,804760 <___vfprintf_internal_r+0xfc8>
  80471c:	18c00404 	addi	r3,r3,16
  804720:	10800044 	addi	r2,r2,1
  804724:	45000015 	stw	r20,0(r8)
  804728:	47000115 	stw	fp,4(r8)
  80472c:	d8c02015 	stw	r3,128(sp)
  804730:	d8801f15 	stw	r2,124(sp)
  804734:	98bff60e 	bge	r19,r2,804710 <__alt_data_end+0xff804710>
  804738:	d9801e04 	addi	r6,sp,120
  80473c:	b80b883a 	mov	r5,r23
  804740:	8009883a 	mov	r4,r16
  804744:	080a2b00 	call	80a2b0 <__sprint_r>
  804748:	103d151e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  80474c:	8c7ffc04 	addi	r17,r17,-16
  804750:	d8c02017 	ldw	r3,128(sp)
  804754:	d8801f17 	ldw	r2,124(sp)
  804758:	da000404 	addi	r8,sp,16
  80475c:	e47fef16 	blt	fp,r17,80471c <__alt_data_end+0xff80471c>
  804760:	9021883a 	mov	r16,r18
  804764:	a825883a 	mov	r18,r21
  804768:	b02b883a 	mov	r21,r22
  80476c:	882d883a 	mov	r22,r17
  804770:	dc403017 	ldw	r17,192(sp)
  804774:	d9002b17 	ldw	r4,172(sp)
  804778:	1d87883a 	add	r3,r3,r22
  80477c:	10800044 	addi	r2,r2,1
  804780:	41000015 	stw	r4,0(r8)
  804784:	45800115 	stw	r22,4(r8)
  804788:	d8c02015 	stw	r3,128(sp)
  80478c:	d8801f15 	stw	r2,124(sp)
  804790:	010001c4 	movi	r4,7
  804794:	20818e16 	blt	r4,r2,804dd0 <___vfprintf_internal_r+0x1638>
  804798:	42000204 	addi	r8,r8,8
  80479c:	003e3106 	br	804064 <__alt_data_end+0xff804064>
  8047a0:	d9403317 	ldw	r5,204(sp)
  8047a4:	00800044 	movi	r2,1
  8047a8:	18c00044 	addi	r3,r3,1
  8047ac:	1141530e 	bge	r2,r5,804cfc <___vfprintf_internal_r+0x1564>
  8047b0:	dc401f17 	ldw	r17,124(sp)
  8047b4:	00800044 	movi	r2,1
  8047b8:	40800115 	stw	r2,4(r8)
  8047bc:	8c400044 	addi	r17,r17,1
  8047c0:	44000015 	stw	r16,0(r8)
  8047c4:	d8c02015 	stw	r3,128(sp)
  8047c8:	dc401f15 	stw	r17,124(sp)
  8047cc:	008001c4 	movi	r2,7
  8047d0:	14416b16 	blt	r2,r17,804d80 <___vfprintf_internal_r+0x15e8>
  8047d4:	42000204 	addi	r8,r8,8
  8047d8:	d8803717 	ldw	r2,220(sp)
  8047dc:	d9003417 	ldw	r4,208(sp)
  8047e0:	8c400044 	addi	r17,r17,1
  8047e4:	10c7883a 	add	r3,r2,r3
  8047e8:	40800115 	stw	r2,4(r8)
  8047ec:	41000015 	stw	r4,0(r8)
  8047f0:	d8c02015 	stw	r3,128(sp)
  8047f4:	dc401f15 	stw	r17,124(sp)
  8047f8:	008001c4 	movi	r2,7
  8047fc:	14416916 	blt	r2,r17,804da4 <___vfprintf_internal_r+0x160c>
  804800:	45800204 	addi	r22,r8,8
  804804:	d9003617 	ldw	r4,216(sp)
  804808:	d9403817 	ldw	r5,224(sp)
  80480c:	000d883a 	mov	r6,zero
  804810:	000f883a 	mov	r7,zero
  804814:	d8c03c15 	stw	r3,240(sp)
  804818:	080e1f80 	call	80e1f8 <__eqdf2>
  80481c:	d8c03c17 	ldw	r3,240(sp)
  804820:	1000bc26 	beq	r2,zero,804b14 <___vfprintf_internal_r+0x137c>
  804824:	d9403317 	ldw	r5,204(sp)
  804828:	84000044 	addi	r16,r16,1
  80482c:	8c400044 	addi	r17,r17,1
  804830:	28bfffc4 	addi	r2,r5,-1
  804834:	1887883a 	add	r3,r3,r2
  804838:	b0800115 	stw	r2,4(r22)
  80483c:	b4000015 	stw	r16,0(r22)
  804840:	d8c02015 	stw	r3,128(sp)
  804844:	dc401f15 	stw	r17,124(sp)
  804848:	008001c4 	movi	r2,7
  80484c:	14414316 	blt	r2,r17,804d5c <___vfprintf_internal_r+0x15c4>
  804850:	b5800204 	addi	r22,r22,8
  804854:	d9003a17 	ldw	r4,232(sp)
  804858:	df0022c4 	addi	fp,sp,139
  80485c:	8c400044 	addi	r17,r17,1
  804860:	20c7883a 	add	r3,r4,r3
  804864:	b7000015 	stw	fp,0(r22)
  804868:	b1000115 	stw	r4,4(r22)
  80486c:	d8c02015 	stw	r3,128(sp)
  804870:	dc401f15 	stw	r17,124(sp)
  804874:	008001c4 	movi	r2,7
  804878:	14400e16 	blt	r2,r17,8048b4 <___vfprintf_internal_r+0x111c>
  80487c:	b2000204 	addi	r8,r22,8
  804880:	003e3a06 	br	80416c <__alt_data_end+0xff80416c>
  804884:	01002074 	movhi	r4,129
  804888:	21044c84 	addi	r4,r4,4402
  80488c:	d9002b15 	stw	r4,172(sp)
  804890:	d9002b17 	ldw	r4,172(sp)
  804894:	1c07883a 	add	r3,r3,r16
  804898:	44000115 	stw	r16,4(r8)
  80489c:	41000015 	stw	r4,0(r8)
  8048a0:	10800044 	addi	r2,r2,1
  8048a4:	d8c02015 	stw	r3,128(sp)
  8048a8:	d8801f15 	stw	r2,124(sp)
  8048ac:	010001c4 	movi	r4,7
  8048b0:	20be2d0e 	bge	r4,r2,804168 <__alt_data_end+0xff804168>
  8048b4:	d9002c17 	ldw	r4,176(sp)
  8048b8:	d9801e04 	addi	r6,sp,120
  8048bc:	b80b883a 	mov	r5,r23
  8048c0:	080a2b00 	call	80a2b0 <__sprint_r>
  8048c4:	103cb61e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8048c8:	d8c02017 	ldw	r3,128(sp)
  8048cc:	da000404 	addi	r8,sp,16
  8048d0:	003e2606 	br	80416c <__alt_data_end+0xff80416c>
  8048d4:	d9002c17 	ldw	r4,176(sp)
  8048d8:	d9801e04 	addi	r6,sp,120
  8048dc:	b80b883a 	mov	r5,r23
  8048e0:	080a2b00 	call	80a2b0 <__sprint_r>
  8048e4:	103e5d26 	beq	r2,zero,80425c <__alt_data_end+0xff80425c>
  8048e8:	003cad06 	br	803ba0 <__alt_data_end+0xff803ba0>
  8048ec:	d9002c17 	ldw	r4,176(sp)
  8048f0:	d9801e04 	addi	r6,sp,120
  8048f4:	b80b883a 	mov	r5,r23
  8048f8:	080a2b00 	call	80a2b0 <__sprint_r>
  8048fc:	103ca81e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804900:	d8c02017 	ldw	r3,128(sp)
  804904:	da000404 	addi	r8,sp,16
  804908:	003e0b06 	br	804138 <__alt_data_end+0xff804138>
  80490c:	d9002c17 	ldw	r4,176(sp)
  804910:	d9801e04 	addi	r6,sp,120
  804914:	b80b883a 	mov	r5,r23
  804918:	080a2b00 	call	80a2b0 <__sprint_r>
  80491c:	103ca01e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804920:	d8c02017 	ldw	r3,128(sp)
  804924:	da000404 	addi	r8,sp,16
  804928:	003dbd06 	br	804020 <__alt_data_end+0xff804020>
  80492c:	d9002c17 	ldw	r4,176(sp)
  804930:	d9801e04 	addi	r6,sp,120
  804934:	b80b883a 	mov	r5,r23
  804938:	080a2b00 	call	80a2b0 <__sprint_r>
  80493c:	103c981e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804940:	d8c02017 	ldw	r3,128(sp)
  804944:	da000404 	addi	r8,sp,16
  804948:	003dc306 	br	804058 <__alt_data_end+0xff804058>
  80494c:	d8802917 	ldw	r2,164(sp)
  804950:	d8002785 	stb	zero,158(sp)
  804954:	103f0616 	blt	r2,zero,804570 <__alt_data_end+0xff804570>
  804958:	00ffdfc4 	movi	r3,-129
  80495c:	9d84b03a 	or	r2,r19,r22
  804960:	90e4703a 	and	r18,r18,r3
  804964:	103c6b26 	beq	r2,zero,803b14 <__alt_data_end+0xff803b14>
  804968:	0039883a 	mov	fp,zero
  80496c:	003e7406 	br	804340 <__alt_data_end+0xff804340>
  804970:	9080040c 	andi	r2,r18,16
  804974:	1001b326 	beq	r2,zero,805044 <___vfprintf_internal_r+0x18ac>
  804978:	d9002d17 	ldw	r4,180(sp)
  80497c:	d9402917 	ldw	r5,164(sp)
  804980:	d8002785 	stb	zero,158(sp)
  804984:	20800104 	addi	r2,r4,4
  804988:	24c00017 	ldw	r19,0(r4)
  80498c:	002d883a 	mov	r22,zero
  804990:	2801b516 	blt	r5,zero,805068 <___vfprintf_internal_r+0x18d0>
  804994:	00ffdfc4 	movi	r3,-129
  804998:	d8802d15 	stw	r2,180(sp)
  80499c:	90e4703a 	and	r18,r18,r3
  8049a0:	983d2726 	beq	r19,zero,803e40 <__alt_data_end+0xff803e40>
  8049a4:	0039883a 	mov	fp,zero
  8049a8:	003d2a06 	br	803e54 <__alt_data_end+0xff803e54>
  8049ac:	dc402617 	ldw	r17,152(sp)
  8049b0:	0441d30e 	bge	zero,r17,805100 <___vfprintf_internal_r+0x1968>
  8049b4:	dc403217 	ldw	r17,200(sp)
  8049b8:	d8803317 	ldw	r2,204(sp)
  8049bc:	1440010e 	bge	r2,r17,8049c4 <___vfprintf_internal_r+0x122c>
  8049c0:	1023883a 	mov	r17,r2
  8049c4:	04400a0e 	bge	zero,r17,8049f0 <___vfprintf_internal_r+0x1258>
  8049c8:	d8801f17 	ldw	r2,124(sp)
  8049cc:	1c47883a 	add	r3,r3,r17
  8049d0:	44000015 	stw	r16,0(r8)
  8049d4:	10800044 	addi	r2,r2,1
  8049d8:	44400115 	stw	r17,4(r8)
  8049dc:	d8c02015 	stw	r3,128(sp)
  8049e0:	d8801f15 	stw	r2,124(sp)
  8049e4:	010001c4 	movi	r4,7
  8049e8:	20826516 	blt	r4,r2,805380 <___vfprintf_internal_r+0x1be8>
  8049ec:	42000204 	addi	r8,r8,8
  8049f0:	88026116 	blt	r17,zero,805378 <___vfprintf_internal_r+0x1be0>
  8049f4:	d9003217 	ldw	r4,200(sp)
  8049f8:	2463c83a 	sub	r17,r4,r17
  8049fc:	04407b0e 	bge	zero,r17,804bec <___vfprintf_internal_r+0x1454>
  804a00:	05800404 	movi	r22,16
  804a04:	d8801f17 	ldw	r2,124(sp)
  804a08:	b4419d0e 	bge	r22,r17,805080 <___vfprintf_internal_r+0x18e8>
  804a0c:	01002074 	movhi	r4,129
  804a10:	21044c84 	addi	r4,r4,4402
  804a14:	d9002b15 	stw	r4,172(sp)
  804a18:	070001c4 	movi	fp,7
  804a1c:	dcc02c17 	ldw	r19,176(sp)
  804a20:	00000306 	br	804a30 <___vfprintf_internal_r+0x1298>
  804a24:	42000204 	addi	r8,r8,8
  804a28:	8c7ffc04 	addi	r17,r17,-16
  804a2c:	b441970e 	bge	r22,r17,80508c <___vfprintf_internal_r+0x18f4>
  804a30:	18c00404 	addi	r3,r3,16
  804a34:	10800044 	addi	r2,r2,1
  804a38:	45000015 	stw	r20,0(r8)
  804a3c:	45800115 	stw	r22,4(r8)
  804a40:	d8c02015 	stw	r3,128(sp)
  804a44:	d8801f15 	stw	r2,124(sp)
  804a48:	e0bff60e 	bge	fp,r2,804a24 <__alt_data_end+0xff804a24>
  804a4c:	d9801e04 	addi	r6,sp,120
  804a50:	b80b883a 	mov	r5,r23
  804a54:	9809883a 	mov	r4,r19
  804a58:	080a2b00 	call	80a2b0 <__sprint_r>
  804a5c:	103c501e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804a60:	d8c02017 	ldw	r3,128(sp)
  804a64:	d8801f17 	ldw	r2,124(sp)
  804a68:	da000404 	addi	r8,sp,16
  804a6c:	003fee06 	br	804a28 <__alt_data_end+0xff804a28>
  804a70:	d9002c17 	ldw	r4,176(sp)
  804a74:	d9801e04 	addi	r6,sp,120
  804a78:	b80b883a 	mov	r5,r23
  804a7c:	080a2b00 	call	80a2b0 <__sprint_r>
  804a80:	103c471e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804a84:	d8c02017 	ldw	r3,128(sp)
  804a88:	df002787 	ldb	fp,158(sp)
  804a8c:	da000404 	addi	r8,sp,16
  804a90:	003d5606 	br	803fec <__alt_data_end+0xff803fec>
  804a94:	9080040c 	andi	r2,r18,16
  804a98:	10016126 	beq	r2,zero,805020 <___vfprintf_internal_r+0x1888>
  804a9c:	d8802d17 	ldw	r2,180(sp)
  804aa0:	14c00017 	ldw	r19,0(r2)
  804aa4:	10800104 	addi	r2,r2,4
  804aa8:	d8802d15 	stw	r2,180(sp)
  804aac:	982dd7fa 	srai	r22,r19,31
  804ab0:	b005883a 	mov	r2,r22
  804ab4:	003c8206 	br	803cc0 <__alt_data_end+0xff803cc0>
  804ab8:	9080040c 	andi	r2,r18,16
  804abc:	10003526 	beq	r2,zero,804b94 <___vfprintf_internal_r+0x13fc>
  804ac0:	d9402d17 	ldw	r5,180(sp)
  804ac4:	d8c02917 	ldw	r3,164(sp)
  804ac8:	d8002785 	stb	zero,158(sp)
  804acc:	28800104 	addi	r2,r5,4
  804ad0:	2cc00017 	ldw	r19,0(r5)
  804ad4:	002d883a 	mov	r22,zero
  804ad8:	18003716 	blt	r3,zero,804bb8 <___vfprintf_internal_r+0x1420>
  804adc:	00ffdfc4 	movi	r3,-129
  804ae0:	d8802d15 	stw	r2,180(sp)
  804ae4:	90e4703a 	and	r18,r18,r3
  804ae8:	0039883a 	mov	fp,zero
  804aec:	983df326 	beq	r19,zero,8042bc <__alt_data_end+0xff8042bc>
  804af0:	00800244 	movi	r2,9
  804af4:	14fc7b36 	bltu	r2,r19,803ce4 <__alt_data_end+0xff803ce4>
  804af8:	d8c02817 	ldw	r3,160(sp)
  804afc:	dc001dc4 	addi	r16,sp,119
  804b00:	9cc00c04 	addi	r19,r19,48
  804b04:	1c07c83a 	sub	r3,r3,r16
  804b08:	dcc01dc5 	stb	r19,119(sp)
  804b0c:	d8c02e15 	stw	r3,184(sp)
  804b10:	003ce806 	br	803eb4 <__alt_data_end+0xff803eb4>
  804b14:	d8803317 	ldw	r2,204(sp)
  804b18:	143fffc4 	addi	r16,r2,-1
  804b1c:	043f4d0e 	bge	zero,r16,804854 <__alt_data_end+0xff804854>
  804b20:	07000404 	movi	fp,16
  804b24:	e400810e 	bge	fp,r16,804d2c <___vfprintf_internal_r+0x1594>
  804b28:	01402074 	movhi	r5,129
  804b2c:	29444c84 	addi	r5,r5,4402
  804b30:	d9402b15 	stw	r5,172(sp)
  804b34:	01c001c4 	movi	r7,7
  804b38:	dcc02c17 	ldw	r19,176(sp)
  804b3c:	00000306 	br	804b4c <___vfprintf_internal_r+0x13b4>
  804b40:	b5800204 	addi	r22,r22,8
  804b44:	843ffc04 	addi	r16,r16,-16
  804b48:	e4007b0e 	bge	fp,r16,804d38 <___vfprintf_internal_r+0x15a0>
  804b4c:	18c00404 	addi	r3,r3,16
  804b50:	8c400044 	addi	r17,r17,1
  804b54:	b5000015 	stw	r20,0(r22)
  804b58:	b7000115 	stw	fp,4(r22)
  804b5c:	d8c02015 	stw	r3,128(sp)
  804b60:	dc401f15 	stw	r17,124(sp)
  804b64:	3c7ff60e 	bge	r7,r17,804b40 <__alt_data_end+0xff804b40>
  804b68:	d9801e04 	addi	r6,sp,120
  804b6c:	b80b883a 	mov	r5,r23
  804b70:	9809883a 	mov	r4,r19
  804b74:	d9c03c15 	stw	r7,240(sp)
  804b78:	080a2b00 	call	80a2b0 <__sprint_r>
  804b7c:	d9c03c17 	ldw	r7,240(sp)
  804b80:	103c071e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804b84:	d8c02017 	ldw	r3,128(sp)
  804b88:	dc401f17 	ldw	r17,124(sp)
  804b8c:	dd800404 	addi	r22,sp,16
  804b90:	003fec06 	br	804b44 <__alt_data_end+0xff804b44>
  804b94:	9080100c 	andi	r2,r18,64
  804b98:	d8002785 	stb	zero,158(sp)
  804b9c:	10010e26 	beq	r2,zero,804fd8 <___vfprintf_internal_r+0x1840>
  804ba0:	d9002d17 	ldw	r4,180(sp)
  804ba4:	d9402917 	ldw	r5,164(sp)
  804ba8:	002d883a 	mov	r22,zero
  804bac:	20800104 	addi	r2,r4,4
  804bb0:	24c0000b 	ldhu	r19,0(r4)
  804bb4:	283fc90e 	bge	r5,zero,804adc <__alt_data_end+0xff804adc>
  804bb8:	d8802d15 	stw	r2,180(sp)
  804bbc:	0039883a 	mov	fp,zero
  804bc0:	9d84b03a 	or	r2,r19,r22
  804bc4:	103c461e 	bne	r2,zero,803ce0 <__alt_data_end+0xff803ce0>
  804bc8:	00800044 	movi	r2,1
  804bcc:	003e6c06 	br	804580 <__alt_data_end+0xff804580>
  804bd0:	d9002c17 	ldw	r4,176(sp)
  804bd4:	d9801e04 	addi	r6,sp,120
  804bd8:	b80b883a 	mov	r5,r23
  804bdc:	080a2b00 	call	80a2b0 <__sprint_r>
  804be0:	103bef1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804be4:	d8c02017 	ldw	r3,128(sp)
  804be8:	da000404 	addi	r8,sp,16
  804bec:	d9003217 	ldw	r4,200(sp)
  804bf0:	d8802617 	ldw	r2,152(sp)
  804bf4:	d9403317 	ldw	r5,204(sp)
  804bf8:	8123883a 	add	r17,r16,r4
  804bfc:	11400216 	blt	r2,r5,804c08 <___vfprintf_internal_r+0x1470>
  804c00:	9100004c 	andi	r4,r18,1
  804c04:	20000d26 	beq	r4,zero,804c3c <___vfprintf_internal_r+0x14a4>
  804c08:	d9003717 	ldw	r4,220(sp)
  804c0c:	d9403417 	ldw	r5,208(sp)
  804c10:	1907883a 	add	r3,r3,r4
  804c14:	d9001f17 	ldw	r4,124(sp)
  804c18:	41400015 	stw	r5,0(r8)
  804c1c:	d9403717 	ldw	r5,220(sp)
  804c20:	21000044 	addi	r4,r4,1
  804c24:	d8c02015 	stw	r3,128(sp)
  804c28:	41400115 	stw	r5,4(r8)
  804c2c:	d9001f15 	stw	r4,124(sp)
  804c30:	014001c4 	movi	r5,7
  804c34:	2901e816 	blt	r5,r4,8053d8 <___vfprintf_internal_r+0x1c40>
  804c38:	42000204 	addi	r8,r8,8
  804c3c:	d9003317 	ldw	r4,204(sp)
  804c40:	8121883a 	add	r16,r16,r4
  804c44:	2085c83a 	sub	r2,r4,r2
  804c48:	8461c83a 	sub	r16,r16,r17
  804c4c:	1400010e 	bge	r2,r16,804c54 <___vfprintf_internal_r+0x14bc>
  804c50:	1021883a 	mov	r16,r2
  804c54:	04000a0e 	bge	zero,r16,804c80 <___vfprintf_internal_r+0x14e8>
  804c58:	d9001f17 	ldw	r4,124(sp)
  804c5c:	1c07883a 	add	r3,r3,r16
  804c60:	44400015 	stw	r17,0(r8)
  804c64:	21000044 	addi	r4,r4,1
  804c68:	44000115 	stw	r16,4(r8)
  804c6c:	d8c02015 	stw	r3,128(sp)
  804c70:	d9001f15 	stw	r4,124(sp)
  804c74:	014001c4 	movi	r5,7
  804c78:	2901fb16 	blt	r5,r4,805468 <___vfprintf_internal_r+0x1cd0>
  804c7c:	42000204 	addi	r8,r8,8
  804c80:	8001f716 	blt	r16,zero,805460 <___vfprintf_internal_r+0x1cc8>
  804c84:	1421c83a 	sub	r16,r2,r16
  804c88:	043d380e 	bge	zero,r16,80416c <__alt_data_end+0xff80416c>
  804c8c:	04400404 	movi	r17,16
  804c90:	d8801f17 	ldw	r2,124(sp)
  804c94:	8c3efb0e 	bge	r17,r16,804884 <__alt_data_end+0xff804884>
  804c98:	01402074 	movhi	r5,129
  804c9c:	29444c84 	addi	r5,r5,4402
  804ca0:	d9402b15 	stw	r5,172(sp)
  804ca4:	058001c4 	movi	r22,7
  804ca8:	dcc02c17 	ldw	r19,176(sp)
  804cac:	00000306 	br	804cbc <___vfprintf_internal_r+0x1524>
  804cb0:	42000204 	addi	r8,r8,8
  804cb4:	843ffc04 	addi	r16,r16,-16
  804cb8:	8c3ef50e 	bge	r17,r16,804890 <__alt_data_end+0xff804890>
  804cbc:	18c00404 	addi	r3,r3,16
  804cc0:	10800044 	addi	r2,r2,1
  804cc4:	45000015 	stw	r20,0(r8)
  804cc8:	44400115 	stw	r17,4(r8)
  804ccc:	d8c02015 	stw	r3,128(sp)
  804cd0:	d8801f15 	stw	r2,124(sp)
  804cd4:	b0bff60e 	bge	r22,r2,804cb0 <__alt_data_end+0xff804cb0>
  804cd8:	d9801e04 	addi	r6,sp,120
  804cdc:	b80b883a 	mov	r5,r23
  804ce0:	9809883a 	mov	r4,r19
  804ce4:	080a2b00 	call	80a2b0 <__sprint_r>
  804ce8:	103bad1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804cec:	d8c02017 	ldw	r3,128(sp)
  804cf0:	d8801f17 	ldw	r2,124(sp)
  804cf4:	da000404 	addi	r8,sp,16
  804cf8:	003fee06 	br	804cb4 <__alt_data_end+0xff804cb4>
  804cfc:	9088703a 	and	r4,r18,r2
  804d00:	203eab1e 	bne	r4,zero,8047b0 <__alt_data_end+0xff8047b0>
  804d04:	dc401f17 	ldw	r17,124(sp)
  804d08:	40800115 	stw	r2,4(r8)
  804d0c:	44000015 	stw	r16,0(r8)
  804d10:	8c400044 	addi	r17,r17,1
  804d14:	d8c02015 	stw	r3,128(sp)
  804d18:	dc401f15 	stw	r17,124(sp)
  804d1c:	008001c4 	movi	r2,7
  804d20:	14400e16 	blt	r2,r17,804d5c <___vfprintf_internal_r+0x15c4>
  804d24:	45800204 	addi	r22,r8,8
  804d28:	003eca06 	br	804854 <__alt_data_end+0xff804854>
  804d2c:	01002074 	movhi	r4,129
  804d30:	21044c84 	addi	r4,r4,4402
  804d34:	d9002b15 	stw	r4,172(sp)
  804d38:	d8802b17 	ldw	r2,172(sp)
  804d3c:	1c07883a 	add	r3,r3,r16
  804d40:	8c400044 	addi	r17,r17,1
  804d44:	b0800015 	stw	r2,0(r22)
  804d48:	b4000115 	stw	r16,4(r22)
  804d4c:	d8c02015 	stw	r3,128(sp)
  804d50:	dc401f15 	stw	r17,124(sp)
  804d54:	008001c4 	movi	r2,7
  804d58:	147ebd0e 	bge	r2,r17,804850 <__alt_data_end+0xff804850>
  804d5c:	d9002c17 	ldw	r4,176(sp)
  804d60:	d9801e04 	addi	r6,sp,120
  804d64:	b80b883a 	mov	r5,r23
  804d68:	080a2b00 	call	80a2b0 <__sprint_r>
  804d6c:	103b8c1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804d70:	d8c02017 	ldw	r3,128(sp)
  804d74:	dc401f17 	ldw	r17,124(sp)
  804d78:	dd800404 	addi	r22,sp,16
  804d7c:	003eb506 	br	804854 <__alt_data_end+0xff804854>
  804d80:	d9002c17 	ldw	r4,176(sp)
  804d84:	d9801e04 	addi	r6,sp,120
  804d88:	b80b883a 	mov	r5,r23
  804d8c:	080a2b00 	call	80a2b0 <__sprint_r>
  804d90:	103b831e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804d94:	d8c02017 	ldw	r3,128(sp)
  804d98:	dc401f17 	ldw	r17,124(sp)
  804d9c:	da000404 	addi	r8,sp,16
  804da0:	003e8d06 	br	8047d8 <__alt_data_end+0xff8047d8>
  804da4:	d9002c17 	ldw	r4,176(sp)
  804da8:	d9801e04 	addi	r6,sp,120
  804dac:	b80b883a 	mov	r5,r23
  804db0:	080a2b00 	call	80a2b0 <__sprint_r>
  804db4:	103b7a1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804db8:	d8c02017 	ldw	r3,128(sp)
  804dbc:	dc401f17 	ldw	r17,124(sp)
  804dc0:	dd800404 	addi	r22,sp,16
  804dc4:	003e8f06 	br	804804 <__alt_data_end+0xff804804>
  804dc8:	0027883a 	mov	r19,zero
  804dcc:	003f4a06 	br	804af8 <__alt_data_end+0xff804af8>
  804dd0:	d9002c17 	ldw	r4,176(sp)
  804dd4:	d9801e04 	addi	r6,sp,120
  804dd8:	b80b883a 	mov	r5,r23
  804ddc:	080a2b00 	call	80a2b0 <__sprint_r>
  804de0:	103b6f1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  804de4:	d8c02017 	ldw	r3,128(sp)
  804de8:	da000404 	addi	r8,sp,16
  804dec:	003c9d06 	br	804064 <__alt_data_end+0xff804064>
  804df0:	04e7c83a 	sub	r19,zero,r19
  804df4:	9804c03a 	cmpne	r2,r19,zero
  804df8:	05adc83a 	sub	r22,zero,r22
  804dfc:	b0adc83a 	sub	r22,r22,r2
  804e00:	d8802917 	ldw	r2,164(sp)
  804e04:	07000b44 	movi	fp,45
  804e08:	df002785 	stb	fp,158(sp)
  804e0c:	10017b16 	blt	r2,zero,8053fc <___vfprintf_internal_r+0x1c64>
  804e10:	00bfdfc4 	movi	r2,-129
  804e14:	90a4703a 	and	r18,r18,r2
  804e18:	003bb106 	br	803ce0 <__alt_data_end+0xff803ce0>
  804e1c:	d9003617 	ldw	r4,216(sp)
  804e20:	d9403817 	ldw	r5,224(sp)
  804e24:	da003d15 	stw	r8,244(sp)
  804e28:	0809e3c0 	call	809e3c <__fpclassifyd>
  804e2c:	da003d17 	ldw	r8,244(sp)
  804e30:	1000f026 	beq	r2,zero,8051f4 <___vfprintf_internal_r+0x1a5c>
  804e34:	d9002917 	ldw	r4,164(sp)
  804e38:	05bff7c4 	movi	r22,-33
  804e3c:	00bfffc4 	movi	r2,-1
  804e40:	8dac703a 	and	r22,r17,r22
  804e44:	20820026 	beq	r4,r2,805648 <___vfprintf_internal_r+0x1eb0>
  804e48:	008011c4 	movi	r2,71
  804e4c:	b081f726 	beq	r22,r2,80562c <___vfprintf_internal_r+0x1e94>
  804e50:	d9003817 	ldw	r4,224(sp)
  804e54:	90c04014 	ori	r3,r18,256
  804e58:	d8c02b15 	stw	r3,172(sp)
  804e5c:	20021516 	blt	r4,zero,8056b4 <___vfprintf_internal_r+0x1f1c>
  804e60:	dcc03817 	ldw	r19,224(sp)
  804e64:	d8002a05 	stb	zero,168(sp)
  804e68:	00801984 	movi	r2,102
  804e6c:	8881f926 	beq	r17,r2,805654 <___vfprintf_internal_r+0x1ebc>
  804e70:	00801184 	movi	r2,70
  804e74:	88821c26 	beq	r17,r2,8056e8 <___vfprintf_internal_r+0x1f50>
  804e78:	00801144 	movi	r2,69
  804e7c:	b081ef26 	beq	r22,r2,80563c <___vfprintf_internal_r+0x1ea4>
  804e80:	d8c02917 	ldw	r3,164(sp)
  804e84:	d8802104 	addi	r2,sp,132
  804e88:	d8800315 	stw	r2,12(sp)
  804e8c:	d9403617 	ldw	r5,216(sp)
  804e90:	d8802504 	addi	r2,sp,148
  804e94:	d9002c17 	ldw	r4,176(sp)
  804e98:	d8800215 	stw	r2,8(sp)
  804e9c:	d8802604 	addi	r2,sp,152
  804ea0:	d8c00015 	stw	r3,0(sp)
  804ea4:	d8800115 	stw	r2,4(sp)
  804ea8:	01c00084 	movi	r7,2
  804eac:	980d883a 	mov	r6,r19
  804eb0:	d8c03c15 	stw	r3,240(sp)
  804eb4:	da003d15 	stw	r8,244(sp)
  804eb8:	0805dbc0 	call	805dbc <_dtoa_r>
  804ebc:	1021883a 	mov	r16,r2
  804ec0:	008019c4 	movi	r2,103
  804ec4:	d8c03c17 	ldw	r3,240(sp)
  804ec8:	da003d17 	ldw	r8,244(sp)
  804ecc:	88817126 	beq	r17,r2,805494 <___vfprintf_internal_r+0x1cfc>
  804ed0:	008011c4 	movi	r2,71
  804ed4:	88829226 	beq	r17,r2,805920 <___vfprintf_internal_r+0x2188>
  804ed8:	80f9883a 	add	fp,r16,r3
  804edc:	d9003617 	ldw	r4,216(sp)
  804ee0:	000d883a 	mov	r6,zero
  804ee4:	000f883a 	mov	r7,zero
  804ee8:	980b883a 	mov	r5,r19
  804eec:	da003d15 	stw	r8,244(sp)
  804ef0:	080e1f80 	call	80e1f8 <__eqdf2>
  804ef4:	da003d17 	ldw	r8,244(sp)
  804ef8:	10018d26 	beq	r2,zero,805530 <___vfprintf_internal_r+0x1d98>
  804efc:	d8802117 	ldw	r2,132(sp)
  804f00:	1700062e 	bgeu	r2,fp,804f1c <___vfprintf_internal_r+0x1784>
  804f04:	01000c04 	movi	r4,48
  804f08:	10c00044 	addi	r3,r2,1
  804f0c:	d8c02115 	stw	r3,132(sp)
  804f10:	11000005 	stb	r4,0(r2)
  804f14:	d8802117 	ldw	r2,132(sp)
  804f18:	173ffb36 	bltu	r2,fp,804f08 <__alt_data_end+0xff804f08>
  804f1c:	1405c83a 	sub	r2,r2,r16
  804f20:	d8803315 	stw	r2,204(sp)
  804f24:	008011c4 	movi	r2,71
  804f28:	b0817626 	beq	r22,r2,805504 <___vfprintf_internal_r+0x1d6c>
  804f2c:	00801944 	movi	r2,101
  804f30:	1442810e 	bge	r2,r17,805938 <___vfprintf_internal_r+0x21a0>
  804f34:	d8c02617 	ldw	r3,152(sp)
  804f38:	00801984 	movi	r2,102
  804f3c:	d8c03215 	stw	r3,200(sp)
  804f40:	8881fe26 	beq	r17,r2,80573c <___vfprintf_internal_r+0x1fa4>
  804f44:	d8c03217 	ldw	r3,200(sp)
  804f48:	d9003317 	ldw	r4,204(sp)
  804f4c:	1901dd16 	blt	r3,r4,8056c4 <___vfprintf_internal_r+0x1f2c>
  804f50:	9480004c 	andi	r18,r18,1
  804f54:	90022b1e 	bne	r18,zero,805804 <___vfprintf_internal_r+0x206c>
  804f58:	1805883a 	mov	r2,r3
  804f5c:	18028016 	blt	r3,zero,805960 <___vfprintf_internal_r+0x21c8>
  804f60:	d8c03217 	ldw	r3,200(sp)
  804f64:	044019c4 	movi	r17,103
  804f68:	d8c02e15 	stw	r3,184(sp)
  804f6c:	df002a07 	ldb	fp,168(sp)
  804f70:	e001531e 	bne	fp,zero,8054c0 <___vfprintf_internal_r+0x1d28>
  804f74:	df002783 	ldbu	fp,158(sp)
  804f78:	d8802a15 	stw	r2,168(sp)
  804f7c:	dc802b17 	ldw	r18,172(sp)
  804f80:	d8002915 	stw	zero,164(sp)
  804f84:	003bd106 	br	803ecc <__alt_data_end+0xff803ecc>
  804f88:	d8802d17 	ldw	r2,180(sp)
  804f8c:	d8c02d17 	ldw	r3,180(sp)
  804f90:	d9002d17 	ldw	r4,180(sp)
  804f94:	10800017 	ldw	r2,0(r2)
  804f98:	18c00117 	ldw	r3,4(r3)
  804f9c:	21000204 	addi	r4,r4,8
  804fa0:	d8803615 	stw	r2,216(sp)
  804fa4:	d8c03815 	stw	r3,224(sp)
  804fa8:	d9002d15 	stw	r4,180(sp)
  804fac:	003b7506 	br	803d84 <__alt_data_end+0xff803d84>
  804fb0:	ac400007 	ldb	r17,0(r21)
  804fb4:	003a5906 	br	80391c <__alt_data_end+0xff80391c>
  804fb8:	9080100c 	andi	r2,r18,64
  804fbc:	1000a826 	beq	r2,zero,805260 <___vfprintf_internal_r+0x1ac8>
  804fc0:	d9002d17 	ldw	r4,180(sp)
  804fc4:	002d883a 	mov	r22,zero
  804fc8:	24c0000b 	ldhu	r19,0(r4)
  804fcc:	21000104 	addi	r4,r4,4
  804fd0:	d9002d15 	stw	r4,180(sp)
  804fd4:	003ccb06 	br	804304 <__alt_data_end+0xff804304>
  804fd8:	d8c02d17 	ldw	r3,180(sp)
  804fdc:	d9002917 	ldw	r4,164(sp)
  804fe0:	002d883a 	mov	r22,zero
  804fe4:	18800104 	addi	r2,r3,4
  804fe8:	1cc00017 	ldw	r19,0(r3)
  804fec:	203ebb0e 	bge	r4,zero,804adc <__alt_data_end+0xff804adc>
  804ff0:	003ef106 	br	804bb8 <__alt_data_end+0xff804bb8>
  804ff4:	9080040c 	andi	r2,r18,16
  804ff8:	1000921e 	bne	r2,zero,805244 <___vfprintf_internal_r+0x1aac>
  804ffc:	9480100c 	andi	r18,r18,64
  805000:	90013926 	beq	r18,zero,8054e8 <___vfprintf_internal_r+0x1d50>
  805004:	d9002d17 	ldw	r4,180(sp)
  805008:	d9402f17 	ldw	r5,188(sp)
  80500c:	20800017 	ldw	r2,0(r4)
  805010:	21000104 	addi	r4,r4,4
  805014:	d9002d15 	stw	r4,180(sp)
  805018:	1140000d 	sth	r5,0(r2)
  80501c:	003a1606 	br	803878 <__alt_data_end+0xff803878>
  805020:	9080100c 	andi	r2,r18,64
  805024:	10008026 	beq	r2,zero,805228 <___vfprintf_internal_r+0x1a90>
  805028:	d8c02d17 	ldw	r3,180(sp)
  80502c:	1cc0000f 	ldh	r19,0(r3)
  805030:	18c00104 	addi	r3,r3,4
  805034:	d8c02d15 	stw	r3,180(sp)
  805038:	982dd7fa 	srai	r22,r19,31
  80503c:	b005883a 	mov	r2,r22
  805040:	003b1f06 	br	803cc0 <__alt_data_end+0xff803cc0>
  805044:	9080100c 	andi	r2,r18,64
  805048:	d8002785 	stb	zero,158(sp)
  80504c:	10008a1e 	bne	r2,zero,805278 <___vfprintf_internal_r+0x1ae0>
  805050:	d9402d17 	ldw	r5,180(sp)
  805054:	d8c02917 	ldw	r3,164(sp)
  805058:	002d883a 	mov	r22,zero
  80505c:	28800104 	addi	r2,r5,4
  805060:	2cc00017 	ldw	r19,0(r5)
  805064:	183e4b0e 	bge	r3,zero,804994 <__alt_data_end+0xff804994>
  805068:	9d86b03a 	or	r3,r19,r22
  80506c:	d8802d15 	stw	r2,180(sp)
  805070:	183e4c1e 	bne	r3,zero,8049a4 <__alt_data_end+0xff8049a4>
  805074:	0039883a 	mov	fp,zero
  805078:	0005883a 	mov	r2,zero
  80507c:	003d4006 	br	804580 <__alt_data_end+0xff804580>
  805080:	01402074 	movhi	r5,129
  805084:	29444c84 	addi	r5,r5,4402
  805088:	d9402b15 	stw	r5,172(sp)
  80508c:	d9402b17 	ldw	r5,172(sp)
  805090:	1c47883a 	add	r3,r3,r17
  805094:	10800044 	addi	r2,r2,1
  805098:	41400015 	stw	r5,0(r8)
  80509c:	44400115 	stw	r17,4(r8)
  8050a0:	d8c02015 	stw	r3,128(sp)
  8050a4:	d8801f15 	stw	r2,124(sp)
  8050a8:	010001c4 	movi	r4,7
  8050ac:	20bec816 	blt	r4,r2,804bd0 <__alt_data_end+0xff804bd0>
  8050b0:	42000204 	addi	r8,r8,8
  8050b4:	003ecd06 	br	804bec <__alt_data_end+0xff804bec>
  8050b8:	d9002917 	ldw	r4,164(sp)
  8050bc:	d8002785 	stb	zero,158(sp)
  8050c0:	203d2d16 	blt	r4,zero,804578 <__alt_data_end+0xff804578>
  8050c4:	00bfdfc4 	movi	r2,-129
  8050c8:	90a4703a 	and	r18,r18,r2
  8050cc:	003a9106 	br	803b14 <__alt_data_end+0xff803b14>
  8050d0:	01002074 	movhi	r4,129
  8050d4:	21044c84 	addi	r4,r4,4402
  8050d8:	d9002b15 	stw	r4,172(sp)
  8050dc:	003c0c06 	br	804110 <__alt_data_end+0xff804110>
  8050e0:	d9002c17 	ldw	r4,176(sp)
  8050e4:	d9801e04 	addi	r6,sp,120
  8050e8:	b80b883a 	mov	r5,r23
  8050ec:	080a2b00 	call	80a2b0 <__sprint_r>
  8050f0:	103aab1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8050f4:	d8c02017 	ldw	r3,128(sp)
  8050f8:	da000404 	addi	r8,sp,16
  8050fc:	003d4106 	br	804604 <__alt_data_end+0xff804604>
  805100:	d8801f17 	ldw	r2,124(sp)
  805104:	01402074 	movhi	r5,129
  805108:	01000044 	movi	r4,1
  80510c:	18c00044 	addi	r3,r3,1
  805110:	10800044 	addi	r2,r2,1
  805114:	29444c04 	addi	r5,r5,4400
  805118:	41000115 	stw	r4,4(r8)
  80511c:	41400015 	stw	r5,0(r8)
  805120:	d8c02015 	stw	r3,128(sp)
  805124:	d8801f15 	stw	r2,124(sp)
  805128:	010001c4 	movi	r4,7
  80512c:	20805c16 	blt	r4,r2,8052a0 <___vfprintf_internal_r+0x1b08>
  805130:	42000204 	addi	r8,r8,8
  805134:	8800041e 	bne	r17,zero,805148 <___vfprintf_internal_r+0x19b0>
  805138:	d8803317 	ldw	r2,204(sp)
  80513c:	1000021e 	bne	r2,zero,805148 <___vfprintf_internal_r+0x19b0>
  805140:	9080004c 	andi	r2,r18,1
  805144:	103c0926 	beq	r2,zero,80416c <__alt_data_end+0xff80416c>
  805148:	d9003717 	ldw	r4,220(sp)
  80514c:	d8801f17 	ldw	r2,124(sp)
  805150:	d9403417 	ldw	r5,208(sp)
  805154:	20c7883a 	add	r3,r4,r3
  805158:	10800044 	addi	r2,r2,1
  80515c:	41000115 	stw	r4,4(r8)
  805160:	41400015 	stw	r5,0(r8)
  805164:	d8c02015 	stw	r3,128(sp)
  805168:	d8801f15 	stw	r2,124(sp)
  80516c:	010001c4 	movi	r4,7
  805170:	20812116 	blt	r4,r2,8055f8 <___vfprintf_internal_r+0x1e60>
  805174:	42000204 	addi	r8,r8,8
  805178:	0463c83a 	sub	r17,zero,r17
  80517c:	0440730e 	bge	zero,r17,80534c <___vfprintf_internal_r+0x1bb4>
  805180:	05800404 	movi	r22,16
  805184:	b440860e 	bge	r22,r17,8053a0 <___vfprintf_internal_r+0x1c08>
  805188:	01402074 	movhi	r5,129
  80518c:	29444c84 	addi	r5,r5,4402
  805190:	d9402b15 	stw	r5,172(sp)
  805194:	070001c4 	movi	fp,7
  805198:	dcc02c17 	ldw	r19,176(sp)
  80519c:	00000306 	br	8051ac <___vfprintf_internal_r+0x1a14>
  8051a0:	42000204 	addi	r8,r8,8
  8051a4:	8c7ffc04 	addi	r17,r17,-16
  8051a8:	b440800e 	bge	r22,r17,8053ac <___vfprintf_internal_r+0x1c14>
  8051ac:	18c00404 	addi	r3,r3,16
  8051b0:	10800044 	addi	r2,r2,1
  8051b4:	45000015 	stw	r20,0(r8)
  8051b8:	45800115 	stw	r22,4(r8)
  8051bc:	d8c02015 	stw	r3,128(sp)
  8051c0:	d8801f15 	stw	r2,124(sp)
  8051c4:	e0bff60e 	bge	fp,r2,8051a0 <__alt_data_end+0xff8051a0>
  8051c8:	d9801e04 	addi	r6,sp,120
  8051cc:	b80b883a 	mov	r5,r23
  8051d0:	9809883a 	mov	r4,r19
  8051d4:	080a2b00 	call	80a2b0 <__sprint_r>
  8051d8:	103a711e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8051dc:	d8c02017 	ldw	r3,128(sp)
  8051e0:	d8801f17 	ldw	r2,124(sp)
  8051e4:	da000404 	addi	r8,sp,16
  8051e8:	003fee06 	br	8051a4 <__alt_data_end+0xff8051a4>
  8051ec:	00bfffc4 	movi	r2,-1
  8051f0:	003a6f06 	br	803bb0 <__alt_data_end+0xff803bb0>
  8051f4:	008011c4 	movi	r2,71
  8051f8:	1440b816 	blt	r2,r17,8054dc <___vfprintf_internal_r+0x1d44>
  8051fc:	04002074 	movhi	r16,129
  805200:	84043e04 	addi	r16,r16,4344
  805204:	00c000c4 	movi	r3,3
  805208:	00bfdfc4 	movi	r2,-129
  80520c:	d8c02a15 	stw	r3,168(sp)
  805210:	90a4703a 	and	r18,r18,r2
  805214:	df002783 	ldbu	fp,158(sp)
  805218:	d8c02e15 	stw	r3,184(sp)
  80521c:	d8002915 	stw	zero,164(sp)
  805220:	d8003215 	stw	zero,200(sp)
  805224:	003b2906 	br	803ecc <__alt_data_end+0xff803ecc>
  805228:	d9002d17 	ldw	r4,180(sp)
  80522c:	24c00017 	ldw	r19,0(r4)
  805230:	21000104 	addi	r4,r4,4
  805234:	d9002d15 	stw	r4,180(sp)
  805238:	982dd7fa 	srai	r22,r19,31
  80523c:	b005883a 	mov	r2,r22
  805240:	003a9f06 	br	803cc0 <__alt_data_end+0xff803cc0>
  805244:	d9402d17 	ldw	r5,180(sp)
  805248:	d8c02f17 	ldw	r3,188(sp)
  80524c:	28800017 	ldw	r2,0(r5)
  805250:	29400104 	addi	r5,r5,4
  805254:	d9402d15 	stw	r5,180(sp)
  805258:	10c00015 	stw	r3,0(r2)
  80525c:	00398606 	br	803878 <__alt_data_end+0xff803878>
  805260:	d9402d17 	ldw	r5,180(sp)
  805264:	002d883a 	mov	r22,zero
  805268:	2cc00017 	ldw	r19,0(r5)
  80526c:	29400104 	addi	r5,r5,4
  805270:	d9402d15 	stw	r5,180(sp)
  805274:	003c2306 	br	804304 <__alt_data_end+0xff804304>
  805278:	d8c02d17 	ldw	r3,180(sp)
  80527c:	d9002917 	ldw	r4,164(sp)
  805280:	002d883a 	mov	r22,zero
  805284:	18800104 	addi	r2,r3,4
  805288:	1cc0000b 	ldhu	r19,0(r3)
  80528c:	203dc10e 	bge	r4,zero,804994 <__alt_data_end+0xff804994>
  805290:	003f7506 	br	805068 <__alt_data_end+0xff805068>
  805294:	04002074 	movhi	r16,129
  805298:	84043c04 	addi	r16,r16,4336
  80529c:	003acc06 	br	803dd0 <__alt_data_end+0xff803dd0>
  8052a0:	d9002c17 	ldw	r4,176(sp)
  8052a4:	d9801e04 	addi	r6,sp,120
  8052a8:	b80b883a 	mov	r5,r23
  8052ac:	080a2b00 	call	80a2b0 <__sprint_r>
  8052b0:	103a3b1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8052b4:	dc402617 	ldw	r17,152(sp)
  8052b8:	d8c02017 	ldw	r3,128(sp)
  8052bc:	da000404 	addi	r8,sp,16
  8052c0:	003f9c06 	br	805134 <__alt_data_end+0xff805134>
  8052c4:	ac400043 	ldbu	r17,1(r21)
  8052c8:	94800814 	ori	r18,r18,32
  8052cc:	ad400044 	addi	r21,r21,1
  8052d0:	8c403fcc 	andi	r17,r17,255
  8052d4:	8c40201c 	xori	r17,r17,128
  8052d8:	8c7fe004 	addi	r17,r17,-128
  8052dc:	00398f06 	br	80391c <__alt_data_end+0xff80391c>
  8052e0:	d8c02d15 	stw	r3,180(sp)
  8052e4:	0039883a 	mov	fp,zero
  8052e8:	003e3506 	br	804bc0 <__alt_data_end+0xff804bc0>
  8052ec:	d9002c17 	ldw	r4,176(sp)
  8052f0:	d9801e04 	addi	r6,sp,120
  8052f4:	b80b883a 	mov	r5,r23
  8052f8:	080a2b00 	call	80a2b0 <__sprint_r>
  8052fc:	103a281e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  805300:	d8c02017 	ldw	r3,128(sp)
  805304:	da000404 	addi	r8,sp,16
  805308:	003cd006 	br	80464c <__alt_data_end+0xff80464c>
  80530c:	8009883a 	mov	r4,r16
  805310:	da003d15 	stw	r8,244(sp)
  805314:	080a11c0 	call	80a11c <strlen>
  805318:	d8802e15 	stw	r2,184(sp)
  80531c:	da003d17 	ldw	r8,244(sp)
  805320:	103c340e 	bge	r2,zero,8043f4 <__alt_data_end+0xff8043f4>
  805324:	0005883a 	mov	r2,zero
  805328:	003c3206 	br	8043f4 <__alt_data_end+0xff8043f4>
  80532c:	d9002c17 	ldw	r4,176(sp)
  805330:	d9801e04 	addi	r6,sp,120
  805334:	b80b883a 	mov	r5,r23
  805338:	080a2b00 	call	80a2b0 <__sprint_r>
  80533c:	103a181e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  805340:	d8c02017 	ldw	r3,128(sp)
  805344:	d8801f17 	ldw	r2,124(sp)
  805348:	da000404 	addi	r8,sp,16
  80534c:	d9403317 	ldw	r5,204(sp)
  805350:	10800044 	addi	r2,r2,1
  805354:	44000015 	stw	r16,0(r8)
  805358:	28c7883a 	add	r3,r5,r3
  80535c:	003b7d06 	br	804154 <__alt_data_end+0xff804154>
  805360:	01002074 	movhi	r4,129
  805364:	21045084 	addi	r4,r4,4418
  805368:	d9003515 	stw	r4,212(sp)
  80536c:	003b1406 	br	803fc0 <__alt_data_end+0xff803fc0>
  805370:	013fffc4 	movi	r4,-1
  805374:	003a3506 	br	803c4c <__alt_data_end+0xff803c4c>
  805378:	0023883a 	mov	r17,zero
  80537c:	003d9d06 	br	8049f4 <__alt_data_end+0xff8049f4>
  805380:	d9002c17 	ldw	r4,176(sp)
  805384:	d9801e04 	addi	r6,sp,120
  805388:	b80b883a 	mov	r5,r23
  80538c:	080a2b00 	call	80a2b0 <__sprint_r>
  805390:	103a031e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  805394:	d8c02017 	ldw	r3,128(sp)
  805398:	da000404 	addi	r8,sp,16
  80539c:	003d9406 	br	8049f0 <__alt_data_end+0xff8049f0>
  8053a0:	01002074 	movhi	r4,129
  8053a4:	21044c84 	addi	r4,r4,4402
  8053a8:	d9002b15 	stw	r4,172(sp)
  8053ac:	d9002b17 	ldw	r4,172(sp)
  8053b0:	1c47883a 	add	r3,r3,r17
  8053b4:	10800044 	addi	r2,r2,1
  8053b8:	41000015 	stw	r4,0(r8)
  8053bc:	44400115 	stw	r17,4(r8)
  8053c0:	d8c02015 	stw	r3,128(sp)
  8053c4:	d8801f15 	stw	r2,124(sp)
  8053c8:	010001c4 	movi	r4,7
  8053cc:	20bfd716 	blt	r4,r2,80532c <__alt_data_end+0xff80532c>
  8053d0:	42000204 	addi	r8,r8,8
  8053d4:	003fdd06 	br	80534c <__alt_data_end+0xff80534c>
  8053d8:	d9002c17 	ldw	r4,176(sp)
  8053dc:	d9801e04 	addi	r6,sp,120
  8053e0:	b80b883a 	mov	r5,r23
  8053e4:	080a2b00 	call	80a2b0 <__sprint_r>
  8053e8:	1039ed1e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  8053ec:	d8802617 	ldw	r2,152(sp)
  8053f0:	d8c02017 	ldw	r3,128(sp)
  8053f4:	da000404 	addi	r8,sp,16
  8053f8:	003e1006 	br	804c3c <__alt_data_end+0xff804c3c>
  8053fc:	00800044 	movi	r2,1
  805400:	10803fcc 	andi	r2,r2,255
  805404:	00c00044 	movi	r3,1
  805408:	10fa3526 	beq	r2,r3,803ce0 <__alt_data_end+0xff803ce0>
  80540c:	00c00084 	movi	r3,2
  805410:	10fbcb26 	beq	r2,r3,804340 <__alt_data_end+0xff804340>
  805414:	003a8f06 	br	803e54 <__alt_data_end+0xff803e54>
  805418:	01002074 	movhi	r4,129
  80541c:	21045084 	addi	r4,r4,4418
  805420:	d9003515 	stw	r4,212(sp)
  805424:	003b7606 	br	804200 <__alt_data_end+0xff804200>
  805428:	d8802917 	ldw	r2,164(sp)
  80542c:	00c00184 	movi	r3,6
  805430:	1880012e 	bgeu	r3,r2,805438 <___vfprintf_internal_r+0x1ca0>
  805434:	1805883a 	mov	r2,r3
  805438:	d8802e15 	stw	r2,184(sp)
  80543c:	1000ef16 	blt	r2,zero,8057fc <___vfprintf_internal_r+0x2064>
  805440:	04002074 	movhi	r16,129
  805444:	d8802a15 	stw	r2,168(sp)
  805448:	dcc02d15 	stw	r19,180(sp)
  80544c:	d8002915 	stw	zero,164(sp)
  805450:	d8003215 	stw	zero,200(sp)
  805454:	84044a04 	addi	r16,r16,4392
  805458:	0039883a 	mov	fp,zero
  80545c:	003aa206 	br	803ee8 <__alt_data_end+0xff803ee8>
  805460:	0021883a 	mov	r16,zero
  805464:	003e0706 	br	804c84 <__alt_data_end+0xff804c84>
  805468:	d9002c17 	ldw	r4,176(sp)
  80546c:	d9801e04 	addi	r6,sp,120
  805470:	b80b883a 	mov	r5,r23
  805474:	080a2b00 	call	80a2b0 <__sprint_r>
  805478:	1039c91e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  80547c:	d8802617 	ldw	r2,152(sp)
  805480:	d9403317 	ldw	r5,204(sp)
  805484:	d8c02017 	ldw	r3,128(sp)
  805488:	da000404 	addi	r8,sp,16
  80548c:	2885c83a 	sub	r2,r5,r2
  805490:	003dfb06 	br	804c80 <__alt_data_end+0xff804c80>
  805494:	9080004c 	andi	r2,r18,1
  805498:	103e8f1e 	bne	r2,zero,804ed8 <__alt_data_end+0xff804ed8>
  80549c:	d8802117 	ldw	r2,132(sp)
  8054a0:	003e9e06 	br	804f1c <__alt_data_end+0xff804f1c>
  8054a4:	1025883a 	mov	r18,r2
  8054a8:	0039883a 	mov	fp,zero
  8054ac:	00800084 	movi	r2,2
  8054b0:	003fd306 	br	805400 <__alt_data_end+0xff805400>
  8054b4:	07000b44 	movi	fp,45
  8054b8:	df002785 	stb	fp,158(sp)
  8054bc:	003a4006 	br	803dc0 <__alt_data_end+0xff803dc0>
  8054c0:	00c00b44 	movi	r3,45
  8054c4:	d8c02785 	stb	r3,158(sp)
  8054c8:	d8802a15 	stw	r2,168(sp)
  8054cc:	dc802b17 	ldw	r18,172(sp)
  8054d0:	d8002915 	stw	zero,164(sp)
  8054d4:	07000b44 	movi	fp,45
  8054d8:	003a8006 	br	803edc <__alt_data_end+0xff803edc>
  8054dc:	04002074 	movhi	r16,129
  8054e0:	84043f04 	addi	r16,r16,4348
  8054e4:	003f4706 	br	805204 <__alt_data_end+0xff805204>
  8054e8:	d8c02d17 	ldw	r3,180(sp)
  8054ec:	d9002f17 	ldw	r4,188(sp)
  8054f0:	18800017 	ldw	r2,0(r3)
  8054f4:	18c00104 	addi	r3,r3,4
  8054f8:	d8c02d15 	stw	r3,180(sp)
  8054fc:	11000015 	stw	r4,0(r2)
  805500:	0038dd06 	br	803878 <__alt_data_end+0xff803878>
  805504:	dd802617 	ldw	r22,152(sp)
  805508:	00bfff44 	movi	r2,-3
  80550c:	b0801c16 	blt	r22,r2,805580 <___vfprintf_internal_r+0x1de8>
  805510:	d9402917 	ldw	r5,164(sp)
  805514:	2d801a16 	blt	r5,r22,805580 <___vfprintf_internal_r+0x1de8>
  805518:	dd803215 	stw	r22,200(sp)
  80551c:	003e8906 	br	804f44 <__alt_data_end+0xff804f44>
  805520:	01002074 	movhi	r4,129
  805524:	21044c84 	addi	r4,r4,4402
  805528:	d9002b15 	stw	r4,172(sp)
  80552c:	003c9106 	br	804774 <__alt_data_end+0xff804774>
  805530:	e005883a 	mov	r2,fp
  805534:	003e7906 	br	804f1c <__alt_data_end+0xff804f1c>
  805538:	d9402917 	ldw	r5,164(sp)
  80553c:	df002783 	ldbu	fp,158(sp)
  805540:	dcc02d15 	stw	r19,180(sp)
  805544:	d9402a15 	stw	r5,168(sp)
  805548:	d9402e15 	stw	r5,184(sp)
  80554c:	d8002915 	stw	zero,164(sp)
  805550:	d8003215 	stw	zero,200(sp)
  805554:	003a5d06 	br	803ecc <__alt_data_end+0xff803ecc>
  805558:	9080004c 	andi	r2,r18,1
  80555c:	0039883a 	mov	fp,zero
  805560:	10000426 	beq	r2,zero,805574 <___vfprintf_internal_r+0x1ddc>
  805564:	00800c04 	movi	r2,48
  805568:	dc001dc4 	addi	r16,sp,119
  80556c:	d8801dc5 	stb	r2,119(sp)
  805570:	003b8006 	br	804374 <__alt_data_end+0xff804374>
  805574:	d8002e15 	stw	zero,184(sp)
  805578:	dc001e04 	addi	r16,sp,120
  80557c:	003a4d06 	br	803eb4 <__alt_data_end+0xff803eb4>
  805580:	8c7fff84 	addi	r17,r17,-2
  805584:	b5bfffc4 	addi	r22,r22,-1
  805588:	dd802615 	stw	r22,152(sp)
  80558c:	dc4022c5 	stb	r17,139(sp)
  805590:	b000bf16 	blt	r22,zero,805890 <___vfprintf_internal_r+0x20f8>
  805594:	00800ac4 	movi	r2,43
  805598:	d8802305 	stb	r2,140(sp)
  80559c:	00800244 	movi	r2,9
  8055a0:	15807016 	blt	r2,r22,805764 <___vfprintf_internal_r+0x1fcc>
  8055a4:	00800c04 	movi	r2,48
  8055a8:	b5800c04 	addi	r22,r22,48
  8055ac:	d8802345 	stb	r2,141(sp)
  8055b0:	dd802385 	stb	r22,142(sp)
  8055b4:	d88023c4 	addi	r2,sp,143
  8055b8:	df0022c4 	addi	fp,sp,139
  8055bc:	d8c03317 	ldw	r3,204(sp)
  8055c0:	1739c83a 	sub	fp,r2,fp
  8055c4:	d9003317 	ldw	r4,204(sp)
  8055c8:	e0c7883a 	add	r3,fp,r3
  8055cc:	df003a15 	stw	fp,232(sp)
  8055d0:	d8c02e15 	stw	r3,184(sp)
  8055d4:	00800044 	movi	r2,1
  8055d8:	1100b30e 	bge	r2,r4,8058a8 <___vfprintf_internal_r+0x2110>
  8055dc:	d8c02e17 	ldw	r3,184(sp)
  8055e0:	18c00044 	addi	r3,r3,1
  8055e4:	d8c02e15 	stw	r3,184(sp)
  8055e8:	1805883a 	mov	r2,r3
  8055ec:	1800ac16 	blt	r3,zero,8058a0 <___vfprintf_internal_r+0x2108>
  8055f0:	d8003215 	stw	zero,200(sp)
  8055f4:	003e5d06 	br	804f6c <__alt_data_end+0xff804f6c>
  8055f8:	d9002c17 	ldw	r4,176(sp)
  8055fc:	d9801e04 	addi	r6,sp,120
  805600:	b80b883a 	mov	r5,r23
  805604:	080a2b00 	call	80a2b0 <__sprint_r>
  805608:	1039651e 	bne	r2,zero,803ba0 <__alt_data_end+0xff803ba0>
  80560c:	dc402617 	ldw	r17,152(sp)
  805610:	d8c02017 	ldw	r3,128(sp)
  805614:	d8801f17 	ldw	r2,124(sp)
  805618:	da000404 	addi	r8,sp,16
  80561c:	003ed606 	br	805178 <__alt_data_end+0xff805178>
  805620:	582b883a 	mov	r21,r11
  805624:	d8002915 	stw	zero,164(sp)
  805628:	0038bd06 	br	803920 <__alt_data_end+0xff803920>
  80562c:	d8802917 	ldw	r2,164(sp)
  805630:	103e071e 	bne	r2,zero,804e50 <__alt_data_end+0xff804e50>
  805634:	dc002915 	stw	r16,164(sp)
  805638:	003e0506 	br	804e50 <__alt_data_end+0xff804e50>
  80563c:	d9002917 	ldw	r4,164(sp)
  805640:	20c00044 	addi	r3,r4,1
  805644:	003e0f06 	br	804e84 <__alt_data_end+0xff804e84>
  805648:	01400184 	movi	r5,6
  80564c:	d9402915 	stw	r5,164(sp)
  805650:	003dff06 	br	804e50 <__alt_data_end+0xff804e50>
  805654:	d8802104 	addi	r2,sp,132
  805658:	d8800315 	stw	r2,12(sp)
  80565c:	d8802504 	addi	r2,sp,148
  805660:	d8800215 	stw	r2,8(sp)
  805664:	d8802604 	addi	r2,sp,152
  805668:	d8800115 	stw	r2,4(sp)
  80566c:	d8802917 	ldw	r2,164(sp)
  805670:	d9403617 	ldw	r5,216(sp)
  805674:	d9002c17 	ldw	r4,176(sp)
  805678:	d8800015 	stw	r2,0(sp)
  80567c:	01c000c4 	movi	r7,3
  805680:	980d883a 	mov	r6,r19
  805684:	da003d15 	stw	r8,244(sp)
  805688:	0805dbc0 	call	805dbc <_dtoa_r>
  80568c:	d8c02917 	ldw	r3,164(sp)
  805690:	da003d17 	ldw	r8,244(sp)
  805694:	1021883a 	mov	r16,r2
  805698:	10f9883a 	add	fp,r2,r3
  80569c:	81000007 	ldb	r4,0(r16)
  8056a0:	00800c04 	movi	r2,48
  8056a4:	20805e26 	beq	r4,r2,805820 <___vfprintf_internal_r+0x2088>
  8056a8:	d8c02617 	ldw	r3,152(sp)
  8056ac:	e0f9883a 	add	fp,fp,r3
  8056b0:	003e0a06 	br	804edc <__alt_data_end+0xff804edc>
  8056b4:	00c00b44 	movi	r3,45
  8056b8:	24e0003c 	xorhi	r19,r4,32768
  8056bc:	d8c02a05 	stb	r3,168(sp)
  8056c0:	003de906 	br	804e68 <__alt_data_end+0xff804e68>
  8056c4:	d8c03217 	ldw	r3,200(sp)
  8056c8:	00c07a0e 	bge	zero,r3,8058b4 <___vfprintf_internal_r+0x211c>
  8056cc:	00800044 	movi	r2,1
  8056d0:	d9003317 	ldw	r4,204(sp)
  8056d4:	1105883a 	add	r2,r2,r4
  8056d8:	d8802e15 	stw	r2,184(sp)
  8056dc:	10004e16 	blt	r2,zero,805818 <___vfprintf_internal_r+0x2080>
  8056e0:	044019c4 	movi	r17,103
  8056e4:	003e2106 	br	804f6c <__alt_data_end+0xff804f6c>
  8056e8:	d9002917 	ldw	r4,164(sp)
  8056ec:	d8802104 	addi	r2,sp,132
  8056f0:	d8800315 	stw	r2,12(sp)
  8056f4:	d9000015 	stw	r4,0(sp)
  8056f8:	d8802504 	addi	r2,sp,148
  8056fc:	d9403617 	ldw	r5,216(sp)
  805700:	d9002c17 	ldw	r4,176(sp)
  805704:	d8800215 	stw	r2,8(sp)
  805708:	d8802604 	addi	r2,sp,152
  80570c:	d8800115 	stw	r2,4(sp)
  805710:	01c000c4 	movi	r7,3
  805714:	980d883a 	mov	r6,r19
  805718:	da003d15 	stw	r8,244(sp)
  80571c:	0805dbc0 	call	805dbc <_dtoa_r>
  805720:	d8c02917 	ldw	r3,164(sp)
  805724:	da003d17 	ldw	r8,244(sp)
  805728:	1021883a 	mov	r16,r2
  80572c:	00801184 	movi	r2,70
  805730:	80f9883a 	add	fp,r16,r3
  805734:	88bfd926 	beq	r17,r2,80569c <__alt_data_end+0xff80569c>
  805738:	003de806 	br	804edc <__alt_data_end+0xff804edc>
  80573c:	d9002917 	ldw	r4,164(sp)
  805740:	00c04d0e 	bge	zero,r3,805878 <___vfprintf_internal_r+0x20e0>
  805744:	2000441e 	bne	r4,zero,805858 <___vfprintf_internal_r+0x20c0>
  805748:	9480004c 	andi	r18,r18,1
  80574c:	9000421e 	bne	r18,zero,805858 <___vfprintf_internal_r+0x20c0>
  805750:	1805883a 	mov	r2,r3
  805754:	18007016 	blt	r3,zero,805918 <___vfprintf_internal_r+0x2180>
  805758:	d8c03217 	ldw	r3,200(sp)
  80575c:	d8c02e15 	stw	r3,184(sp)
  805760:	003e0206 	br	804f6c <__alt_data_end+0xff804f6c>
  805764:	df0022c4 	addi	fp,sp,139
  805768:	dc002915 	stw	r16,164(sp)
  80576c:	4027883a 	mov	r19,r8
  805770:	e021883a 	mov	r16,fp
  805774:	b009883a 	mov	r4,r22
  805778:	01400284 	movi	r5,10
  80577c:	080d7e00 	call	80d7e0 <__modsi3>
  805780:	10800c04 	addi	r2,r2,48
  805784:	843fffc4 	addi	r16,r16,-1
  805788:	b009883a 	mov	r4,r22
  80578c:	01400284 	movi	r5,10
  805790:	80800005 	stb	r2,0(r16)
  805794:	080d75c0 	call	80d75c <__divsi3>
  805798:	102d883a 	mov	r22,r2
  80579c:	00800244 	movi	r2,9
  8057a0:	15bff416 	blt	r2,r22,805774 <__alt_data_end+0xff805774>
  8057a4:	9811883a 	mov	r8,r19
  8057a8:	b0800c04 	addi	r2,r22,48
  8057ac:	8027883a 	mov	r19,r16
  8057b0:	997fffc4 	addi	r5,r19,-1
  8057b4:	98bfffc5 	stb	r2,-1(r19)
  8057b8:	dc002917 	ldw	r16,164(sp)
  8057bc:	2f006a2e 	bgeu	r5,fp,805968 <___vfprintf_internal_r+0x21d0>
  8057c0:	d9c02384 	addi	r7,sp,142
  8057c4:	3ccfc83a 	sub	r7,r7,r19
  8057c8:	d9002344 	addi	r4,sp,141
  8057cc:	e1cf883a 	add	r7,fp,r7
  8057d0:	00000106 	br	8057d8 <___vfprintf_internal_r+0x2040>
  8057d4:	28800003 	ldbu	r2,0(r5)
  8057d8:	20800005 	stb	r2,0(r4)
  8057dc:	21000044 	addi	r4,r4,1
  8057e0:	29400044 	addi	r5,r5,1
  8057e4:	393ffb1e 	bne	r7,r4,8057d4 <__alt_data_end+0xff8057d4>
  8057e8:	d8802304 	addi	r2,sp,140
  8057ec:	14c5c83a 	sub	r2,r2,r19
  8057f0:	d8c02344 	addi	r3,sp,141
  8057f4:	1885883a 	add	r2,r3,r2
  8057f8:	003f7006 	br	8055bc <__alt_data_end+0xff8055bc>
  8057fc:	0005883a 	mov	r2,zero
  805800:	003f0f06 	br	805440 <__alt_data_end+0xff805440>
  805804:	d8c03217 	ldw	r3,200(sp)
  805808:	18c00044 	addi	r3,r3,1
  80580c:	d8c02e15 	stw	r3,184(sp)
  805810:	1805883a 	mov	r2,r3
  805814:	183fb20e 	bge	r3,zero,8056e0 <__alt_data_end+0xff8056e0>
  805818:	0005883a 	mov	r2,zero
  80581c:	003fb006 	br	8056e0 <__alt_data_end+0xff8056e0>
  805820:	d9003617 	ldw	r4,216(sp)
  805824:	000d883a 	mov	r6,zero
  805828:	000f883a 	mov	r7,zero
  80582c:	980b883a 	mov	r5,r19
  805830:	d8c03c15 	stw	r3,240(sp)
  805834:	da003d15 	stw	r8,244(sp)
  805838:	080e1f80 	call	80e1f8 <__eqdf2>
  80583c:	d8c03c17 	ldw	r3,240(sp)
  805840:	da003d17 	ldw	r8,244(sp)
  805844:	103f9826 	beq	r2,zero,8056a8 <__alt_data_end+0xff8056a8>
  805848:	00800044 	movi	r2,1
  80584c:	10c7c83a 	sub	r3,r2,r3
  805850:	d8c02615 	stw	r3,152(sp)
  805854:	003f9506 	br	8056ac <__alt_data_end+0xff8056ac>
  805858:	d9002917 	ldw	r4,164(sp)
  80585c:	d8c03217 	ldw	r3,200(sp)
  805860:	20800044 	addi	r2,r4,1
  805864:	1885883a 	add	r2,r3,r2
  805868:	d8802e15 	stw	r2,184(sp)
  80586c:	103dbf0e 	bge	r2,zero,804f6c <__alt_data_end+0xff804f6c>
  805870:	0005883a 	mov	r2,zero
  805874:	003dbd06 	br	804f6c <__alt_data_end+0xff804f6c>
  805878:	2000211e 	bne	r4,zero,805900 <___vfprintf_internal_r+0x2168>
  80587c:	9480004c 	andi	r18,r18,1
  805880:	90001f1e 	bne	r18,zero,805900 <___vfprintf_internal_r+0x2168>
  805884:	00800044 	movi	r2,1
  805888:	d8802e15 	stw	r2,184(sp)
  80588c:	003db706 	br	804f6c <__alt_data_end+0xff804f6c>
  805890:	00800b44 	movi	r2,45
  805894:	05adc83a 	sub	r22,zero,r22
  805898:	d8802305 	stb	r2,140(sp)
  80589c:	003f3f06 	br	80559c <__alt_data_end+0xff80559c>
  8058a0:	0005883a 	mov	r2,zero
  8058a4:	003f5206 	br	8055f0 <__alt_data_end+0xff8055f0>
  8058a8:	90a4703a 	and	r18,r18,r2
  8058ac:	903f4e26 	beq	r18,zero,8055e8 <__alt_data_end+0xff8055e8>
  8058b0:	003f4a06 	br	8055dc <__alt_data_end+0xff8055dc>
  8058b4:	00800084 	movi	r2,2
  8058b8:	10c5c83a 	sub	r2,r2,r3
  8058bc:	003f8406 	br	8056d0 <__alt_data_end+0xff8056d0>
  8058c0:	d8802d17 	ldw	r2,180(sp)
  8058c4:	d9002d17 	ldw	r4,180(sp)
  8058c8:	ac400043 	ldbu	r17,1(r21)
  8058cc:	10800017 	ldw	r2,0(r2)
  8058d0:	582b883a 	mov	r21,r11
  8058d4:	d8802915 	stw	r2,164(sp)
  8058d8:	20800104 	addi	r2,r4,4
  8058dc:	d9002917 	ldw	r4,164(sp)
  8058e0:	d8802d15 	stw	r2,180(sp)
  8058e4:	203e7a0e 	bge	r4,zero,8052d0 <__alt_data_end+0xff8052d0>
  8058e8:	8c403fcc 	andi	r17,r17,255
  8058ec:	00bfffc4 	movi	r2,-1
  8058f0:	8c40201c 	xori	r17,r17,128
  8058f4:	d8802915 	stw	r2,164(sp)
  8058f8:	8c7fe004 	addi	r17,r17,-128
  8058fc:	00380706 	br	80391c <__alt_data_end+0xff80391c>
  805900:	d8c02917 	ldw	r3,164(sp)
  805904:	18c00084 	addi	r3,r3,2
  805908:	d8c02e15 	stw	r3,184(sp)
  80590c:	1805883a 	mov	r2,r3
  805910:	183d960e 	bge	r3,zero,804f6c <__alt_data_end+0xff804f6c>
  805914:	003fd606 	br	805870 <__alt_data_end+0xff805870>
  805918:	0005883a 	mov	r2,zero
  80591c:	003f8e06 	br	805758 <__alt_data_end+0xff805758>
  805920:	9080004c 	andi	r2,r18,1
  805924:	103f811e 	bne	r2,zero,80572c <__alt_data_end+0xff80572c>
  805928:	d8802117 	ldw	r2,132(sp)
  80592c:	1405c83a 	sub	r2,r2,r16
  805930:	d8803315 	stw	r2,204(sp)
  805934:	b47ef326 	beq	r22,r17,805504 <__alt_data_end+0xff805504>
  805938:	dd802617 	ldw	r22,152(sp)
  80593c:	003f1106 	br	805584 <__alt_data_end+0xff805584>
  805940:	d9c02785 	stb	r7,158(sp)
  805944:	00390406 	br	803d58 <__alt_data_end+0xff803d58>
  805948:	d9c02785 	stb	r7,158(sp)
  80594c:	0038d306 	br	803c9c <__alt_data_end+0xff803c9c>
  805950:	d9c02785 	stb	r7,158(sp)
  805954:	003a6106 	br	8042dc <__alt_data_end+0xff8042dc>
  805958:	d9c02785 	stb	r7,158(sp)
  80595c:	003af806 	br	804540 <__alt_data_end+0xff804540>
  805960:	0005883a 	mov	r2,zero
  805964:	003d7e06 	br	804f60 <__alt_data_end+0xff804f60>
  805968:	d8802344 	addi	r2,sp,141
  80596c:	003f1306 	br	8055bc <__alt_data_end+0xff8055bc>
  805970:	d9c02785 	stb	r7,158(sp)
  805974:	00392306 	br	803e04 <__alt_data_end+0xff803e04>
  805978:	d9c02785 	stb	r7,158(sp)
  80597c:	003aa906 	br	804424 <__alt_data_end+0xff804424>
  805980:	d9c02785 	stb	r7,158(sp)
  805984:	003a3d06 	br	80427c <__alt_data_end+0xff80427c>
  805988:	d9c02785 	stb	r7,158(sp)
  80598c:	003aca06 	br	8044b8 <__alt_data_end+0xff8044b8>

00805990 <__vfprintf_internal>:
  805990:	00802074 	movhi	r2,129
  805994:	108b6504 	addi	r2,r2,11668
  805998:	300f883a 	mov	r7,r6
  80599c:	280d883a 	mov	r6,r5
  8059a0:	200b883a 	mov	r5,r4
  8059a4:	11000017 	ldw	r4,0(r2)
  8059a8:	08037981 	jmpi	803798 <___vfprintf_internal_r>

008059ac <__sbprintf>:
  8059ac:	2880030b 	ldhu	r2,12(r5)
  8059b0:	2ac01917 	ldw	r11,100(r5)
  8059b4:	2a80038b 	ldhu	r10,14(r5)
  8059b8:	2a400717 	ldw	r9,28(r5)
  8059bc:	2a000917 	ldw	r8,36(r5)
  8059c0:	defee204 	addi	sp,sp,-1144
  8059c4:	00c10004 	movi	r3,1024
  8059c8:	dc011a15 	stw	r16,1128(sp)
  8059cc:	10bfff4c 	andi	r2,r2,65533
  8059d0:	2821883a 	mov	r16,r5
  8059d4:	d8cb883a 	add	r5,sp,r3
  8059d8:	dc811c15 	stw	r18,1136(sp)
  8059dc:	dc411b15 	stw	r17,1132(sp)
  8059e0:	dfc11d15 	stw	ra,1140(sp)
  8059e4:	2025883a 	mov	r18,r4
  8059e8:	d881030d 	sth	r2,1036(sp)
  8059ec:	dac11915 	stw	r11,1124(sp)
  8059f0:	da81038d 	sth	r10,1038(sp)
  8059f4:	da410715 	stw	r9,1052(sp)
  8059f8:	da010915 	stw	r8,1060(sp)
  8059fc:	dec10015 	stw	sp,1024(sp)
  805a00:	dec10415 	stw	sp,1040(sp)
  805a04:	d8c10215 	stw	r3,1032(sp)
  805a08:	d8c10515 	stw	r3,1044(sp)
  805a0c:	d8010615 	stw	zero,1048(sp)
  805a10:	08037980 	call	803798 <___vfprintf_internal_r>
  805a14:	1023883a 	mov	r17,r2
  805a18:	10000416 	blt	r2,zero,805a2c <__sbprintf+0x80>
  805a1c:	d9410004 	addi	r5,sp,1024
  805a20:	9009883a 	mov	r4,r18
  805a24:	08076600 	call	807660 <_fflush_r>
  805a28:	10000d1e 	bne	r2,zero,805a60 <__sbprintf+0xb4>
  805a2c:	d881030b 	ldhu	r2,1036(sp)
  805a30:	1080100c 	andi	r2,r2,64
  805a34:	10000326 	beq	r2,zero,805a44 <__sbprintf+0x98>
  805a38:	8080030b 	ldhu	r2,12(r16)
  805a3c:	10801014 	ori	r2,r2,64
  805a40:	8080030d 	sth	r2,12(r16)
  805a44:	8805883a 	mov	r2,r17
  805a48:	dfc11d17 	ldw	ra,1140(sp)
  805a4c:	dc811c17 	ldw	r18,1136(sp)
  805a50:	dc411b17 	ldw	r17,1132(sp)
  805a54:	dc011a17 	ldw	r16,1128(sp)
  805a58:	dec11e04 	addi	sp,sp,1144
  805a5c:	f800283a 	ret
  805a60:	047fffc4 	movi	r17,-1
  805a64:	003ff106 	br	805a2c <__alt_data_end+0xff805a2c>

00805a68 <__swsetup_r>:
  805a68:	00802074 	movhi	r2,129
  805a6c:	defffd04 	addi	sp,sp,-12
  805a70:	108b6504 	addi	r2,r2,11668
  805a74:	dc400115 	stw	r17,4(sp)
  805a78:	2023883a 	mov	r17,r4
  805a7c:	11000017 	ldw	r4,0(r2)
  805a80:	dc000015 	stw	r16,0(sp)
  805a84:	dfc00215 	stw	ra,8(sp)
  805a88:	2821883a 	mov	r16,r5
  805a8c:	20000226 	beq	r4,zero,805a98 <__swsetup_r+0x30>
  805a90:	20800e17 	ldw	r2,56(r4)
  805a94:	10003126 	beq	r2,zero,805b5c <__swsetup_r+0xf4>
  805a98:	8080030b 	ldhu	r2,12(r16)
  805a9c:	10c0020c 	andi	r3,r2,8
  805aa0:	1009883a 	mov	r4,r2
  805aa4:	18000f26 	beq	r3,zero,805ae4 <__swsetup_r+0x7c>
  805aa8:	80c00417 	ldw	r3,16(r16)
  805aac:	18001526 	beq	r3,zero,805b04 <__swsetup_r+0x9c>
  805ab0:	1100004c 	andi	r4,r2,1
  805ab4:	20001c1e 	bne	r4,zero,805b28 <__swsetup_r+0xc0>
  805ab8:	1080008c 	andi	r2,r2,2
  805abc:	1000291e 	bne	r2,zero,805b64 <__swsetup_r+0xfc>
  805ac0:	80800517 	ldw	r2,20(r16)
  805ac4:	80800215 	stw	r2,8(r16)
  805ac8:	18001c26 	beq	r3,zero,805b3c <__swsetup_r+0xd4>
  805acc:	0005883a 	mov	r2,zero
  805ad0:	dfc00217 	ldw	ra,8(sp)
  805ad4:	dc400117 	ldw	r17,4(sp)
  805ad8:	dc000017 	ldw	r16,0(sp)
  805adc:	dec00304 	addi	sp,sp,12
  805ae0:	f800283a 	ret
  805ae4:	2080040c 	andi	r2,r4,16
  805ae8:	10002e26 	beq	r2,zero,805ba4 <__swsetup_r+0x13c>
  805aec:	2080010c 	andi	r2,r4,4
  805af0:	10001e1e 	bne	r2,zero,805b6c <__swsetup_r+0x104>
  805af4:	80c00417 	ldw	r3,16(r16)
  805af8:	20800214 	ori	r2,r4,8
  805afc:	8080030d 	sth	r2,12(r16)
  805b00:	183feb1e 	bne	r3,zero,805ab0 <__alt_data_end+0xff805ab0>
  805b04:	1100a00c 	andi	r4,r2,640
  805b08:	01408004 	movi	r5,512
  805b0c:	217fe826 	beq	r4,r5,805ab0 <__alt_data_end+0xff805ab0>
  805b10:	800b883a 	mov	r5,r16
  805b14:	8809883a 	mov	r4,r17
  805b18:	08081240 	call	808124 <__smakebuf_r>
  805b1c:	8080030b 	ldhu	r2,12(r16)
  805b20:	80c00417 	ldw	r3,16(r16)
  805b24:	003fe206 	br	805ab0 <__alt_data_end+0xff805ab0>
  805b28:	80800517 	ldw	r2,20(r16)
  805b2c:	80000215 	stw	zero,8(r16)
  805b30:	0085c83a 	sub	r2,zero,r2
  805b34:	80800615 	stw	r2,24(r16)
  805b38:	183fe41e 	bne	r3,zero,805acc <__alt_data_end+0xff805acc>
  805b3c:	80c0030b 	ldhu	r3,12(r16)
  805b40:	0005883a 	mov	r2,zero
  805b44:	1900200c 	andi	r4,r3,128
  805b48:	203fe126 	beq	r4,zero,805ad0 <__alt_data_end+0xff805ad0>
  805b4c:	18c01014 	ori	r3,r3,64
  805b50:	80c0030d 	sth	r3,12(r16)
  805b54:	00bfffc4 	movi	r2,-1
  805b58:	003fdd06 	br	805ad0 <__alt_data_end+0xff805ad0>
  805b5c:	0807a3c0 	call	807a3c <__sinit>
  805b60:	003fcd06 	br	805a98 <__alt_data_end+0xff805a98>
  805b64:	0005883a 	mov	r2,zero
  805b68:	003fd606 	br	805ac4 <__alt_data_end+0xff805ac4>
  805b6c:	81400c17 	ldw	r5,48(r16)
  805b70:	28000626 	beq	r5,zero,805b8c <__swsetup_r+0x124>
  805b74:	80801004 	addi	r2,r16,64
  805b78:	28800326 	beq	r5,r2,805b88 <__swsetup_r+0x120>
  805b7c:	8809883a 	mov	r4,r17
  805b80:	0807bb00 	call	807bb0 <_free_r>
  805b84:	8100030b 	ldhu	r4,12(r16)
  805b88:	80000c15 	stw	zero,48(r16)
  805b8c:	80c00417 	ldw	r3,16(r16)
  805b90:	00bff6c4 	movi	r2,-37
  805b94:	1108703a 	and	r4,r2,r4
  805b98:	80000115 	stw	zero,4(r16)
  805b9c:	80c00015 	stw	r3,0(r16)
  805ba0:	003fd506 	br	805af8 <__alt_data_end+0xff805af8>
  805ba4:	00800244 	movi	r2,9
  805ba8:	88800015 	stw	r2,0(r17)
  805bac:	20801014 	ori	r2,r4,64
  805bb0:	8080030d 	sth	r2,12(r16)
  805bb4:	00bfffc4 	movi	r2,-1
  805bb8:	003fc506 	br	805ad0 <__alt_data_end+0xff805ad0>

00805bbc <quorem>:
  805bbc:	defff704 	addi	sp,sp,-36
  805bc0:	dc800215 	stw	r18,8(sp)
  805bc4:	20800417 	ldw	r2,16(r4)
  805bc8:	2c800417 	ldw	r18,16(r5)
  805bcc:	dfc00815 	stw	ra,32(sp)
  805bd0:	ddc00715 	stw	r23,28(sp)
  805bd4:	dd800615 	stw	r22,24(sp)
  805bd8:	dd400515 	stw	r21,20(sp)
  805bdc:	dd000415 	stw	r20,16(sp)
  805be0:	dcc00315 	stw	r19,12(sp)
  805be4:	dc400115 	stw	r17,4(sp)
  805be8:	dc000015 	stw	r16,0(sp)
  805bec:	14807116 	blt	r2,r18,805db4 <quorem+0x1f8>
  805bf0:	94bfffc4 	addi	r18,r18,-1
  805bf4:	94ad883a 	add	r22,r18,r18
  805bf8:	b5ad883a 	add	r22,r22,r22
  805bfc:	2c400504 	addi	r17,r5,20
  805c00:	8da9883a 	add	r20,r17,r22
  805c04:	25400504 	addi	r21,r4,20
  805c08:	282f883a 	mov	r23,r5
  805c0c:	adad883a 	add	r22,r21,r22
  805c10:	a1400017 	ldw	r5,0(r20)
  805c14:	2021883a 	mov	r16,r4
  805c18:	b1000017 	ldw	r4,0(r22)
  805c1c:	29400044 	addi	r5,r5,1
  805c20:	080d8540 	call	80d854 <__udivsi3>
  805c24:	1027883a 	mov	r19,r2
  805c28:	10002c26 	beq	r2,zero,805cdc <quorem+0x120>
  805c2c:	a813883a 	mov	r9,r21
  805c30:	880b883a 	mov	r5,r17
  805c34:	0009883a 	mov	r4,zero
  805c38:	000d883a 	mov	r6,zero
  805c3c:	2a000017 	ldw	r8,0(r5)
  805c40:	49c00017 	ldw	r7,0(r9)
  805c44:	29400104 	addi	r5,r5,4
  805c48:	40bfffcc 	andi	r2,r8,65535
  805c4c:	14c5383a 	mul	r2,r2,r19
  805c50:	4010d43a 	srli	r8,r8,16
  805c54:	38ffffcc 	andi	r3,r7,65535
  805c58:	1105883a 	add	r2,r2,r4
  805c5c:	1008d43a 	srli	r4,r2,16
  805c60:	44d1383a 	mul	r8,r8,r19
  805c64:	198d883a 	add	r6,r3,r6
  805c68:	10ffffcc 	andi	r3,r2,65535
  805c6c:	30c7c83a 	sub	r3,r6,r3
  805c70:	380ed43a 	srli	r7,r7,16
  805c74:	4105883a 	add	r2,r8,r4
  805c78:	180dd43a 	srai	r6,r3,16
  805c7c:	113fffcc 	andi	r4,r2,65535
  805c80:	390fc83a 	sub	r7,r7,r4
  805c84:	398d883a 	add	r6,r7,r6
  805c88:	300e943a 	slli	r7,r6,16
  805c8c:	18ffffcc 	andi	r3,r3,65535
  805c90:	1008d43a 	srli	r4,r2,16
  805c94:	38ceb03a 	or	r7,r7,r3
  805c98:	49c00015 	stw	r7,0(r9)
  805c9c:	300dd43a 	srai	r6,r6,16
  805ca0:	4a400104 	addi	r9,r9,4
  805ca4:	a17fe52e 	bgeu	r20,r5,805c3c <__alt_data_end+0xff805c3c>
  805ca8:	b0800017 	ldw	r2,0(r22)
  805cac:	10000b1e 	bne	r2,zero,805cdc <quorem+0x120>
  805cb0:	b0bfff04 	addi	r2,r22,-4
  805cb4:	a880082e 	bgeu	r21,r2,805cd8 <quorem+0x11c>
  805cb8:	b0ffff17 	ldw	r3,-4(r22)
  805cbc:	18000326 	beq	r3,zero,805ccc <quorem+0x110>
  805cc0:	00000506 	br	805cd8 <quorem+0x11c>
  805cc4:	10c00017 	ldw	r3,0(r2)
  805cc8:	1800031e 	bne	r3,zero,805cd8 <quorem+0x11c>
  805ccc:	10bfff04 	addi	r2,r2,-4
  805cd0:	94bfffc4 	addi	r18,r18,-1
  805cd4:	a8bffb36 	bltu	r21,r2,805cc4 <__alt_data_end+0xff805cc4>
  805cd8:	84800415 	stw	r18,16(r16)
  805cdc:	b80b883a 	mov	r5,r23
  805ce0:	8009883a 	mov	r4,r16
  805ce4:	08097080 	call	809708 <__mcmp>
  805ce8:	10002616 	blt	r2,zero,805d84 <quorem+0x1c8>
  805cec:	9cc00044 	addi	r19,r19,1
  805cf0:	a805883a 	mov	r2,r21
  805cf4:	000b883a 	mov	r5,zero
  805cf8:	11000017 	ldw	r4,0(r2)
  805cfc:	89800017 	ldw	r6,0(r17)
  805d00:	10800104 	addi	r2,r2,4
  805d04:	20ffffcc 	andi	r3,r4,65535
  805d08:	194b883a 	add	r5,r3,r5
  805d0c:	30ffffcc 	andi	r3,r6,65535
  805d10:	28c7c83a 	sub	r3,r5,r3
  805d14:	300cd43a 	srli	r6,r6,16
  805d18:	2008d43a 	srli	r4,r4,16
  805d1c:	180bd43a 	srai	r5,r3,16
  805d20:	18ffffcc 	andi	r3,r3,65535
  805d24:	2189c83a 	sub	r4,r4,r6
  805d28:	2149883a 	add	r4,r4,r5
  805d2c:	200c943a 	slli	r6,r4,16
  805d30:	8c400104 	addi	r17,r17,4
  805d34:	200bd43a 	srai	r5,r4,16
  805d38:	30c6b03a 	or	r3,r6,r3
  805d3c:	10ffff15 	stw	r3,-4(r2)
  805d40:	a47fed2e 	bgeu	r20,r17,805cf8 <__alt_data_end+0xff805cf8>
  805d44:	9485883a 	add	r2,r18,r18
  805d48:	1085883a 	add	r2,r2,r2
  805d4c:	a887883a 	add	r3,r21,r2
  805d50:	18800017 	ldw	r2,0(r3)
  805d54:	10000b1e 	bne	r2,zero,805d84 <quorem+0x1c8>
  805d58:	18bfff04 	addi	r2,r3,-4
  805d5c:	a880082e 	bgeu	r21,r2,805d80 <quorem+0x1c4>
  805d60:	18ffff17 	ldw	r3,-4(r3)
  805d64:	18000326 	beq	r3,zero,805d74 <quorem+0x1b8>
  805d68:	00000506 	br	805d80 <quorem+0x1c4>
  805d6c:	10c00017 	ldw	r3,0(r2)
  805d70:	1800031e 	bne	r3,zero,805d80 <quorem+0x1c4>
  805d74:	10bfff04 	addi	r2,r2,-4
  805d78:	94bfffc4 	addi	r18,r18,-1
  805d7c:	a8bffb36 	bltu	r21,r2,805d6c <__alt_data_end+0xff805d6c>
  805d80:	84800415 	stw	r18,16(r16)
  805d84:	9805883a 	mov	r2,r19
  805d88:	dfc00817 	ldw	ra,32(sp)
  805d8c:	ddc00717 	ldw	r23,28(sp)
  805d90:	dd800617 	ldw	r22,24(sp)
  805d94:	dd400517 	ldw	r21,20(sp)
  805d98:	dd000417 	ldw	r20,16(sp)
  805d9c:	dcc00317 	ldw	r19,12(sp)
  805da0:	dc800217 	ldw	r18,8(sp)
  805da4:	dc400117 	ldw	r17,4(sp)
  805da8:	dc000017 	ldw	r16,0(sp)
  805dac:	dec00904 	addi	sp,sp,36
  805db0:	f800283a 	ret
  805db4:	0005883a 	mov	r2,zero
  805db8:	003ff306 	br	805d88 <__alt_data_end+0xff805d88>

00805dbc <_dtoa_r>:
  805dbc:	20801017 	ldw	r2,64(r4)
  805dc0:	deffde04 	addi	sp,sp,-136
  805dc4:	df002015 	stw	fp,128(sp)
  805dc8:	dcc01b15 	stw	r19,108(sp)
  805dcc:	dc801a15 	stw	r18,104(sp)
  805dd0:	dc401915 	stw	r17,100(sp)
  805dd4:	dc001815 	stw	r16,96(sp)
  805dd8:	dfc02115 	stw	ra,132(sp)
  805ddc:	ddc01f15 	stw	r23,124(sp)
  805de0:	dd801e15 	stw	r22,120(sp)
  805de4:	dd401d15 	stw	r21,116(sp)
  805de8:	dd001c15 	stw	r20,112(sp)
  805dec:	d9c00315 	stw	r7,12(sp)
  805df0:	2039883a 	mov	fp,r4
  805df4:	3023883a 	mov	r17,r6
  805df8:	2825883a 	mov	r18,r5
  805dfc:	dc002417 	ldw	r16,144(sp)
  805e00:	3027883a 	mov	r19,r6
  805e04:	10000826 	beq	r2,zero,805e28 <_dtoa_r+0x6c>
  805e08:	21801117 	ldw	r6,68(r4)
  805e0c:	00c00044 	movi	r3,1
  805e10:	100b883a 	mov	r5,r2
  805e14:	1986983a 	sll	r3,r3,r6
  805e18:	11800115 	stw	r6,4(r2)
  805e1c:	10c00215 	stw	r3,8(r2)
  805e20:	0808ee80 	call	808ee8 <_Bfree>
  805e24:	e0001015 	stw	zero,64(fp)
  805e28:	88002e16 	blt	r17,zero,805ee4 <_dtoa_r+0x128>
  805e2c:	80000015 	stw	zero,0(r16)
  805e30:	889ffc2c 	andhi	r2,r17,32752
  805e34:	00dffc34 	movhi	r3,32752
  805e38:	10c01c26 	beq	r2,r3,805eac <_dtoa_r+0xf0>
  805e3c:	000d883a 	mov	r6,zero
  805e40:	000f883a 	mov	r7,zero
  805e44:	9009883a 	mov	r4,r18
  805e48:	980b883a 	mov	r5,r19
  805e4c:	080e1f80 	call	80e1f8 <__eqdf2>
  805e50:	10002b1e 	bne	r2,zero,805f00 <_dtoa_r+0x144>
  805e54:	d9c02317 	ldw	r7,140(sp)
  805e58:	00800044 	movi	r2,1
  805e5c:	38800015 	stw	r2,0(r7)
  805e60:	d8802517 	ldw	r2,148(sp)
  805e64:	10019e26 	beq	r2,zero,8064e0 <_dtoa_r+0x724>
  805e68:	d8c02517 	ldw	r3,148(sp)
  805e6c:	00802074 	movhi	r2,129
  805e70:	10844c44 	addi	r2,r2,4401
  805e74:	18800015 	stw	r2,0(r3)
  805e78:	10bfffc4 	addi	r2,r2,-1
  805e7c:	dfc02117 	ldw	ra,132(sp)
  805e80:	df002017 	ldw	fp,128(sp)
  805e84:	ddc01f17 	ldw	r23,124(sp)
  805e88:	dd801e17 	ldw	r22,120(sp)
  805e8c:	dd401d17 	ldw	r21,116(sp)
  805e90:	dd001c17 	ldw	r20,112(sp)
  805e94:	dcc01b17 	ldw	r19,108(sp)
  805e98:	dc801a17 	ldw	r18,104(sp)
  805e9c:	dc401917 	ldw	r17,100(sp)
  805ea0:	dc001817 	ldw	r16,96(sp)
  805ea4:	dec02204 	addi	sp,sp,136
  805ea8:	f800283a 	ret
  805eac:	d8c02317 	ldw	r3,140(sp)
  805eb0:	0089c3c4 	movi	r2,9999
  805eb4:	18800015 	stw	r2,0(r3)
  805eb8:	90017726 	beq	r18,zero,806498 <_dtoa_r+0x6dc>
  805ebc:	00802074 	movhi	r2,129
  805ec0:	10845804 	addi	r2,r2,4448
  805ec4:	d9002517 	ldw	r4,148(sp)
  805ec8:	203fec26 	beq	r4,zero,805e7c <__alt_data_end+0xff805e7c>
  805ecc:	10c000c7 	ldb	r3,3(r2)
  805ed0:	1801781e 	bne	r3,zero,8064b4 <_dtoa_r+0x6f8>
  805ed4:	10c000c4 	addi	r3,r2,3
  805ed8:	d9802517 	ldw	r6,148(sp)
  805edc:	30c00015 	stw	r3,0(r6)
  805ee0:	003fe606 	br	805e7c <__alt_data_end+0xff805e7c>
  805ee4:	04e00034 	movhi	r19,32768
  805ee8:	9cffffc4 	addi	r19,r19,-1
  805eec:	00800044 	movi	r2,1
  805ef0:	8ce6703a 	and	r19,r17,r19
  805ef4:	80800015 	stw	r2,0(r16)
  805ef8:	9823883a 	mov	r17,r19
  805efc:	003fcc06 	br	805e30 <__alt_data_end+0xff805e30>
  805f00:	d8800204 	addi	r2,sp,8
  805f04:	d8800015 	stw	r2,0(sp)
  805f08:	d9c00104 	addi	r7,sp,4
  805f0c:	900b883a 	mov	r5,r18
  805f10:	980d883a 	mov	r6,r19
  805f14:	e009883a 	mov	r4,fp
  805f18:	8820d53a 	srli	r16,r17,20
  805f1c:	0809ad40 	call	809ad4 <__d2b>
  805f20:	d8800915 	stw	r2,36(sp)
  805f24:	8001651e 	bne	r16,zero,8064bc <_dtoa_r+0x700>
  805f28:	dd800217 	ldw	r22,8(sp)
  805f2c:	dc000117 	ldw	r16,4(sp)
  805f30:	00800804 	movi	r2,32
  805f34:	b421883a 	add	r16,r22,r16
  805f38:	80c10c84 	addi	r3,r16,1074
  805f3c:	10c2d10e 	bge	r2,r3,806a84 <_dtoa_r+0xcc8>
  805f40:	00801004 	movi	r2,64
  805f44:	81010484 	addi	r4,r16,1042
  805f48:	10c7c83a 	sub	r3,r2,r3
  805f4c:	9108d83a 	srl	r4,r18,r4
  805f50:	88e2983a 	sll	r17,r17,r3
  805f54:	2448b03a 	or	r4,r4,r17
  805f58:	080e5ac0 	call	80e5ac <__floatunsidf>
  805f5c:	017f8434 	movhi	r5,65040
  805f60:	01800044 	movi	r6,1
  805f64:	1009883a 	mov	r4,r2
  805f68:	194b883a 	add	r5,r3,r5
  805f6c:	843fffc4 	addi	r16,r16,-1
  805f70:	d9801115 	stw	r6,68(sp)
  805f74:	000d883a 	mov	r6,zero
  805f78:	01cffe34 	movhi	r7,16376
  805f7c:	0802b140 	call	802b14 <__subdf3>
  805f80:	0198dbf4 	movhi	r6,25455
  805f84:	01cff4f4 	movhi	r7,16339
  805f88:	3190d844 	addi	r6,r6,17249
  805f8c:	39e1e9c4 	addi	r7,r7,-30809
  805f90:	1009883a 	mov	r4,r2
  805f94:	180b883a 	mov	r5,r3
  805f98:	08023fc0 	call	8023fc <__muldf3>
  805f9c:	01a2d874 	movhi	r6,35681
  805fa0:	01cff1f4 	movhi	r7,16327
  805fa4:	31b22cc4 	addi	r6,r6,-14157
  805fa8:	39e28a04 	addi	r7,r7,-30168
  805fac:	180b883a 	mov	r5,r3
  805fb0:	1009883a 	mov	r4,r2
  805fb4:	0801b500 	call	801b50 <__adddf3>
  805fb8:	8009883a 	mov	r4,r16
  805fbc:	1029883a 	mov	r20,r2
  805fc0:	1823883a 	mov	r17,r3
  805fc4:	080e4d00 	call	80e4d0 <__floatsidf>
  805fc8:	019427f4 	movhi	r6,20639
  805fcc:	01cff4f4 	movhi	r7,16339
  805fd0:	319e7ec4 	addi	r6,r6,31227
  805fd4:	39d104c4 	addi	r7,r7,17427
  805fd8:	1009883a 	mov	r4,r2
  805fdc:	180b883a 	mov	r5,r3
  805fe0:	08023fc0 	call	8023fc <__muldf3>
  805fe4:	100d883a 	mov	r6,r2
  805fe8:	180f883a 	mov	r7,r3
  805fec:	a009883a 	mov	r4,r20
  805ff0:	880b883a 	mov	r5,r17
  805ff4:	0801b500 	call	801b50 <__adddf3>
  805ff8:	1009883a 	mov	r4,r2
  805ffc:	180b883a 	mov	r5,r3
  806000:	1029883a 	mov	r20,r2
  806004:	1823883a 	mov	r17,r3
  806008:	080e4500 	call	80e450 <__fixdfsi>
  80600c:	000d883a 	mov	r6,zero
  806010:	000f883a 	mov	r7,zero
  806014:	a009883a 	mov	r4,r20
  806018:	880b883a 	mov	r5,r17
  80601c:	d8800515 	stw	r2,20(sp)
  806020:	080e35c0 	call	80e35c <__ledf2>
  806024:	10028716 	blt	r2,zero,806a44 <_dtoa_r+0xc88>
  806028:	d8c00517 	ldw	r3,20(sp)
  80602c:	00800584 	movi	r2,22
  806030:	10c27536 	bltu	r2,r3,806a08 <_dtoa_r+0xc4c>
  806034:	180490fa 	slli	r2,r3,3
  806038:	00c02074 	movhi	r3,129
  80603c:	18c47404 	addi	r3,r3,4560
  806040:	1885883a 	add	r2,r3,r2
  806044:	11000017 	ldw	r4,0(r2)
  806048:	11400117 	ldw	r5,4(r2)
  80604c:	900d883a 	mov	r6,r18
  806050:	980f883a 	mov	r7,r19
  806054:	080e2800 	call	80e280 <__gedf2>
  806058:	00828d0e 	bge	zero,r2,806a90 <_dtoa_r+0xcd4>
  80605c:	d9000517 	ldw	r4,20(sp)
  806060:	d8000e15 	stw	zero,56(sp)
  806064:	213fffc4 	addi	r4,r4,-1
  806068:	d9000515 	stw	r4,20(sp)
  80606c:	b42dc83a 	sub	r22,r22,r16
  806070:	b5bfffc4 	addi	r22,r22,-1
  806074:	b0026f16 	blt	r22,zero,806a34 <_dtoa_r+0xc78>
  806078:	d8000815 	stw	zero,32(sp)
  80607c:	d9c00517 	ldw	r7,20(sp)
  806080:	38026416 	blt	r7,zero,806a14 <_dtoa_r+0xc58>
  806084:	b1ed883a 	add	r22,r22,r7
  806088:	d9c00d15 	stw	r7,52(sp)
  80608c:	d8000a15 	stw	zero,40(sp)
  806090:	d9800317 	ldw	r6,12(sp)
  806094:	00800244 	movi	r2,9
  806098:	11811436 	bltu	r2,r6,8064ec <_dtoa_r+0x730>
  80609c:	00800144 	movi	r2,5
  8060a0:	1184e10e 	bge	r2,r6,807428 <_dtoa_r+0x166c>
  8060a4:	31bfff04 	addi	r6,r6,-4
  8060a8:	d9800315 	stw	r6,12(sp)
  8060ac:	0023883a 	mov	r17,zero
  8060b0:	d9800317 	ldw	r6,12(sp)
  8060b4:	008000c4 	movi	r2,3
  8060b8:	30836726 	beq	r6,r2,806e58 <_dtoa_r+0x109c>
  8060bc:	1183410e 	bge	r2,r6,806dc4 <_dtoa_r+0x1008>
  8060c0:	d9c00317 	ldw	r7,12(sp)
  8060c4:	00800104 	movi	r2,4
  8060c8:	38827c26 	beq	r7,r2,806abc <_dtoa_r+0xd00>
  8060cc:	00800144 	movi	r2,5
  8060d0:	3884c41e 	bne	r7,r2,8073e4 <_dtoa_r+0x1628>
  8060d4:	00800044 	movi	r2,1
  8060d8:	d8800b15 	stw	r2,44(sp)
  8060dc:	d8c00517 	ldw	r3,20(sp)
  8060e0:	d9002217 	ldw	r4,136(sp)
  8060e4:	1907883a 	add	r3,r3,r4
  8060e8:	19800044 	addi	r6,r3,1
  8060ec:	d8c00c15 	stw	r3,48(sp)
  8060f0:	d9800615 	stw	r6,24(sp)
  8060f4:	0183a40e 	bge	zero,r6,806f88 <_dtoa_r+0x11cc>
  8060f8:	d9800617 	ldw	r6,24(sp)
  8060fc:	3021883a 	mov	r16,r6
  806100:	e0001115 	stw	zero,68(fp)
  806104:	008005c4 	movi	r2,23
  806108:	1184c92e 	bgeu	r2,r6,807430 <_dtoa_r+0x1674>
  80610c:	00c00044 	movi	r3,1
  806110:	00800104 	movi	r2,4
  806114:	1085883a 	add	r2,r2,r2
  806118:	11000504 	addi	r4,r2,20
  80611c:	180b883a 	mov	r5,r3
  806120:	18c00044 	addi	r3,r3,1
  806124:	313ffb2e 	bgeu	r6,r4,806114 <__alt_data_end+0xff806114>
  806128:	e1401115 	stw	r5,68(fp)
  80612c:	e009883a 	mov	r4,fp
  806130:	0808e400 	call	808e40 <_Balloc>
  806134:	d8800715 	stw	r2,28(sp)
  806138:	e0801015 	stw	r2,64(fp)
  80613c:	00800384 	movi	r2,14
  806140:	1400f736 	bltu	r2,r16,806520 <_dtoa_r+0x764>
  806144:	8800f626 	beq	r17,zero,806520 <_dtoa_r+0x764>
  806148:	d9c00517 	ldw	r7,20(sp)
  80614c:	01c39a0e 	bge	zero,r7,806fb8 <_dtoa_r+0x11fc>
  806150:	388003cc 	andi	r2,r7,15
  806154:	100490fa 	slli	r2,r2,3
  806158:	382bd13a 	srai	r21,r7,4
  80615c:	00c02074 	movhi	r3,129
  806160:	18c47404 	addi	r3,r3,4560
  806164:	1885883a 	add	r2,r3,r2
  806168:	a8c0040c 	andi	r3,r21,16
  80616c:	12400017 	ldw	r9,0(r2)
  806170:	12000117 	ldw	r8,4(r2)
  806174:	18037926 	beq	r3,zero,806f5c <_dtoa_r+0x11a0>
  806178:	00802074 	movhi	r2,129
  80617c:	10846a04 	addi	r2,r2,4520
  806180:	11800817 	ldw	r6,32(r2)
  806184:	11c00917 	ldw	r7,36(r2)
  806188:	9009883a 	mov	r4,r18
  80618c:	980b883a 	mov	r5,r19
  806190:	da001715 	stw	r8,92(sp)
  806194:	da401615 	stw	r9,88(sp)
  806198:	080d9100 	call	80d910 <__divdf3>
  80619c:	da001717 	ldw	r8,92(sp)
  8061a0:	da401617 	ldw	r9,88(sp)
  8061a4:	ad4003cc 	andi	r21,r21,15
  8061a8:	040000c4 	movi	r16,3
  8061ac:	1023883a 	mov	r17,r2
  8061b0:	1829883a 	mov	r20,r3
  8061b4:	a8001126 	beq	r21,zero,8061fc <_dtoa_r+0x440>
  8061b8:	05c02074 	movhi	r23,129
  8061bc:	bdc46a04 	addi	r23,r23,4520
  8061c0:	4805883a 	mov	r2,r9
  8061c4:	4007883a 	mov	r3,r8
  8061c8:	a980004c 	andi	r6,r21,1
  8061cc:	1009883a 	mov	r4,r2
  8061d0:	a82bd07a 	srai	r21,r21,1
  8061d4:	180b883a 	mov	r5,r3
  8061d8:	30000426 	beq	r6,zero,8061ec <_dtoa_r+0x430>
  8061dc:	b9800017 	ldw	r6,0(r23)
  8061e0:	b9c00117 	ldw	r7,4(r23)
  8061e4:	84000044 	addi	r16,r16,1
  8061e8:	08023fc0 	call	8023fc <__muldf3>
  8061ec:	bdc00204 	addi	r23,r23,8
  8061f0:	a83ff51e 	bne	r21,zero,8061c8 <__alt_data_end+0xff8061c8>
  8061f4:	1013883a 	mov	r9,r2
  8061f8:	1811883a 	mov	r8,r3
  8061fc:	480d883a 	mov	r6,r9
  806200:	400f883a 	mov	r7,r8
  806204:	8809883a 	mov	r4,r17
  806208:	a00b883a 	mov	r5,r20
  80620c:	080d9100 	call	80d910 <__divdf3>
  806210:	d8800f15 	stw	r2,60(sp)
  806214:	d8c01015 	stw	r3,64(sp)
  806218:	d8c00e17 	ldw	r3,56(sp)
  80621c:	18000626 	beq	r3,zero,806238 <_dtoa_r+0x47c>
  806220:	d9000f17 	ldw	r4,60(sp)
  806224:	d9401017 	ldw	r5,64(sp)
  806228:	000d883a 	mov	r6,zero
  80622c:	01cffc34 	movhi	r7,16368
  806230:	080e35c0 	call	80e35c <__ledf2>
  806234:	10040b16 	blt	r2,zero,807264 <_dtoa_r+0x14a8>
  806238:	8009883a 	mov	r4,r16
  80623c:	080e4d00 	call	80e4d0 <__floatsidf>
  806240:	d9800f17 	ldw	r6,60(sp)
  806244:	d9c01017 	ldw	r7,64(sp)
  806248:	1009883a 	mov	r4,r2
  80624c:	180b883a 	mov	r5,r3
  806250:	08023fc0 	call	8023fc <__muldf3>
  806254:	000d883a 	mov	r6,zero
  806258:	01d00734 	movhi	r7,16412
  80625c:	1009883a 	mov	r4,r2
  806260:	180b883a 	mov	r5,r3
  806264:	0801b500 	call	801b50 <__adddf3>
  806268:	1021883a 	mov	r16,r2
  80626c:	d8800617 	ldw	r2,24(sp)
  806270:	047f3034 	movhi	r17,64704
  806274:	1c63883a 	add	r17,r3,r17
  806278:	10031826 	beq	r2,zero,806edc <_dtoa_r+0x1120>
  80627c:	d8c00517 	ldw	r3,20(sp)
  806280:	db000617 	ldw	r12,24(sp)
  806284:	d8c01315 	stw	r3,76(sp)
  806288:	d9000b17 	ldw	r4,44(sp)
  80628c:	20038f26 	beq	r4,zero,8070cc <_dtoa_r+0x1310>
  806290:	60bfffc4 	addi	r2,r12,-1
  806294:	100490fa 	slli	r2,r2,3
  806298:	00c02074 	movhi	r3,129
  80629c:	18c47404 	addi	r3,r3,4560
  8062a0:	1885883a 	add	r2,r3,r2
  8062a4:	11800017 	ldw	r6,0(r2)
  8062a8:	11c00117 	ldw	r7,4(r2)
  8062ac:	d8800717 	ldw	r2,28(sp)
  8062b0:	0009883a 	mov	r4,zero
  8062b4:	014ff834 	movhi	r5,16352
  8062b8:	db001615 	stw	r12,88(sp)
  8062bc:	15c00044 	addi	r23,r2,1
  8062c0:	080d9100 	call	80d910 <__divdf3>
  8062c4:	800d883a 	mov	r6,r16
  8062c8:	880f883a 	mov	r7,r17
  8062cc:	1009883a 	mov	r4,r2
  8062d0:	180b883a 	mov	r5,r3
  8062d4:	0802b140 	call	802b14 <__subdf3>
  8062d8:	d9401017 	ldw	r5,64(sp)
  8062dc:	d9000f17 	ldw	r4,60(sp)
  8062e0:	102b883a 	mov	r21,r2
  8062e4:	d8c01215 	stw	r3,72(sp)
  8062e8:	080e4500 	call	80e450 <__fixdfsi>
  8062ec:	1009883a 	mov	r4,r2
  8062f0:	1029883a 	mov	r20,r2
  8062f4:	080e4d00 	call	80e4d0 <__floatsidf>
  8062f8:	d9000f17 	ldw	r4,60(sp)
  8062fc:	d9401017 	ldw	r5,64(sp)
  806300:	100d883a 	mov	r6,r2
  806304:	180f883a 	mov	r7,r3
  806308:	0802b140 	call	802b14 <__subdf3>
  80630c:	1823883a 	mov	r17,r3
  806310:	d8c00717 	ldw	r3,28(sp)
  806314:	d9401217 	ldw	r5,72(sp)
  806318:	a2000c04 	addi	r8,r20,48
  80631c:	1021883a 	mov	r16,r2
  806320:	1a000005 	stb	r8,0(r3)
  806324:	800d883a 	mov	r6,r16
  806328:	880f883a 	mov	r7,r17
  80632c:	a809883a 	mov	r4,r21
  806330:	4029883a 	mov	r20,r8
  806334:	080e2800 	call	80e280 <__gedf2>
  806338:	00841d16 	blt	zero,r2,8073b0 <_dtoa_r+0x15f4>
  80633c:	800d883a 	mov	r6,r16
  806340:	880f883a 	mov	r7,r17
  806344:	0009883a 	mov	r4,zero
  806348:	014ffc34 	movhi	r5,16368
  80634c:	0802b140 	call	802b14 <__subdf3>
  806350:	d9401217 	ldw	r5,72(sp)
  806354:	100d883a 	mov	r6,r2
  806358:	180f883a 	mov	r7,r3
  80635c:	a809883a 	mov	r4,r21
  806360:	080e2800 	call	80e280 <__gedf2>
  806364:	db001617 	ldw	r12,88(sp)
  806368:	00840e16 	blt	zero,r2,8073a4 <_dtoa_r+0x15e8>
  80636c:	00800044 	movi	r2,1
  806370:	13006b0e 	bge	r2,r12,806520 <_dtoa_r+0x764>
  806374:	d9000717 	ldw	r4,28(sp)
  806378:	dd800f15 	stw	r22,60(sp)
  80637c:	dcc01015 	stw	r19,64(sp)
  806380:	2319883a 	add	r12,r4,r12
  806384:	dcc01217 	ldw	r19,72(sp)
  806388:	602d883a 	mov	r22,r12
  80638c:	dc801215 	stw	r18,72(sp)
  806390:	b825883a 	mov	r18,r23
  806394:	00000906 	br	8063bc <_dtoa_r+0x600>
  806398:	0802b140 	call	802b14 <__subdf3>
  80639c:	a80d883a 	mov	r6,r21
  8063a0:	980f883a 	mov	r7,r19
  8063a4:	1009883a 	mov	r4,r2
  8063a8:	180b883a 	mov	r5,r3
  8063ac:	080e35c0 	call	80e35c <__ledf2>
  8063b0:	1003e816 	blt	r2,zero,807354 <_dtoa_r+0x1598>
  8063b4:	b825883a 	mov	r18,r23
  8063b8:	bd83e926 	beq	r23,r22,807360 <_dtoa_r+0x15a4>
  8063bc:	a809883a 	mov	r4,r21
  8063c0:	980b883a 	mov	r5,r19
  8063c4:	000d883a 	mov	r6,zero
  8063c8:	01d00934 	movhi	r7,16420
  8063cc:	08023fc0 	call	8023fc <__muldf3>
  8063d0:	000d883a 	mov	r6,zero
  8063d4:	01d00934 	movhi	r7,16420
  8063d8:	8009883a 	mov	r4,r16
  8063dc:	880b883a 	mov	r5,r17
  8063e0:	102b883a 	mov	r21,r2
  8063e4:	1827883a 	mov	r19,r3
  8063e8:	08023fc0 	call	8023fc <__muldf3>
  8063ec:	180b883a 	mov	r5,r3
  8063f0:	1009883a 	mov	r4,r2
  8063f4:	1821883a 	mov	r16,r3
  8063f8:	1023883a 	mov	r17,r2
  8063fc:	080e4500 	call	80e450 <__fixdfsi>
  806400:	1009883a 	mov	r4,r2
  806404:	1029883a 	mov	r20,r2
  806408:	080e4d00 	call	80e4d0 <__floatsidf>
  80640c:	8809883a 	mov	r4,r17
  806410:	800b883a 	mov	r5,r16
  806414:	100d883a 	mov	r6,r2
  806418:	180f883a 	mov	r7,r3
  80641c:	0802b140 	call	802b14 <__subdf3>
  806420:	a5000c04 	addi	r20,r20,48
  806424:	a80d883a 	mov	r6,r21
  806428:	980f883a 	mov	r7,r19
  80642c:	1009883a 	mov	r4,r2
  806430:	180b883a 	mov	r5,r3
  806434:	95000005 	stb	r20,0(r18)
  806438:	1021883a 	mov	r16,r2
  80643c:	1823883a 	mov	r17,r3
  806440:	080e35c0 	call	80e35c <__ledf2>
  806444:	bdc00044 	addi	r23,r23,1
  806448:	800d883a 	mov	r6,r16
  80644c:	880f883a 	mov	r7,r17
  806450:	0009883a 	mov	r4,zero
  806454:	014ffc34 	movhi	r5,16368
  806458:	103fcf0e 	bge	r2,zero,806398 <__alt_data_end+0xff806398>
  80645c:	d8c01317 	ldw	r3,76(sp)
  806460:	d8c00515 	stw	r3,20(sp)
  806464:	d9400917 	ldw	r5,36(sp)
  806468:	e009883a 	mov	r4,fp
  80646c:	0808ee80 	call	808ee8 <_Bfree>
  806470:	d9000517 	ldw	r4,20(sp)
  806474:	d9802317 	ldw	r6,140(sp)
  806478:	d9c02517 	ldw	r7,148(sp)
  80647c:	b8000005 	stb	zero,0(r23)
  806480:	20800044 	addi	r2,r4,1
  806484:	30800015 	stw	r2,0(r6)
  806488:	3802aa26 	beq	r7,zero,806f34 <_dtoa_r+0x1178>
  80648c:	3dc00015 	stw	r23,0(r7)
  806490:	d8800717 	ldw	r2,28(sp)
  806494:	003e7906 	br	805e7c <__alt_data_end+0xff805e7c>
  806498:	00800434 	movhi	r2,16
  80649c:	10bfffc4 	addi	r2,r2,-1
  8064a0:	88a2703a 	and	r17,r17,r2
  8064a4:	883e851e 	bne	r17,zero,805ebc <__alt_data_end+0xff805ebc>
  8064a8:	00802074 	movhi	r2,129
  8064ac:	10845504 	addi	r2,r2,4436
  8064b0:	003e8406 	br	805ec4 <__alt_data_end+0xff805ec4>
  8064b4:	10c00204 	addi	r3,r2,8
  8064b8:	003e8706 	br	805ed8 <__alt_data_end+0xff805ed8>
  8064bc:	01400434 	movhi	r5,16
  8064c0:	297fffc4 	addi	r5,r5,-1
  8064c4:	994a703a 	and	r5,r19,r5
  8064c8:	9009883a 	mov	r4,r18
  8064cc:	843f0044 	addi	r16,r16,-1023
  8064d0:	294ffc34 	orhi	r5,r5,16368
  8064d4:	dd800217 	ldw	r22,8(sp)
  8064d8:	d8001115 	stw	zero,68(sp)
  8064dc:	003ea506 	br	805f74 <__alt_data_end+0xff805f74>
  8064e0:	00802074 	movhi	r2,129
  8064e4:	10844c04 	addi	r2,r2,4400
  8064e8:	003e6406 	br	805e7c <__alt_data_end+0xff805e7c>
  8064ec:	e0001115 	stw	zero,68(fp)
  8064f0:	000b883a 	mov	r5,zero
  8064f4:	e009883a 	mov	r4,fp
  8064f8:	0808e400 	call	808e40 <_Balloc>
  8064fc:	01bfffc4 	movi	r6,-1
  806500:	01c00044 	movi	r7,1
  806504:	d8800715 	stw	r2,28(sp)
  806508:	d9800c15 	stw	r6,48(sp)
  80650c:	e0801015 	stw	r2,64(fp)
  806510:	d8000315 	stw	zero,12(sp)
  806514:	d9c00b15 	stw	r7,44(sp)
  806518:	d9800615 	stw	r6,24(sp)
  80651c:	d8002215 	stw	zero,136(sp)
  806520:	d8800117 	ldw	r2,4(sp)
  806524:	10008916 	blt	r2,zero,80674c <_dtoa_r+0x990>
  806528:	d9000517 	ldw	r4,20(sp)
  80652c:	00c00384 	movi	r3,14
  806530:	19008616 	blt	r3,r4,80674c <_dtoa_r+0x990>
  806534:	200490fa 	slli	r2,r4,3
  806538:	00c02074 	movhi	r3,129
  80653c:	d9802217 	ldw	r6,136(sp)
  806540:	18c47404 	addi	r3,r3,4560
  806544:	1885883a 	add	r2,r3,r2
  806548:	14000017 	ldw	r16,0(r2)
  80654c:	14400117 	ldw	r17,4(r2)
  806550:	30016316 	blt	r6,zero,806ae0 <_dtoa_r+0xd24>
  806554:	800d883a 	mov	r6,r16
  806558:	880f883a 	mov	r7,r17
  80655c:	9009883a 	mov	r4,r18
  806560:	980b883a 	mov	r5,r19
  806564:	080d9100 	call	80d910 <__divdf3>
  806568:	180b883a 	mov	r5,r3
  80656c:	1009883a 	mov	r4,r2
  806570:	080e4500 	call	80e450 <__fixdfsi>
  806574:	1009883a 	mov	r4,r2
  806578:	102b883a 	mov	r21,r2
  80657c:	080e4d00 	call	80e4d0 <__floatsidf>
  806580:	800d883a 	mov	r6,r16
  806584:	880f883a 	mov	r7,r17
  806588:	1009883a 	mov	r4,r2
  80658c:	180b883a 	mov	r5,r3
  806590:	08023fc0 	call	8023fc <__muldf3>
  806594:	100d883a 	mov	r6,r2
  806598:	180f883a 	mov	r7,r3
  80659c:	9009883a 	mov	r4,r18
  8065a0:	980b883a 	mov	r5,r19
  8065a4:	0802b140 	call	802b14 <__subdf3>
  8065a8:	d9c00717 	ldw	r7,28(sp)
  8065ac:	1009883a 	mov	r4,r2
  8065b0:	a8800c04 	addi	r2,r21,48
  8065b4:	38800005 	stb	r2,0(r7)
  8065b8:	3dc00044 	addi	r23,r7,1
  8065bc:	d9c00617 	ldw	r7,24(sp)
  8065c0:	01800044 	movi	r6,1
  8065c4:	180b883a 	mov	r5,r3
  8065c8:	2005883a 	mov	r2,r4
  8065cc:	39803826 	beq	r7,r6,8066b0 <_dtoa_r+0x8f4>
  8065d0:	000d883a 	mov	r6,zero
  8065d4:	01d00934 	movhi	r7,16420
  8065d8:	08023fc0 	call	8023fc <__muldf3>
  8065dc:	000d883a 	mov	r6,zero
  8065e0:	000f883a 	mov	r7,zero
  8065e4:	1009883a 	mov	r4,r2
  8065e8:	180b883a 	mov	r5,r3
  8065ec:	1025883a 	mov	r18,r2
  8065f0:	1827883a 	mov	r19,r3
  8065f4:	080e1f80 	call	80e1f8 <__eqdf2>
  8065f8:	103f9a26 	beq	r2,zero,806464 <__alt_data_end+0xff806464>
  8065fc:	d9c00617 	ldw	r7,24(sp)
  806600:	d8c00717 	ldw	r3,28(sp)
  806604:	b829883a 	mov	r20,r23
  806608:	38bfffc4 	addi	r2,r7,-1
  80660c:	18ad883a 	add	r22,r3,r2
  806610:	00000a06 	br	80663c <_dtoa_r+0x880>
  806614:	08023fc0 	call	8023fc <__muldf3>
  806618:	000d883a 	mov	r6,zero
  80661c:	000f883a 	mov	r7,zero
  806620:	1009883a 	mov	r4,r2
  806624:	180b883a 	mov	r5,r3
  806628:	1025883a 	mov	r18,r2
  80662c:	1827883a 	mov	r19,r3
  806630:	b829883a 	mov	r20,r23
  806634:	080e1f80 	call	80e1f8 <__eqdf2>
  806638:	103f8a26 	beq	r2,zero,806464 <__alt_data_end+0xff806464>
  80663c:	800d883a 	mov	r6,r16
  806640:	880f883a 	mov	r7,r17
  806644:	9009883a 	mov	r4,r18
  806648:	980b883a 	mov	r5,r19
  80664c:	080d9100 	call	80d910 <__divdf3>
  806650:	180b883a 	mov	r5,r3
  806654:	1009883a 	mov	r4,r2
  806658:	080e4500 	call	80e450 <__fixdfsi>
  80665c:	1009883a 	mov	r4,r2
  806660:	102b883a 	mov	r21,r2
  806664:	080e4d00 	call	80e4d0 <__floatsidf>
  806668:	800d883a 	mov	r6,r16
  80666c:	880f883a 	mov	r7,r17
  806670:	1009883a 	mov	r4,r2
  806674:	180b883a 	mov	r5,r3
  806678:	08023fc0 	call	8023fc <__muldf3>
  80667c:	100d883a 	mov	r6,r2
  806680:	180f883a 	mov	r7,r3
  806684:	9009883a 	mov	r4,r18
  806688:	980b883a 	mov	r5,r19
  80668c:	0802b140 	call	802b14 <__subdf3>
  806690:	aa000c04 	addi	r8,r21,48
  806694:	a2000005 	stb	r8,0(r20)
  806698:	000d883a 	mov	r6,zero
  80669c:	01d00934 	movhi	r7,16420
  8066a0:	1009883a 	mov	r4,r2
  8066a4:	180b883a 	mov	r5,r3
  8066a8:	a5c00044 	addi	r23,r20,1
  8066ac:	b53fd91e 	bne	r22,r20,806614 <__alt_data_end+0xff806614>
  8066b0:	100d883a 	mov	r6,r2
  8066b4:	180f883a 	mov	r7,r3
  8066b8:	1009883a 	mov	r4,r2
  8066bc:	180b883a 	mov	r5,r3
  8066c0:	0801b500 	call	801b50 <__adddf3>
  8066c4:	100d883a 	mov	r6,r2
  8066c8:	180f883a 	mov	r7,r3
  8066cc:	8009883a 	mov	r4,r16
  8066d0:	880b883a 	mov	r5,r17
  8066d4:	1027883a 	mov	r19,r2
  8066d8:	1825883a 	mov	r18,r3
  8066dc:	080e35c0 	call	80e35c <__ledf2>
  8066e0:	10000816 	blt	r2,zero,806704 <_dtoa_r+0x948>
  8066e4:	980d883a 	mov	r6,r19
  8066e8:	900f883a 	mov	r7,r18
  8066ec:	8009883a 	mov	r4,r16
  8066f0:	880b883a 	mov	r5,r17
  8066f4:	080e1f80 	call	80e1f8 <__eqdf2>
  8066f8:	103f5a1e 	bne	r2,zero,806464 <__alt_data_end+0xff806464>
  8066fc:	ad40004c 	andi	r21,r21,1
  806700:	a83f5826 	beq	r21,zero,806464 <__alt_data_end+0xff806464>
  806704:	bd3fffc3 	ldbu	r20,-1(r23)
  806708:	b8bfffc4 	addi	r2,r23,-1
  80670c:	1007883a 	mov	r3,r2
  806710:	01400e44 	movi	r5,57
  806714:	d9800717 	ldw	r6,28(sp)
  806718:	00000506 	br	806730 <_dtoa_r+0x974>
  80671c:	18ffffc4 	addi	r3,r3,-1
  806720:	11824726 	beq	r2,r6,807040 <_dtoa_r+0x1284>
  806724:	1d000003 	ldbu	r20,0(r3)
  806728:	102f883a 	mov	r23,r2
  80672c:	10bfffc4 	addi	r2,r2,-1
  806730:	a1003fcc 	andi	r4,r20,255
  806734:	2100201c 	xori	r4,r4,128
  806738:	213fe004 	addi	r4,r4,-128
  80673c:	217ff726 	beq	r4,r5,80671c <__alt_data_end+0xff80671c>
  806740:	a2000044 	addi	r8,r20,1
  806744:	12000005 	stb	r8,0(r2)
  806748:	003f4606 	br	806464 <__alt_data_end+0xff806464>
  80674c:	d9000b17 	ldw	r4,44(sp)
  806750:	2000c826 	beq	r4,zero,806a74 <_dtoa_r+0xcb8>
  806754:	d9800317 	ldw	r6,12(sp)
  806758:	00c00044 	movi	r3,1
  80675c:	1980f90e 	bge	r3,r6,806b44 <_dtoa_r+0xd88>
  806760:	d8800617 	ldw	r2,24(sp)
  806764:	d8c00a17 	ldw	r3,40(sp)
  806768:	157fffc4 	addi	r21,r2,-1
  80676c:	1d41f316 	blt	r3,r21,806f3c <_dtoa_r+0x1180>
  806770:	1d6bc83a 	sub	r21,r3,r21
  806774:	d9c00617 	ldw	r7,24(sp)
  806778:	3802aa16 	blt	r7,zero,807224 <_dtoa_r+0x1468>
  80677c:	dd000817 	ldw	r20,32(sp)
  806780:	d8800617 	ldw	r2,24(sp)
  806784:	d8c00817 	ldw	r3,32(sp)
  806788:	01400044 	movi	r5,1
  80678c:	e009883a 	mov	r4,fp
  806790:	1887883a 	add	r3,r3,r2
  806794:	d8c00815 	stw	r3,32(sp)
  806798:	b0ad883a 	add	r22,r22,r2
  80679c:	080924c0 	call	80924c <__i2b>
  8067a0:	1023883a 	mov	r17,r2
  8067a4:	a0000826 	beq	r20,zero,8067c8 <_dtoa_r+0xa0c>
  8067a8:	0580070e 	bge	zero,r22,8067c8 <_dtoa_r+0xa0c>
  8067ac:	a005883a 	mov	r2,r20
  8067b0:	b500b916 	blt	r22,r20,806a98 <_dtoa_r+0xcdc>
  8067b4:	d9000817 	ldw	r4,32(sp)
  8067b8:	a0a9c83a 	sub	r20,r20,r2
  8067bc:	b0adc83a 	sub	r22,r22,r2
  8067c0:	2089c83a 	sub	r4,r4,r2
  8067c4:	d9000815 	stw	r4,32(sp)
  8067c8:	d9800a17 	ldw	r6,40(sp)
  8067cc:	0181810e 	bge	zero,r6,806dd4 <_dtoa_r+0x1018>
  8067d0:	d9c00b17 	ldw	r7,44(sp)
  8067d4:	3800b326 	beq	r7,zero,806aa4 <_dtoa_r+0xce8>
  8067d8:	a800b226 	beq	r21,zero,806aa4 <_dtoa_r+0xce8>
  8067dc:	880b883a 	mov	r5,r17
  8067e0:	a80d883a 	mov	r6,r21
  8067e4:	e009883a 	mov	r4,fp
  8067e8:	08094800 	call	809480 <__pow5mult>
  8067ec:	d9800917 	ldw	r6,36(sp)
  8067f0:	100b883a 	mov	r5,r2
  8067f4:	e009883a 	mov	r4,fp
  8067f8:	1023883a 	mov	r17,r2
  8067fc:	08092880 	call	809288 <__multiply>
  806800:	1021883a 	mov	r16,r2
  806804:	d8800a17 	ldw	r2,40(sp)
  806808:	d9400917 	ldw	r5,36(sp)
  80680c:	e009883a 	mov	r4,fp
  806810:	1545c83a 	sub	r2,r2,r21
  806814:	d8800a15 	stw	r2,40(sp)
  806818:	0808ee80 	call	808ee8 <_Bfree>
  80681c:	d8c00a17 	ldw	r3,40(sp)
  806820:	18009f1e 	bne	r3,zero,806aa0 <_dtoa_r+0xce4>
  806824:	05c00044 	movi	r23,1
  806828:	e009883a 	mov	r4,fp
  80682c:	b80b883a 	mov	r5,r23
  806830:	080924c0 	call	80924c <__i2b>
  806834:	d9000d17 	ldw	r4,52(sp)
  806838:	102b883a 	mov	r21,r2
  80683c:	2000ce26 	beq	r4,zero,806b78 <_dtoa_r+0xdbc>
  806840:	200d883a 	mov	r6,r4
  806844:	100b883a 	mov	r5,r2
  806848:	e009883a 	mov	r4,fp
  80684c:	08094800 	call	809480 <__pow5mult>
  806850:	d9800317 	ldw	r6,12(sp)
  806854:	102b883a 	mov	r21,r2
  806858:	b981810e 	bge	r23,r6,806e60 <_dtoa_r+0x10a4>
  80685c:	0027883a 	mov	r19,zero
  806860:	a8800417 	ldw	r2,16(r21)
  806864:	05c00804 	movi	r23,32
  806868:	10800104 	addi	r2,r2,4
  80686c:	1085883a 	add	r2,r2,r2
  806870:	1085883a 	add	r2,r2,r2
  806874:	a885883a 	add	r2,r21,r2
  806878:	11000017 	ldw	r4,0(r2)
  80687c:	08091340 	call	809134 <__hi0bits>
  806880:	b885c83a 	sub	r2,r23,r2
  806884:	1585883a 	add	r2,r2,r22
  806888:	108007cc 	andi	r2,r2,31
  80688c:	1000b326 	beq	r2,zero,806b5c <_dtoa_r+0xda0>
  806890:	00c00804 	movi	r3,32
  806894:	1887c83a 	sub	r3,r3,r2
  806898:	01000104 	movi	r4,4
  80689c:	20c2cd0e 	bge	r4,r3,8073d4 <_dtoa_r+0x1618>
  8068a0:	00c00704 	movi	r3,28
  8068a4:	1885c83a 	sub	r2,r3,r2
  8068a8:	d8c00817 	ldw	r3,32(sp)
  8068ac:	a0a9883a 	add	r20,r20,r2
  8068b0:	b0ad883a 	add	r22,r22,r2
  8068b4:	1887883a 	add	r3,r3,r2
  8068b8:	d8c00815 	stw	r3,32(sp)
  8068bc:	d9800817 	ldw	r6,32(sp)
  8068c0:	0180040e 	bge	zero,r6,8068d4 <_dtoa_r+0xb18>
  8068c4:	800b883a 	mov	r5,r16
  8068c8:	e009883a 	mov	r4,fp
  8068cc:	08095c00 	call	8095c0 <__lshift>
  8068d0:	1021883a 	mov	r16,r2
  8068d4:	0580050e 	bge	zero,r22,8068ec <_dtoa_r+0xb30>
  8068d8:	a80b883a 	mov	r5,r21
  8068dc:	b00d883a 	mov	r6,r22
  8068e0:	e009883a 	mov	r4,fp
  8068e4:	08095c00 	call	8095c0 <__lshift>
  8068e8:	102b883a 	mov	r21,r2
  8068ec:	d9c00e17 	ldw	r7,56(sp)
  8068f0:	3801211e 	bne	r7,zero,806d78 <_dtoa_r+0xfbc>
  8068f4:	d9800617 	ldw	r6,24(sp)
  8068f8:	0181380e 	bge	zero,r6,806ddc <_dtoa_r+0x1020>
  8068fc:	d8c00b17 	ldw	r3,44(sp)
  806900:	1800ab1e 	bne	r3,zero,806bb0 <_dtoa_r+0xdf4>
  806904:	dc800717 	ldw	r18,28(sp)
  806908:	dcc00617 	ldw	r19,24(sp)
  80690c:	9029883a 	mov	r20,r18
  806910:	00000206 	br	80691c <_dtoa_r+0xb60>
  806914:	0808f100 	call	808f10 <__multadd>
  806918:	1021883a 	mov	r16,r2
  80691c:	a80b883a 	mov	r5,r21
  806920:	8009883a 	mov	r4,r16
  806924:	0805bbc0 	call	805bbc <quorem>
  806928:	10800c04 	addi	r2,r2,48
  80692c:	90800005 	stb	r2,0(r18)
  806930:	94800044 	addi	r18,r18,1
  806934:	9507c83a 	sub	r3,r18,r20
  806938:	000f883a 	mov	r7,zero
  80693c:	01800284 	movi	r6,10
  806940:	800b883a 	mov	r5,r16
  806944:	e009883a 	mov	r4,fp
  806948:	1cfff216 	blt	r3,r19,806914 <__alt_data_end+0xff806914>
  80694c:	1011883a 	mov	r8,r2
  806950:	d8800617 	ldw	r2,24(sp)
  806954:	0082370e 	bge	zero,r2,807234 <_dtoa_r+0x1478>
  806958:	d9000717 	ldw	r4,28(sp)
  80695c:	0025883a 	mov	r18,zero
  806960:	20af883a 	add	r23,r4,r2
  806964:	01800044 	movi	r6,1
  806968:	800b883a 	mov	r5,r16
  80696c:	e009883a 	mov	r4,fp
  806970:	da001715 	stw	r8,92(sp)
  806974:	08095c00 	call	8095c0 <__lshift>
  806978:	a80b883a 	mov	r5,r21
  80697c:	1009883a 	mov	r4,r2
  806980:	d8800915 	stw	r2,36(sp)
  806984:	08097080 	call	809708 <__mcmp>
  806988:	da001717 	ldw	r8,92(sp)
  80698c:	0081800e 	bge	zero,r2,806f90 <_dtoa_r+0x11d4>
  806990:	b93fffc3 	ldbu	r4,-1(r23)
  806994:	b8bfffc4 	addi	r2,r23,-1
  806998:	1007883a 	mov	r3,r2
  80699c:	01800e44 	movi	r6,57
  8069a0:	d9c00717 	ldw	r7,28(sp)
  8069a4:	00000506 	br	8069bc <_dtoa_r+0xc00>
  8069a8:	18ffffc4 	addi	r3,r3,-1
  8069ac:	11c12326 	beq	r2,r7,806e3c <_dtoa_r+0x1080>
  8069b0:	19000003 	ldbu	r4,0(r3)
  8069b4:	102f883a 	mov	r23,r2
  8069b8:	10bfffc4 	addi	r2,r2,-1
  8069bc:	21403fcc 	andi	r5,r4,255
  8069c0:	2940201c 	xori	r5,r5,128
  8069c4:	297fe004 	addi	r5,r5,-128
  8069c8:	29bff726 	beq	r5,r6,8069a8 <__alt_data_end+0xff8069a8>
  8069cc:	21000044 	addi	r4,r4,1
  8069d0:	11000005 	stb	r4,0(r2)
  8069d4:	a80b883a 	mov	r5,r21
  8069d8:	e009883a 	mov	r4,fp
  8069dc:	0808ee80 	call	808ee8 <_Bfree>
  8069e0:	883ea026 	beq	r17,zero,806464 <__alt_data_end+0xff806464>
  8069e4:	90000426 	beq	r18,zero,8069f8 <_dtoa_r+0xc3c>
  8069e8:	94400326 	beq	r18,r17,8069f8 <_dtoa_r+0xc3c>
  8069ec:	900b883a 	mov	r5,r18
  8069f0:	e009883a 	mov	r4,fp
  8069f4:	0808ee80 	call	808ee8 <_Bfree>
  8069f8:	880b883a 	mov	r5,r17
  8069fc:	e009883a 	mov	r4,fp
  806a00:	0808ee80 	call	808ee8 <_Bfree>
  806a04:	003e9706 	br	806464 <__alt_data_end+0xff806464>
  806a08:	01800044 	movi	r6,1
  806a0c:	d9800e15 	stw	r6,56(sp)
  806a10:	003d9606 	br	80606c <__alt_data_end+0xff80606c>
  806a14:	d8800817 	ldw	r2,32(sp)
  806a18:	d8c00517 	ldw	r3,20(sp)
  806a1c:	d8000d15 	stw	zero,52(sp)
  806a20:	10c5c83a 	sub	r2,r2,r3
  806a24:	00c9c83a 	sub	r4,zero,r3
  806a28:	d8800815 	stw	r2,32(sp)
  806a2c:	d9000a15 	stw	r4,40(sp)
  806a30:	003d9706 	br	806090 <__alt_data_end+0xff806090>
  806a34:	05adc83a 	sub	r22,zero,r22
  806a38:	dd800815 	stw	r22,32(sp)
  806a3c:	002d883a 	mov	r22,zero
  806a40:	003d8e06 	br	80607c <__alt_data_end+0xff80607c>
  806a44:	d9000517 	ldw	r4,20(sp)
  806a48:	080e4d00 	call	80e4d0 <__floatsidf>
  806a4c:	100d883a 	mov	r6,r2
  806a50:	180f883a 	mov	r7,r3
  806a54:	a009883a 	mov	r4,r20
  806a58:	880b883a 	mov	r5,r17
  806a5c:	080e1f80 	call	80e1f8 <__eqdf2>
  806a60:	103d7126 	beq	r2,zero,806028 <__alt_data_end+0xff806028>
  806a64:	d9c00517 	ldw	r7,20(sp)
  806a68:	39ffffc4 	addi	r7,r7,-1
  806a6c:	d9c00515 	stw	r7,20(sp)
  806a70:	003d6d06 	br	806028 <__alt_data_end+0xff806028>
  806a74:	dd400a17 	ldw	r21,40(sp)
  806a78:	dd000817 	ldw	r20,32(sp)
  806a7c:	0023883a 	mov	r17,zero
  806a80:	003f4806 	br	8067a4 <__alt_data_end+0xff8067a4>
  806a84:	10e3c83a 	sub	r17,r2,r3
  806a88:	9448983a 	sll	r4,r18,r17
  806a8c:	003d3206 	br	805f58 <__alt_data_end+0xff805f58>
  806a90:	d8000e15 	stw	zero,56(sp)
  806a94:	003d7506 	br	80606c <__alt_data_end+0xff80606c>
  806a98:	b005883a 	mov	r2,r22
  806a9c:	003f4506 	br	8067b4 <__alt_data_end+0xff8067b4>
  806aa0:	dc000915 	stw	r16,36(sp)
  806aa4:	d9800a17 	ldw	r6,40(sp)
  806aa8:	d9400917 	ldw	r5,36(sp)
  806aac:	e009883a 	mov	r4,fp
  806ab0:	08094800 	call	809480 <__pow5mult>
  806ab4:	1021883a 	mov	r16,r2
  806ab8:	003f5a06 	br	806824 <__alt_data_end+0xff806824>
  806abc:	01c00044 	movi	r7,1
  806ac0:	d9c00b15 	stw	r7,44(sp)
  806ac4:	d8802217 	ldw	r2,136(sp)
  806ac8:	0081280e 	bge	zero,r2,806f6c <_dtoa_r+0x11b0>
  806acc:	100d883a 	mov	r6,r2
  806ad0:	1021883a 	mov	r16,r2
  806ad4:	d8800c15 	stw	r2,48(sp)
  806ad8:	d8800615 	stw	r2,24(sp)
  806adc:	003d8806 	br	806100 <__alt_data_end+0xff806100>
  806ae0:	d8800617 	ldw	r2,24(sp)
  806ae4:	00be9b16 	blt	zero,r2,806554 <__alt_data_end+0xff806554>
  806ae8:	10010f1e 	bne	r2,zero,806f28 <_dtoa_r+0x116c>
  806aec:	880b883a 	mov	r5,r17
  806af0:	000d883a 	mov	r6,zero
  806af4:	01d00534 	movhi	r7,16404
  806af8:	8009883a 	mov	r4,r16
  806afc:	08023fc0 	call	8023fc <__muldf3>
  806b00:	900d883a 	mov	r6,r18
  806b04:	980f883a 	mov	r7,r19
  806b08:	1009883a 	mov	r4,r2
  806b0c:	180b883a 	mov	r5,r3
  806b10:	080e2800 	call	80e280 <__gedf2>
  806b14:	002b883a 	mov	r21,zero
  806b18:	0023883a 	mov	r17,zero
  806b1c:	1000bf16 	blt	r2,zero,806e1c <_dtoa_r+0x1060>
  806b20:	d9802217 	ldw	r6,136(sp)
  806b24:	ddc00717 	ldw	r23,28(sp)
  806b28:	018c303a 	nor	r6,zero,r6
  806b2c:	d9800515 	stw	r6,20(sp)
  806b30:	a80b883a 	mov	r5,r21
  806b34:	e009883a 	mov	r4,fp
  806b38:	0808ee80 	call	808ee8 <_Bfree>
  806b3c:	883e4926 	beq	r17,zero,806464 <__alt_data_end+0xff806464>
  806b40:	003fad06 	br	8069f8 <__alt_data_end+0xff8069f8>
  806b44:	d9c01117 	ldw	r7,68(sp)
  806b48:	3801bc26 	beq	r7,zero,80723c <_dtoa_r+0x1480>
  806b4c:	10810cc4 	addi	r2,r2,1075
  806b50:	dd400a17 	ldw	r21,40(sp)
  806b54:	dd000817 	ldw	r20,32(sp)
  806b58:	003f0a06 	br	806784 <__alt_data_end+0xff806784>
  806b5c:	00800704 	movi	r2,28
  806b60:	d9000817 	ldw	r4,32(sp)
  806b64:	a0a9883a 	add	r20,r20,r2
  806b68:	b0ad883a 	add	r22,r22,r2
  806b6c:	2089883a 	add	r4,r4,r2
  806b70:	d9000815 	stw	r4,32(sp)
  806b74:	003f5106 	br	8068bc <__alt_data_end+0xff8068bc>
  806b78:	d8c00317 	ldw	r3,12(sp)
  806b7c:	b8c1fc0e 	bge	r23,r3,807370 <_dtoa_r+0x15b4>
  806b80:	0027883a 	mov	r19,zero
  806b84:	b805883a 	mov	r2,r23
  806b88:	003f3e06 	br	806884 <__alt_data_end+0xff806884>
  806b8c:	880b883a 	mov	r5,r17
  806b90:	e009883a 	mov	r4,fp
  806b94:	000f883a 	mov	r7,zero
  806b98:	01800284 	movi	r6,10
  806b9c:	0808f100 	call	808f10 <__multadd>
  806ba0:	d9000c17 	ldw	r4,48(sp)
  806ba4:	1023883a 	mov	r17,r2
  806ba8:	0102040e 	bge	zero,r4,8073bc <_dtoa_r+0x1600>
  806bac:	d9000615 	stw	r4,24(sp)
  806bb0:	0500050e 	bge	zero,r20,806bc8 <_dtoa_r+0xe0c>
  806bb4:	880b883a 	mov	r5,r17
  806bb8:	a00d883a 	mov	r6,r20
  806bbc:	e009883a 	mov	r4,fp
  806bc0:	08095c00 	call	8095c0 <__lshift>
  806bc4:	1023883a 	mov	r17,r2
  806bc8:	9801241e 	bne	r19,zero,80705c <_dtoa_r+0x12a0>
  806bcc:	8829883a 	mov	r20,r17
  806bd0:	d9000617 	ldw	r4,24(sp)
  806bd4:	dcc00717 	ldw	r19,28(sp)
  806bd8:	9480004c 	andi	r18,r18,1
  806bdc:	20bfffc4 	addi	r2,r4,-1
  806be0:	9885883a 	add	r2,r19,r2
  806be4:	d8800415 	stw	r2,16(sp)
  806be8:	dc800615 	stw	r18,24(sp)
  806bec:	a80b883a 	mov	r5,r21
  806bf0:	8009883a 	mov	r4,r16
  806bf4:	0805bbc0 	call	805bbc <quorem>
  806bf8:	880b883a 	mov	r5,r17
  806bfc:	8009883a 	mov	r4,r16
  806c00:	102f883a 	mov	r23,r2
  806c04:	08097080 	call	809708 <__mcmp>
  806c08:	a80b883a 	mov	r5,r21
  806c0c:	a00d883a 	mov	r6,r20
  806c10:	e009883a 	mov	r4,fp
  806c14:	102d883a 	mov	r22,r2
  806c18:	08097680 	call	809768 <__mdiff>
  806c1c:	1007883a 	mov	r3,r2
  806c20:	10800317 	ldw	r2,12(r2)
  806c24:	bc800c04 	addi	r18,r23,48
  806c28:	180b883a 	mov	r5,r3
  806c2c:	10004e1e 	bne	r2,zero,806d68 <_dtoa_r+0xfac>
  806c30:	8009883a 	mov	r4,r16
  806c34:	d8c01615 	stw	r3,88(sp)
  806c38:	08097080 	call	809708 <__mcmp>
  806c3c:	d8c01617 	ldw	r3,88(sp)
  806c40:	e009883a 	mov	r4,fp
  806c44:	d8801615 	stw	r2,88(sp)
  806c48:	180b883a 	mov	r5,r3
  806c4c:	0808ee80 	call	808ee8 <_Bfree>
  806c50:	d8801617 	ldw	r2,88(sp)
  806c54:	1000041e 	bne	r2,zero,806c68 <_dtoa_r+0xeac>
  806c58:	d9800317 	ldw	r6,12(sp)
  806c5c:	3000021e 	bne	r6,zero,806c68 <_dtoa_r+0xeac>
  806c60:	d8c00617 	ldw	r3,24(sp)
  806c64:	18003726 	beq	r3,zero,806d44 <_dtoa_r+0xf88>
  806c68:	b0002016 	blt	r22,zero,806cec <_dtoa_r+0xf30>
  806c6c:	b000041e 	bne	r22,zero,806c80 <_dtoa_r+0xec4>
  806c70:	d9000317 	ldw	r4,12(sp)
  806c74:	2000021e 	bne	r4,zero,806c80 <_dtoa_r+0xec4>
  806c78:	d8c00617 	ldw	r3,24(sp)
  806c7c:	18001b26 	beq	r3,zero,806cec <_dtoa_r+0xf30>
  806c80:	00810716 	blt	zero,r2,8070a0 <_dtoa_r+0x12e4>
  806c84:	d8c00417 	ldw	r3,16(sp)
  806c88:	9d800044 	addi	r22,r19,1
  806c8c:	9c800005 	stb	r18,0(r19)
  806c90:	b02f883a 	mov	r23,r22
  806c94:	98c10626 	beq	r19,r3,8070b0 <_dtoa_r+0x12f4>
  806c98:	800b883a 	mov	r5,r16
  806c9c:	000f883a 	mov	r7,zero
  806ca0:	01800284 	movi	r6,10
  806ca4:	e009883a 	mov	r4,fp
  806ca8:	0808f100 	call	808f10 <__multadd>
  806cac:	1021883a 	mov	r16,r2
  806cb0:	000f883a 	mov	r7,zero
  806cb4:	01800284 	movi	r6,10
  806cb8:	880b883a 	mov	r5,r17
  806cbc:	e009883a 	mov	r4,fp
  806cc0:	8d002526 	beq	r17,r20,806d58 <_dtoa_r+0xf9c>
  806cc4:	0808f100 	call	808f10 <__multadd>
  806cc8:	a00b883a 	mov	r5,r20
  806ccc:	000f883a 	mov	r7,zero
  806cd0:	01800284 	movi	r6,10
  806cd4:	e009883a 	mov	r4,fp
  806cd8:	1023883a 	mov	r17,r2
  806cdc:	0808f100 	call	808f10 <__multadd>
  806ce0:	1029883a 	mov	r20,r2
  806ce4:	b027883a 	mov	r19,r22
  806ce8:	003fc006 	br	806bec <__alt_data_end+0xff806bec>
  806cec:	9011883a 	mov	r8,r18
  806cf0:	00800e0e 	bge	zero,r2,806d2c <_dtoa_r+0xf70>
  806cf4:	800b883a 	mov	r5,r16
  806cf8:	01800044 	movi	r6,1
  806cfc:	e009883a 	mov	r4,fp
  806d00:	da001715 	stw	r8,92(sp)
  806d04:	08095c00 	call	8095c0 <__lshift>
  806d08:	a80b883a 	mov	r5,r21
  806d0c:	1009883a 	mov	r4,r2
  806d10:	1021883a 	mov	r16,r2
  806d14:	08097080 	call	809708 <__mcmp>
  806d18:	da001717 	ldw	r8,92(sp)
  806d1c:	0081960e 	bge	zero,r2,807378 <_dtoa_r+0x15bc>
  806d20:	00800e44 	movi	r2,57
  806d24:	40817026 	beq	r8,r2,8072e8 <_dtoa_r+0x152c>
  806d28:	ba000c44 	addi	r8,r23,49
  806d2c:	8825883a 	mov	r18,r17
  806d30:	9dc00044 	addi	r23,r19,1
  806d34:	9a000005 	stb	r8,0(r19)
  806d38:	a023883a 	mov	r17,r20
  806d3c:	dc000915 	stw	r16,36(sp)
  806d40:	003f2406 	br	8069d4 <__alt_data_end+0xff8069d4>
  806d44:	00800e44 	movi	r2,57
  806d48:	9011883a 	mov	r8,r18
  806d4c:	90816626 	beq	r18,r2,8072e8 <_dtoa_r+0x152c>
  806d50:	05bff516 	blt	zero,r22,806d28 <__alt_data_end+0xff806d28>
  806d54:	003ff506 	br	806d2c <__alt_data_end+0xff806d2c>
  806d58:	0808f100 	call	808f10 <__multadd>
  806d5c:	1023883a 	mov	r17,r2
  806d60:	1029883a 	mov	r20,r2
  806d64:	003fdf06 	br	806ce4 <__alt_data_end+0xff806ce4>
  806d68:	e009883a 	mov	r4,fp
  806d6c:	0808ee80 	call	808ee8 <_Bfree>
  806d70:	00800044 	movi	r2,1
  806d74:	003fbc06 	br	806c68 <__alt_data_end+0xff806c68>
  806d78:	a80b883a 	mov	r5,r21
  806d7c:	8009883a 	mov	r4,r16
  806d80:	08097080 	call	809708 <__mcmp>
  806d84:	103edb0e 	bge	r2,zero,8068f4 <__alt_data_end+0xff8068f4>
  806d88:	800b883a 	mov	r5,r16
  806d8c:	000f883a 	mov	r7,zero
  806d90:	01800284 	movi	r6,10
  806d94:	e009883a 	mov	r4,fp
  806d98:	0808f100 	call	808f10 <__multadd>
  806d9c:	1021883a 	mov	r16,r2
  806da0:	d8800517 	ldw	r2,20(sp)
  806da4:	d8c00b17 	ldw	r3,44(sp)
  806da8:	10bfffc4 	addi	r2,r2,-1
  806dac:	d8800515 	stw	r2,20(sp)
  806db0:	183f761e 	bne	r3,zero,806b8c <__alt_data_end+0xff806b8c>
  806db4:	d9000c17 	ldw	r4,48(sp)
  806db8:	0101730e 	bge	zero,r4,807388 <_dtoa_r+0x15cc>
  806dbc:	d9000615 	stw	r4,24(sp)
  806dc0:	003ed006 	br	806904 <__alt_data_end+0xff806904>
  806dc4:	00800084 	movi	r2,2
  806dc8:	3081861e 	bne	r6,r2,8073e4 <_dtoa_r+0x1628>
  806dcc:	d8000b15 	stw	zero,44(sp)
  806dd0:	003f3c06 	br	806ac4 <__alt_data_end+0xff806ac4>
  806dd4:	dc000917 	ldw	r16,36(sp)
  806dd8:	003e9206 	br	806824 <__alt_data_end+0xff806824>
  806ddc:	d9c00317 	ldw	r7,12(sp)
  806de0:	00800084 	movi	r2,2
  806de4:	11fec50e 	bge	r2,r7,8068fc <__alt_data_end+0xff8068fc>
  806de8:	d9000617 	ldw	r4,24(sp)
  806dec:	20013c1e 	bne	r4,zero,8072e0 <_dtoa_r+0x1524>
  806df0:	a80b883a 	mov	r5,r21
  806df4:	000f883a 	mov	r7,zero
  806df8:	01800144 	movi	r6,5
  806dfc:	e009883a 	mov	r4,fp
  806e00:	0808f100 	call	808f10 <__multadd>
  806e04:	100b883a 	mov	r5,r2
  806e08:	8009883a 	mov	r4,r16
  806e0c:	102b883a 	mov	r21,r2
  806e10:	08097080 	call	809708 <__mcmp>
  806e14:	dc000915 	stw	r16,36(sp)
  806e18:	00bf410e 	bge	zero,r2,806b20 <__alt_data_end+0xff806b20>
  806e1c:	d9c00717 	ldw	r7,28(sp)
  806e20:	00800c44 	movi	r2,49
  806e24:	38800005 	stb	r2,0(r7)
  806e28:	d8800517 	ldw	r2,20(sp)
  806e2c:	3dc00044 	addi	r23,r7,1
  806e30:	10800044 	addi	r2,r2,1
  806e34:	d8800515 	stw	r2,20(sp)
  806e38:	003f3d06 	br	806b30 <__alt_data_end+0xff806b30>
  806e3c:	d9800517 	ldw	r6,20(sp)
  806e40:	d9c00717 	ldw	r7,28(sp)
  806e44:	00800c44 	movi	r2,49
  806e48:	31800044 	addi	r6,r6,1
  806e4c:	d9800515 	stw	r6,20(sp)
  806e50:	38800005 	stb	r2,0(r7)
  806e54:	003edf06 	br	8069d4 <__alt_data_end+0xff8069d4>
  806e58:	d8000b15 	stw	zero,44(sp)
  806e5c:	003c9f06 	br	8060dc <__alt_data_end+0xff8060dc>
  806e60:	903e7e1e 	bne	r18,zero,80685c <__alt_data_end+0xff80685c>
  806e64:	00800434 	movhi	r2,16
  806e68:	10bfffc4 	addi	r2,r2,-1
  806e6c:	9884703a 	and	r2,r19,r2
  806e70:	1000ea1e 	bne	r2,zero,80721c <_dtoa_r+0x1460>
  806e74:	9cdffc2c 	andhi	r19,r19,32752
  806e78:	9800e826 	beq	r19,zero,80721c <_dtoa_r+0x1460>
  806e7c:	d9c00817 	ldw	r7,32(sp)
  806e80:	b5800044 	addi	r22,r22,1
  806e84:	04c00044 	movi	r19,1
  806e88:	39c00044 	addi	r7,r7,1
  806e8c:	d9c00815 	stw	r7,32(sp)
  806e90:	d8800d17 	ldw	r2,52(sp)
  806e94:	103e721e 	bne	r2,zero,806860 <__alt_data_end+0xff806860>
  806e98:	00800044 	movi	r2,1
  806e9c:	003e7906 	br	806884 <__alt_data_end+0xff806884>
  806ea0:	8009883a 	mov	r4,r16
  806ea4:	080e4d00 	call	80e4d0 <__floatsidf>
  806ea8:	d9800f17 	ldw	r6,60(sp)
  806eac:	d9c01017 	ldw	r7,64(sp)
  806eb0:	1009883a 	mov	r4,r2
  806eb4:	180b883a 	mov	r5,r3
  806eb8:	08023fc0 	call	8023fc <__muldf3>
  806ebc:	000d883a 	mov	r6,zero
  806ec0:	01d00734 	movhi	r7,16412
  806ec4:	1009883a 	mov	r4,r2
  806ec8:	180b883a 	mov	r5,r3
  806ecc:	0801b500 	call	801b50 <__adddf3>
  806ed0:	047f3034 	movhi	r17,64704
  806ed4:	1021883a 	mov	r16,r2
  806ed8:	1c63883a 	add	r17,r3,r17
  806edc:	d9000f17 	ldw	r4,60(sp)
  806ee0:	d9401017 	ldw	r5,64(sp)
  806ee4:	000d883a 	mov	r6,zero
  806ee8:	01d00534 	movhi	r7,16404
  806eec:	0802b140 	call	802b14 <__subdf3>
  806ef0:	800d883a 	mov	r6,r16
  806ef4:	880f883a 	mov	r7,r17
  806ef8:	1009883a 	mov	r4,r2
  806efc:	180b883a 	mov	r5,r3
  806f00:	102b883a 	mov	r21,r2
  806f04:	1829883a 	mov	r20,r3
  806f08:	080e2800 	call	80e280 <__gedf2>
  806f0c:	00806c16 	blt	zero,r2,8070c0 <_dtoa_r+0x1304>
  806f10:	89e0003c 	xorhi	r7,r17,32768
  806f14:	800d883a 	mov	r6,r16
  806f18:	a809883a 	mov	r4,r21
  806f1c:	a00b883a 	mov	r5,r20
  806f20:	080e35c0 	call	80e35c <__ledf2>
  806f24:	103d7e0e 	bge	r2,zero,806520 <__alt_data_end+0xff806520>
  806f28:	002b883a 	mov	r21,zero
  806f2c:	0023883a 	mov	r17,zero
  806f30:	003efb06 	br	806b20 <__alt_data_end+0xff806b20>
  806f34:	d8800717 	ldw	r2,28(sp)
  806f38:	003bd006 	br	805e7c <__alt_data_end+0xff805e7c>
  806f3c:	d9000a17 	ldw	r4,40(sp)
  806f40:	d9800d17 	ldw	r6,52(sp)
  806f44:	dd400a15 	stw	r21,40(sp)
  806f48:	a905c83a 	sub	r2,r21,r4
  806f4c:	308d883a 	add	r6,r6,r2
  806f50:	d9800d15 	stw	r6,52(sp)
  806f54:	002b883a 	mov	r21,zero
  806f58:	003e0606 	br	806774 <__alt_data_end+0xff806774>
  806f5c:	9023883a 	mov	r17,r18
  806f60:	9829883a 	mov	r20,r19
  806f64:	04000084 	movi	r16,2
  806f68:	003c9206 	br	8061b4 <__alt_data_end+0xff8061b4>
  806f6c:	04000044 	movi	r16,1
  806f70:	dc000c15 	stw	r16,48(sp)
  806f74:	dc000615 	stw	r16,24(sp)
  806f78:	dc002215 	stw	r16,136(sp)
  806f7c:	e0001115 	stw	zero,68(fp)
  806f80:	000b883a 	mov	r5,zero
  806f84:	003c6906 	br	80612c <__alt_data_end+0xff80612c>
  806f88:	3021883a 	mov	r16,r6
  806f8c:	003ffb06 	br	806f7c <__alt_data_end+0xff806f7c>
  806f90:	1000021e 	bne	r2,zero,806f9c <_dtoa_r+0x11e0>
  806f94:	4200004c 	andi	r8,r8,1
  806f98:	403e7d1e 	bne	r8,zero,806990 <__alt_data_end+0xff806990>
  806f9c:	01000c04 	movi	r4,48
  806fa0:	00000106 	br	806fa8 <_dtoa_r+0x11ec>
  806fa4:	102f883a 	mov	r23,r2
  806fa8:	b8bfffc4 	addi	r2,r23,-1
  806fac:	10c00007 	ldb	r3,0(r2)
  806fb0:	193ffc26 	beq	r3,r4,806fa4 <__alt_data_end+0xff806fa4>
  806fb4:	003e8706 	br	8069d4 <__alt_data_end+0xff8069d4>
  806fb8:	d8800517 	ldw	r2,20(sp)
  806fbc:	00a3c83a 	sub	r17,zero,r2
  806fc0:	8800a426 	beq	r17,zero,807254 <_dtoa_r+0x1498>
  806fc4:	888003cc 	andi	r2,r17,15
  806fc8:	100490fa 	slli	r2,r2,3
  806fcc:	00c02074 	movhi	r3,129
  806fd0:	18c47404 	addi	r3,r3,4560
  806fd4:	1885883a 	add	r2,r3,r2
  806fd8:	11800017 	ldw	r6,0(r2)
  806fdc:	11c00117 	ldw	r7,4(r2)
  806fe0:	9009883a 	mov	r4,r18
  806fe4:	980b883a 	mov	r5,r19
  806fe8:	8823d13a 	srai	r17,r17,4
  806fec:	08023fc0 	call	8023fc <__muldf3>
  806ff0:	d8800f15 	stw	r2,60(sp)
  806ff4:	d8c01015 	stw	r3,64(sp)
  806ff8:	8800e826 	beq	r17,zero,80739c <_dtoa_r+0x15e0>
  806ffc:	05002074 	movhi	r20,129
  807000:	a5046a04 	addi	r20,r20,4520
  807004:	04000084 	movi	r16,2
  807008:	8980004c 	andi	r6,r17,1
  80700c:	1009883a 	mov	r4,r2
  807010:	8823d07a 	srai	r17,r17,1
  807014:	180b883a 	mov	r5,r3
  807018:	30000426 	beq	r6,zero,80702c <_dtoa_r+0x1270>
  80701c:	a1800017 	ldw	r6,0(r20)
  807020:	a1c00117 	ldw	r7,4(r20)
  807024:	84000044 	addi	r16,r16,1
  807028:	08023fc0 	call	8023fc <__muldf3>
  80702c:	a5000204 	addi	r20,r20,8
  807030:	883ff51e 	bne	r17,zero,807008 <__alt_data_end+0xff807008>
  807034:	d8800f15 	stw	r2,60(sp)
  807038:	d8c01015 	stw	r3,64(sp)
  80703c:	003c7606 	br	806218 <__alt_data_end+0xff806218>
  807040:	00c00c04 	movi	r3,48
  807044:	10c00005 	stb	r3,0(r2)
  807048:	d8c00517 	ldw	r3,20(sp)
  80704c:	bd3fffc3 	ldbu	r20,-1(r23)
  807050:	18c00044 	addi	r3,r3,1
  807054:	d8c00515 	stw	r3,20(sp)
  807058:	003db906 	br	806740 <__alt_data_end+0xff806740>
  80705c:	89400117 	ldw	r5,4(r17)
  807060:	e009883a 	mov	r4,fp
  807064:	0808e400 	call	808e40 <_Balloc>
  807068:	89800417 	ldw	r6,16(r17)
  80706c:	89400304 	addi	r5,r17,12
  807070:	11000304 	addi	r4,r2,12
  807074:	31800084 	addi	r6,r6,2
  807078:	318d883a 	add	r6,r6,r6
  80707c:	318d883a 	add	r6,r6,r6
  807080:	1027883a 	mov	r19,r2
  807084:	0808bd00 	call	808bd0 <memcpy>
  807088:	01800044 	movi	r6,1
  80708c:	980b883a 	mov	r5,r19
  807090:	e009883a 	mov	r4,fp
  807094:	08095c00 	call	8095c0 <__lshift>
  807098:	1029883a 	mov	r20,r2
  80709c:	003ecc06 	br	806bd0 <__alt_data_end+0xff806bd0>
  8070a0:	00800e44 	movi	r2,57
  8070a4:	90809026 	beq	r18,r2,8072e8 <_dtoa_r+0x152c>
  8070a8:	92000044 	addi	r8,r18,1
  8070ac:	003f1f06 	br	806d2c <__alt_data_end+0xff806d2c>
  8070b0:	9011883a 	mov	r8,r18
  8070b4:	8825883a 	mov	r18,r17
  8070b8:	a023883a 	mov	r17,r20
  8070bc:	003e2906 	br	806964 <__alt_data_end+0xff806964>
  8070c0:	002b883a 	mov	r21,zero
  8070c4:	0023883a 	mov	r17,zero
  8070c8:	003f5406 	br	806e1c <__alt_data_end+0xff806e1c>
  8070cc:	61bfffc4 	addi	r6,r12,-1
  8070d0:	300490fa 	slli	r2,r6,3
  8070d4:	00c02074 	movhi	r3,129
  8070d8:	18c47404 	addi	r3,r3,4560
  8070dc:	1885883a 	add	r2,r3,r2
  8070e0:	11000017 	ldw	r4,0(r2)
  8070e4:	11400117 	ldw	r5,4(r2)
  8070e8:	d8800717 	ldw	r2,28(sp)
  8070ec:	880f883a 	mov	r7,r17
  8070f0:	d9801215 	stw	r6,72(sp)
  8070f4:	800d883a 	mov	r6,r16
  8070f8:	db001615 	stw	r12,88(sp)
  8070fc:	15c00044 	addi	r23,r2,1
  807100:	08023fc0 	call	8023fc <__muldf3>
  807104:	d9401017 	ldw	r5,64(sp)
  807108:	d9000f17 	ldw	r4,60(sp)
  80710c:	d8c01515 	stw	r3,84(sp)
  807110:	d8801415 	stw	r2,80(sp)
  807114:	080e4500 	call	80e450 <__fixdfsi>
  807118:	1009883a 	mov	r4,r2
  80711c:	1021883a 	mov	r16,r2
  807120:	080e4d00 	call	80e4d0 <__floatsidf>
  807124:	d9000f17 	ldw	r4,60(sp)
  807128:	d9401017 	ldw	r5,64(sp)
  80712c:	100d883a 	mov	r6,r2
  807130:	180f883a 	mov	r7,r3
  807134:	0802b140 	call	802b14 <__subdf3>
  807138:	1829883a 	mov	r20,r3
  80713c:	d8c00717 	ldw	r3,28(sp)
  807140:	84000c04 	addi	r16,r16,48
  807144:	1023883a 	mov	r17,r2
  807148:	1c000005 	stb	r16,0(r3)
  80714c:	db001617 	ldw	r12,88(sp)
  807150:	00800044 	movi	r2,1
  807154:	60802226 	beq	r12,r2,8071e0 <_dtoa_r+0x1424>
  807158:	d9c00717 	ldw	r7,28(sp)
  80715c:	8805883a 	mov	r2,r17
  807160:	b82b883a 	mov	r21,r23
  807164:	3b19883a 	add	r12,r7,r12
  807168:	6023883a 	mov	r17,r12
  80716c:	a007883a 	mov	r3,r20
  807170:	dc800f15 	stw	r18,60(sp)
  807174:	000d883a 	mov	r6,zero
  807178:	01d00934 	movhi	r7,16420
  80717c:	1009883a 	mov	r4,r2
  807180:	180b883a 	mov	r5,r3
  807184:	08023fc0 	call	8023fc <__muldf3>
  807188:	180b883a 	mov	r5,r3
  80718c:	1009883a 	mov	r4,r2
  807190:	1829883a 	mov	r20,r3
  807194:	1025883a 	mov	r18,r2
  807198:	080e4500 	call	80e450 <__fixdfsi>
  80719c:	1009883a 	mov	r4,r2
  8071a0:	1021883a 	mov	r16,r2
  8071a4:	080e4d00 	call	80e4d0 <__floatsidf>
  8071a8:	100d883a 	mov	r6,r2
  8071ac:	180f883a 	mov	r7,r3
  8071b0:	9009883a 	mov	r4,r18
  8071b4:	a00b883a 	mov	r5,r20
  8071b8:	84000c04 	addi	r16,r16,48
  8071bc:	0802b140 	call	802b14 <__subdf3>
  8071c0:	ad400044 	addi	r21,r21,1
  8071c4:	ac3fffc5 	stb	r16,-1(r21)
  8071c8:	ac7fea1e 	bne	r21,r17,807174 <__alt_data_end+0xff807174>
  8071cc:	1023883a 	mov	r17,r2
  8071d0:	d8801217 	ldw	r2,72(sp)
  8071d4:	dc800f17 	ldw	r18,60(sp)
  8071d8:	1829883a 	mov	r20,r3
  8071dc:	b8af883a 	add	r23,r23,r2
  8071e0:	d9001417 	ldw	r4,80(sp)
  8071e4:	d9401517 	ldw	r5,84(sp)
  8071e8:	000d883a 	mov	r6,zero
  8071ec:	01cff834 	movhi	r7,16352
  8071f0:	0801b500 	call	801b50 <__adddf3>
  8071f4:	880d883a 	mov	r6,r17
  8071f8:	a00f883a 	mov	r7,r20
  8071fc:	1009883a 	mov	r4,r2
  807200:	180b883a 	mov	r5,r3
  807204:	080e35c0 	call	80e35c <__ledf2>
  807208:	10003e0e 	bge	r2,zero,807304 <_dtoa_r+0x1548>
  80720c:	d9001317 	ldw	r4,76(sp)
  807210:	bd3fffc3 	ldbu	r20,-1(r23)
  807214:	d9000515 	stw	r4,20(sp)
  807218:	003d3b06 	br	806708 <__alt_data_end+0xff806708>
  80721c:	0027883a 	mov	r19,zero
  807220:	003f1b06 	br	806e90 <__alt_data_end+0xff806e90>
  807224:	d8800817 	ldw	r2,32(sp)
  807228:	11e9c83a 	sub	r20,r2,r7
  80722c:	0005883a 	mov	r2,zero
  807230:	003d5406 	br	806784 <__alt_data_end+0xff806784>
  807234:	00800044 	movi	r2,1
  807238:	003dc706 	br	806958 <__alt_data_end+0xff806958>
  80723c:	d8c00217 	ldw	r3,8(sp)
  807240:	00800d84 	movi	r2,54
  807244:	dd400a17 	ldw	r21,40(sp)
  807248:	10c5c83a 	sub	r2,r2,r3
  80724c:	dd000817 	ldw	r20,32(sp)
  807250:	003d4c06 	br	806784 <__alt_data_end+0xff806784>
  807254:	dc800f15 	stw	r18,60(sp)
  807258:	dcc01015 	stw	r19,64(sp)
  80725c:	04000084 	movi	r16,2
  807260:	003bed06 	br	806218 <__alt_data_end+0xff806218>
  807264:	d9000617 	ldw	r4,24(sp)
  807268:	203f0d26 	beq	r4,zero,806ea0 <__alt_data_end+0xff806ea0>
  80726c:	d9800c17 	ldw	r6,48(sp)
  807270:	01bcab0e 	bge	zero,r6,806520 <__alt_data_end+0xff806520>
  807274:	d9401017 	ldw	r5,64(sp)
  807278:	d9000f17 	ldw	r4,60(sp)
  80727c:	000d883a 	mov	r6,zero
  807280:	01d00934 	movhi	r7,16420
  807284:	08023fc0 	call	8023fc <__muldf3>
  807288:	81000044 	addi	r4,r16,1
  80728c:	d8800f15 	stw	r2,60(sp)
  807290:	d8c01015 	stw	r3,64(sp)
  807294:	080e4d00 	call	80e4d0 <__floatsidf>
  807298:	d9800f17 	ldw	r6,60(sp)
  80729c:	d9c01017 	ldw	r7,64(sp)
  8072a0:	1009883a 	mov	r4,r2
  8072a4:	180b883a 	mov	r5,r3
  8072a8:	08023fc0 	call	8023fc <__muldf3>
  8072ac:	01d00734 	movhi	r7,16412
  8072b0:	000d883a 	mov	r6,zero
  8072b4:	1009883a 	mov	r4,r2
  8072b8:	180b883a 	mov	r5,r3
  8072bc:	0801b500 	call	801b50 <__adddf3>
  8072c0:	d9c00517 	ldw	r7,20(sp)
  8072c4:	047f3034 	movhi	r17,64704
  8072c8:	1021883a 	mov	r16,r2
  8072cc:	39ffffc4 	addi	r7,r7,-1
  8072d0:	d9c01315 	stw	r7,76(sp)
  8072d4:	1c63883a 	add	r17,r3,r17
  8072d8:	db000c17 	ldw	r12,48(sp)
  8072dc:	003bea06 	br	806288 <__alt_data_end+0xff806288>
  8072e0:	dc000915 	stw	r16,36(sp)
  8072e4:	003e0e06 	br	806b20 <__alt_data_end+0xff806b20>
  8072e8:	01000e44 	movi	r4,57
  8072ec:	8825883a 	mov	r18,r17
  8072f0:	9dc00044 	addi	r23,r19,1
  8072f4:	99000005 	stb	r4,0(r19)
  8072f8:	a023883a 	mov	r17,r20
  8072fc:	dc000915 	stw	r16,36(sp)
  807300:	003da406 	br	806994 <__alt_data_end+0xff806994>
  807304:	d9801417 	ldw	r6,80(sp)
  807308:	d9c01517 	ldw	r7,84(sp)
  80730c:	0009883a 	mov	r4,zero
  807310:	014ff834 	movhi	r5,16352
  807314:	0802b140 	call	802b14 <__subdf3>
  807318:	880d883a 	mov	r6,r17
  80731c:	a00f883a 	mov	r7,r20
  807320:	1009883a 	mov	r4,r2
  807324:	180b883a 	mov	r5,r3
  807328:	080e2800 	call	80e280 <__gedf2>
  80732c:	00bc7c0e 	bge	zero,r2,806520 <__alt_data_end+0xff806520>
  807330:	01000c04 	movi	r4,48
  807334:	00000106 	br	80733c <_dtoa_r+0x1580>
  807338:	102f883a 	mov	r23,r2
  80733c:	b8bfffc4 	addi	r2,r23,-1
  807340:	10c00007 	ldb	r3,0(r2)
  807344:	193ffc26 	beq	r3,r4,807338 <__alt_data_end+0xff807338>
  807348:	d9801317 	ldw	r6,76(sp)
  80734c:	d9800515 	stw	r6,20(sp)
  807350:	003c4406 	br	806464 <__alt_data_end+0xff806464>
  807354:	d9801317 	ldw	r6,76(sp)
  807358:	d9800515 	stw	r6,20(sp)
  80735c:	003cea06 	br	806708 <__alt_data_end+0xff806708>
  807360:	dd800f17 	ldw	r22,60(sp)
  807364:	dcc01017 	ldw	r19,64(sp)
  807368:	dc801217 	ldw	r18,72(sp)
  80736c:	003c6c06 	br	806520 <__alt_data_end+0xff806520>
  807370:	903e031e 	bne	r18,zero,806b80 <__alt_data_end+0xff806b80>
  807374:	003ebb06 	br	806e64 <__alt_data_end+0xff806e64>
  807378:	103e6c1e 	bne	r2,zero,806d2c <__alt_data_end+0xff806d2c>
  80737c:	4080004c 	andi	r2,r8,1
  807380:	103e6a26 	beq	r2,zero,806d2c <__alt_data_end+0xff806d2c>
  807384:	003e6606 	br	806d20 <__alt_data_end+0xff806d20>
  807388:	d8c00317 	ldw	r3,12(sp)
  80738c:	00800084 	movi	r2,2
  807390:	10c02916 	blt	r2,r3,807438 <_dtoa_r+0x167c>
  807394:	d9000c17 	ldw	r4,48(sp)
  807398:	003e8806 	br	806dbc <__alt_data_end+0xff806dbc>
  80739c:	04000084 	movi	r16,2
  8073a0:	003b9d06 	br	806218 <__alt_data_end+0xff806218>
  8073a4:	d9001317 	ldw	r4,76(sp)
  8073a8:	d9000515 	stw	r4,20(sp)
  8073ac:	003cd606 	br	806708 <__alt_data_end+0xff806708>
  8073b0:	d8801317 	ldw	r2,76(sp)
  8073b4:	d8800515 	stw	r2,20(sp)
  8073b8:	003c2a06 	br	806464 <__alt_data_end+0xff806464>
  8073bc:	d9800317 	ldw	r6,12(sp)
  8073c0:	00800084 	movi	r2,2
  8073c4:	11801516 	blt	r2,r6,80741c <_dtoa_r+0x1660>
  8073c8:	d9c00c17 	ldw	r7,48(sp)
  8073cc:	d9c00615 	stw	r7,24(sp)
  8073d0:	003df706 	br	806bb0 <__alt_data_end+0xff806bb0>
  8073d4:	193d3926 	beq	r3,r4,8068bc <__alt_data_end+0xff8068bc>
  8073d8:	00c00f04 	movi	r3,60
  8073dc:	1885c83a 	sub	r2,r3,r2
  8073e0:	003ddf06 	br	806b60 <__alt_data_end+0xff806b60>
  8073e4:	e009883a 	mov	r4,fp
  8073e8:	e0001115 	stw	zero,68(fp)
  8073ec:	000b883a 	mov	r5,zero
  8073f0:	0808e400 	call	808e40 <_Balloc>
  8073f4:	d8800715 	stw	r2,28(sp)
  8073f8:	d8c00717 	ldw	r3,28(sp)
  8073fc:	00bfffc4 	movi	r2,-1
  807400:	01000044 	movi	r4,1
  807404:	d8800c15 	stw	r2,48(sp)
  807408:	e0c01015 	stw	r3,64(fp)
  80740c:	d9000b15 	stw	r4,44(sp)
  807410:	d8800615 	stw	r2,24(sp)
  807414:	d8002215 	stw	zero,136(sp)
  807418:	003c4106 	br	806520 <__alt_data_end+0xff806520>
  80741c:	d8c00c17 	ldw	r3,48(sp)
  807420:	d8c00615 	stw	r3,24(sp)
  807424:	003e7006 	br	806de8 <__alt_data_end+0xff806de8>
  807428:	04400044 	movi	r17,1
  80742c:	003b2006 	br	8060b0 <__alt_data_end+0xff8060b0>
  807430:	000b883a 	mov	r5,zero
  807434:	003b3d06 	br	80612c <__alt_data_end+0xff80612c>
  807438:	d8800c17 	ldw	r2,48(sp)
  80743c:	d8800615 	stw	r2,24(sp)
  807440:	003e6906 	br	806de8 <__alt_data_end+0xff806de8>

00807444 <__sflush_r>:
  807444:	2880030b 	ldhu	r2,12(r5)
  807448:	defffb04 	addi	sp,sp,-20
  80744c:	dcc00315 	stw	r19,12(sp)
  807450:	dc400115 	stw	r17,4(sp)
  807454:	dfc00415 	stw	ra,16(sp)
  807458:	dc800215 	stw	r18,8(sp)
  80745c:	dc000015 	stw	r16,0(sp)
  807460:	10c0020c 	andi	r3,r2,8
  807464:	2823883a 	mov	r17,r5
  807468:	2027883a 	mov	r19,r4
  80746c:	1800311e 	bne	r3,zero,807534 <__sflush_r+0xf0>
  807470:	28c00117 	ldw	r3,4(r5)
  807474:	10820014 	ori	r2,r2,2048
  807478:	2880030d 	sth	r2,12(r5)
  80747c:	00c04b0e 	bge	zero,r3,8075ac <__sflush_r+0x168>
  807480:	8a000a17 	ldw	r8,40(r17)
  807484:	40002326 	beq	r8,zero,807514 <__sflush_r+0xd0>
  807488:	9c000017 	ldw	r16,0(r19)
  80748c:	10c4000c 	andi	r3,r2,4096
  807490:	98000015 	stw	zero,0(r19)
  807494:	18004826 	beq	r3,zero,8075b8 <__sflush_r+0x174>
  807498:	89801417 	ldw	r6,80(r17)
  80749c:	10c0010c 	andi	r3,r2,4
  8074a0:	18000626 	beq	r3,zero,8074bc <__sflush_r+0x78>
  8074a4:	88c00117 	ldw	r3,4(r17)
  8074a8:	88800c17 	ldw	r2,48(r17)
  8074ac:	30cdc83a 	sub	r6,r6,r3
  8074b0:	10000226 	beq	r2,zero,8074bc <__sflush_r+0x78>
  8074b4:	88800f17 	ldw	r2,60(r17)
  8074b8:	308dc83a 	sub	r6,r6,r2
  8074bc:	89400717 	ldw	r5,28(r17)
  8074c0:	000f883a 	mov	r7,zero
  8074c4:	9809883a 	mov	r4,r19
  8074c8:	403ee83a 	callr	r8
  8074cc:	00ffffc4 	movi	r3,-1
  8074d0:	10c04426 	beq	r2,r3,8075e4 <__sflush_r+0x1a0>
  8074d4:	88c0030b 	ldhu	r3,12(r17)
  8074d8:	89000417 	ldw	r4,16(r17)
  8074dc:	88000115 	stw	zero,4(r17)
  8074e0:	197dffcc 	andi	r5,r3,63487
  8074e4:	8940030d 	sth	r5,12(r17)
  8074e8:	89000015 	stw	r4,0(r17)
  8074ec:	18c4000c 	andi	r3,r3,4096
  8074f0:	18002c1e 	bne	r3,zero,8075a4 <__sflush_r+0x160>
  8074f4:	89400c17 	ldw	r5,48(r17)
  8074f8:	9c000015 	stw	r16,0(r19)
  8074fc:	28000526 	beq	r5,zero,807514 <__sflush_r+0xd0>
  807500:	88801004 	addi	r2,r17,64
  807504:	28800226 	beq	r5,r2,807510 <__sflush_r+0xcc>
  807508:	9809883a 	mov	r4,r19
  80750c:	0807bb00 	call	807bb0 <_free_r>
  807510:	88000c15 	stw	zero,48(r17)
  807514:	0005883a 	mov	r2,zero
  807518:	dfc00417 	ldw	ra,16(sp)
  80751c:	dcc00317 	ldw	r19,12(sp)
  807520:	dc800217 	ldw	r18,8(sp)
  807524:	dc400117 	ldw	r17,4(sp)
  807528:	dc000017 	ldw	r16,0(sp)
  80752c:	dec00504 	addi	sp,sp,20
  807530:	f800283a 	ret
  807534:	2c800417 	ldw	r18,16(r5)
  807538:	903ff626 	beq	r18,zero,807514 <__alt_data_end+0xff807514>
  80753c:	2c000017 	ldw	r16,0(r5)
  807540:	108000cc 	andi	r2,r2,3
  807544:	2c800015 	stw	r18,0(r5)
  807548:	84a1c83a 	sub	r16,r16,r18
  80754c:	1000131e 	bne	r2,zero,80759c <__sflush_r+0x158>
  807550:	28800517 	ldw	r2,20(r5)
  807554:	88800215 	stw	r2,8(r17)
  807558:	04000316 	blt	zero,r16,807568 <__sflush_r+0x124>
  80755c:	003fed06 	br	807514 <__alt_data_end+0xff807514>
  807560:	90a5883a 	add	r18,r18,r2
  807564:	043feb0e 	bge	zero,r16,807514 <__alt_data_end+0xff807514>
  807568:	88800917 	ldw	r2,36(r17)
  80756c:	89400717 	ldw	r5,28(r17)
  807570:	800f883a 	mov	r7,r16
  807574:	900d883a 	mov	r6,r18
  807578:	9809883a 	mov	r4,r19
  80757c:	103ee83a 	callr	r2
  807580:	80a1c83a 	sub	r16,r16,r2
  807584:	00bff616 	blt	zero,r2,807560 <__alt_data_end+0xff807560>
  807588:	88c0030b 	ldhu	r3,12(r17)
  80758c:	00bfffc4 	movi	r2,-1
  807590:	18c01014 	ori	r3,r3,64
  807594:	88c0030d 	sth	r3,12(r17)
  807598:	003fdf06 	br	807518 <__alt_data_end+0xff807518>
  80759c:	0005883a 	mov	r2,zero
  8075a0:	003fec06 	br	807554 <__alt_data_end+0xff807554>
  8075a4:	88801415 	stw	r2,80(r17)
  8075a8:	003fd206 	br	8074f4 <__alt_data_end+0xff8074f4>
  8075ac:	28c00f17 	ldw	r3,60(r5)
  8075b0:	00ffb316 	blt	zero,r3,807480 <__alt_data_end+0xff807480>
  8075b4:	003fd706 	br	807514 <__alt_data_end+0xff807514>
  8075b8:	89400717 	ldw	r5,28(r17)
  8075bc:	000d883a 	mov	r6,zero
  8075c0:	01c00044 	movi	r7,1
  8075c4:	9809883a 	mov	r4,r19
  8075c8:	403ee83a 	callr	r8
  8075cc:	100d883a 	mov	r6,r2
  8075d0:	00bfffc4 	movi	r2,-1
  8075d4:	30801426 	beq	r6,r2,807628 <__sflush_r+0x1e4>
  8075d8:	8880030b 	ldhu	r2,12(r17)
  8075dc:	8a000a17 	ldw	r8,40(r17)
  8075e0:	003fae06 	br	80749c <__alt_data_end+0xff80749c>
  8075e4:	98c00017 	ldw	r3,0(r19)
  8075e8:	183fba26 	beq	r3,zero,8074d4 <__alt_data_end+0xff8074d4>
  8075ec:	01000744 	movi	r4,29
  8075f0:	19000626 	beq	r3,r4,80760c <__sflush_r+0x1c8>
  8075f4:	01000584 	movi	r4,22
  8075f8:	19000426 	beq	r3,r4,80760c <__sflush_r+0x1c8>
  8075fc:	88c0030b 	ldhu	r3,12(r17)
  807600:	18c01014 	ori	r3,r3,64
  807604:	88c0030d 	sth	r3,12(r17)
  807608:	003fc306 	br	807518 <__alt_data_end+0xff807518>
  80760c:	8880030b 	ldhu	r2,12(r17)
  807610:	88c00417 	ldw	r3,16(r17)
  807614:	88000115 	stw	zero,4(r17)
  807618:	10bdffcc 	andi	r2,r2,63487
  80761c:	8880030d 	sth	r2,12(r17)
  807620:	88c00015 	stw	r3,0(r17)
  807624:	003fb306 	br	8074f4 <__alt_data_end+0xff8074f4>
  807628:	98800017 	ldw	r2,0(r19)
  80762c:	103fea26 	beq	r2,zero,8075d8 <__alt_data_end+0xff8075d8>
  807630:	00c00744 	movi	r3,29
  807634:	10c00226 	beq	r2,r3,807640 <__sflush_r+0x1fc>
  807638:	00c00584 	movi	r3,22
  80763c:	10c0031e 	bne	r2,r3,80764c <__sflush_r+0x208>
  807640:	9c000015 	stw	r16,0(r19)
  807644:	0005883a 	mov	r2,zero
  807648:	003fb306 	br	807518 <__alt_data_end+0xff807518>
  80764c:	88c0030b 	ldhu	r3,12(r17)
  807650:	3005883a 	mov	r2,r6
  807654:	18c01014 	ori	r3,r3,64
  807658:	88c0030d 	sth	r3,12(r17)
  80765c:	003fae06 	br	807518 <__alt_data_end+0xff807518>

00807660 <_fflush_r>:
  807660:	defffd04 	addi	sp,sp,-12
  807664:	dc000115 	stw	r16,4(sp)
  807668:	dfc00215 	stw	ra,8(sp)
  80766c:	2021883a 	mov	r16,r4
  807670:	20000226 	beq	r4,zero,80767c <_fflush_r+0x1c>
  807674:	20800e17 	ldw	r2,56(r4)
  807678:	10000c26 	beq	r2,zero,8076ac <_fflush_r+0x4c>
  80767c:	2880030f 	ldh	r2,12(r5)
  807680:	1000051e 	bne	r2,zero,807698 <_fflush_r+0x38>
  807684:	0005883a 	mov	r2,zero
  807688:	dfc00217 	ldw	ra,8(sp)
  80768c:	dc000117 	ldw	r16,4(sp)
  807690:	dec00304 	addi	sp,sp,12
  807694:	f800283a 	ret
  807698:	8009883a 	mov	r4,r16
  80769c:	dfc00217 	ldw	ra,8(sp)
  8076a0:	dc000117 	ldw	r16,4(sp)
  8076a4:	dec00304 	addi	sp,sp,12
  8076a8:	08074441 	jmpi	807444 <__sflush_r>
  8076ac:	d9400015 	stw	r5,0(sp)
  8076b0:	0807a3c0 	call	807a3c <__sinit>
  8076b4:	d9400017 	ldw	r5,0(sp)
  8076b8:	003ff006 	br	80767c <__alt_data_end+0xff80767c>

008076bc <fflush>:
  8076bc:	20000526 	beq	r4,zero,8076d4 <fflush+0x18>
  8076c0:	00802074 	movhi	r2,129
  8076c4:	108b6504 	addi	r2,r2,11668
  8076c8:	200b883a 	mov	r5,r4
  8076cc:	11000017 	ldw	r4,0(r2)
  8076d0:	08076601 	jmpi	807660 <_fflush_r>
  8076d4:	00802074 	movhi	r2,129
  8076d8:	108b6404 	addi	r2,r2,11664
  8076dc:	11000017 	ldw	r4,0(r2)
  8076e0:	01402034 	movhi	r5,128
  8076e4:	295d9804 	addi	r5,r5,30304
  8076e8:	0807f841 	jmpi	807f84 <_fwalk_reent>

008076ec <__fp_unlock>:
  8076ec:	0005883a 	mov	r2,zero
  8076f0:	f800283a 	ret

008076f4 <_cleanup_r>:
  8076f4:	01402074 	movhi	r5,129
  8076f8:	296e5d04 	addi	r5,r5,-18060
  8076fc:	0807f841 	jmpi	807f84 <_fwalk_reent>

00807700 <__sinit.part.1>:
  807700:	defff704 	addi	sp,sp,-36
  807704:	00c02034 	movhi	r3,128
  807708:	dfc00815 	stw	ra,32(sp)
  80770c:	ddc00715 	stw	r23,28(sp)
  807710:	dd800615 	stw	r22,24(sp)
  807714:	dd400515 	stw	r21,20(sp)
  807718:	dd000415 	stw	r20,16(sp)
  80771c:	dcc00315 	stw	r19,12(sp)
  807720:	dc800215 	stw	r18,8(sp)
  807724:	dc400115 	stw	r17,4(sp)
  807728:	dc000015 	stw	r16,0(sp)
  80772c:	18ddbd04 	addi	r3,r3,30452
  807730:	24000117 	ldw	r16,4(r4)
  807734:	20c00f15 	stw	r3,60(r4)
  807738:	2080bb04 	addi	r2,r4,748
  80773c:	00c000c4 	movi	r3,3
  807740:	20c0b915 	stw	r3,740(r4)
  807744:	2080ba15 	stw	r2,744(r4)
  807748:	2000b815 	stw	zero,736(r4)
  80774c:	05c00204 	movi	r23,8
  807750:	00800104 	movi	r2,4
  807754:	2025883a 	mov	r18,r4
  807758:	b80d883a 	mov	r6,r23
  80775c:	81001704 	addi	r4,r16,92
  807760:	000b883a 	mov	r5,zero
  807764:	80000015 	stw	zero,0(r16)
  807768:	80000115 	stw	zero,4(r16)
  80776c:	80000215 	stw	zero,8(r16)
  807770:	8080030d 	sth	r2,12(r16)
  807774:	80001915 	stw	zero,100(r16)
  807778:	8000038d 	sth	zero,14(r16)
  80777c:	80000415 	stw	zero,16(r16)
  807780:	80000515 	stw	zero,20(r16)
  807784:	80000615 	stw	zero,24(r16)
  807788:	0808d180 	call	808d18 <memset>
  80778c:	05802074 	movhi	r22,129
  807790:	94400217 	ldw	r17,8(r18)
  807794:	05402074 	movhi	r21,129
  807798:	05002074 	movhi	r20,129
  80779c:	04c02074 	movhi	r19,129
  8077a0:	b5a7c104 	addi	r22,r22,-24828
  8077a4:	ad67d804 	addi	r21,r21,-24736
  8077a8:	a527f704 	addi	r20,r20,-24612
  8077ac:	9ce80e04 	addi	r19,r19,-24520
  8077b0:	85800815 	stw	r22,32(r16)
  8077b4:	85400915 	stw	r21,36(r16)
  8077b8:	85000a15 	stw	r20,40(r16)
  8077bc:	84c00b15 	stw	r19,44(r16)
  8077c0:	84000715 	stw	r16,28(r16)
  8077c4:	00800284 	movi	r2,10
  8077c8:	8880030d 	sth	r2,12(r17)
  8077cc:	00800044 	movi	r2,1
  8077d0:	b80d883a 	mov	r6,r23
  8077d4:	89001704 	addi	r4,r17,92
  8077d8:	000b883a 	mov	r5,zero
  8077dc:	88000015 	stw	zero,0(r17)
  8077e0:	88000115 	stw	zero,4(r17)
  8077e4:	88000215 	stw	zero,8(r17)
  8077e8:	88001915 	stw	zero,100(r17)
  8077ec:	8880038d 	sth	r2,14(r17)
  8077f0:	88000415 	stw	zero,16(r17)
  8077f4:	88000515 	stw	zero,20(r17)
  8077f8:	88000615 	stw	zero,24(r17)
  8077fc:	0808d180 	call	808d18 <memset>
  807800:	94000317 	ldw	r16,12(r18)
  807804:	00800484 	movi	r2,18
  807808:	8c400715 	stw	r17,28(r17)
  80780c:	8d800815 	stw	r22,32(r17)
  807810:	8d400915 	stw	r21,36(r17)
  807814:	8d000a15 	stw	r20,40(r17)
  807818:	8cc00b15 	stw	r19,44(r17)
  80781c:	8080030d 	sth	r2,12(r16)
  807820:	00800084 	movi	r2,2
  807824:	80000015 	stw	zero,0(r16)
  807828:	80000115 	stw	zero,4(r16)
  80782c:	80000215 	stw	zero,8(r16)
  807830:	80001915 	stw	zero,100(r16)
  807834:	8080038d 	sth	r2,14(r16)
  807838:	80000415 	stw	zero,16(r16)
  80783c:	80000515 	stw	zero,20(r16)
  807840:	80000615 	stw	zero,24(r16)
  807844:	b80d883a 	mov	r6,r23
  807848:	000b883a 	mov	r5,zero
  80784c:	81001704 	addi	r4,r16,92
  807850:	0808d180 	call	808d18 <memset>
  807854:	00800044 	movi	r2,1
  807858:	84000715 	stw	r16,28(r16)
  80785c:	85800815 	stw	r22,32(r16)
  807860:	85400915 	stw	r21,36(r16)
  807864:	85000a15 	stw	r20,40(r16)
  807868:	84c00b15 	stw	r19,44(r16)
  80786c:	90800e15 	stw	r2,56(r18)
  807870:	dfc00817 	ldw	ra,32(sp)
  807874:	ddc00717 	ldw	r23,28(sp)
  807878:	dd800617 	ldw	r22,24(sp)
  80787c:	dd400517 	ldw	r21,20(sp)
  807880:	dd000417 	ldw	r20,16(sp)
  807884:	dcc00317 	ldw	r19,12(sp)
  807888:	dc800217 	ldw	r18,8(sp)
  80788c:	dc400117 	ldw	r17,4(sp)
  807890:	dc000017 	ldw	r16,0(sp)
  807894:	dec00904 	addi	sp,sp,36
  807898:	f800283a 	ret

0080789c <__fp_lock>:
  80789c:	0005883a 	mov	r2,zero
  8078a0:	f800283a 	ret

008078a4 <__sfmoreglue>:
  8078a4:	defffc04 	addi	sp,sp,-16
  8078a8:	dc400115 	stw	r17,4(sp)
  8078ac:	2c7fffc4 	addi	r17,r5,-1
  8078b0:	8c401a24 	muli	r17,r17,104
  8078b4:	dc800215 	stw	r18,8(sp)
  8078b8:	2825883a 	mov	r18,r5
  8078bc:	89401d04 	addi	r5,r17,116
  8078c0:	dc000015 	stw	r16,0(sp)
  8078c4:	dfc00315 	stw	ra,12(sp)
  8078c8:	08082e00 	call	8082e0 <_malloc_r>
  8078cc:	1021883a 	mov	r16,r2
  8078d0:	10000726 	beq	r2,zero,8078f0 <__sfmoreglue+0x4c>
  8078d4:	11000304 	addi	r4,r2,12
  8078d8:	10000015 	stw	zero,0(r2)
  8078dc:	14800115 	stw	r18,4(r2)
  8078e0:	11000215 	stw	r4,8(r2)
  8078e4:	89801a04 	addi	r6,r17,104
  8078e8:	000b883a 	mov	r5,zero
  8078ec:	0808d180 	call	808d18 <memset>
  8078f0:	8005883a 	mov	r2,r16
  8078f4:	dfc00317 	ldw	ra,12(sp)
  8078f8:	dc800217 	ldw	r18,8(sp)
  8078fc:	dc400117 	ldw	r17,4(sp)
  807900:	dc000017 	ldw	r16,0(sp)
  807904:	dec00404 	addi	sp,sp,16
  807908:	f800283a 	ret

0080790c <__sfp>:
  80790c:	defffb04 	addi	sp,sp,-20
  807910:	dc000015 	stw	r16,0(sp)
  807914:	04002074 	movhi	r16,129
  807918:	840b6404 	addi	r16,r16,11664
  80791c:	dcc00315 	stw	r19,12(sp)
  807920:	2027883a 	mov	r19,r4
  807924:	81000017 	ldw	r4,0(r16)
  807928:	dfc00415 	stw	ra,16(sp)
  80792c:	dc800215 	stw	r18,8(sp)
  807930:	20800e17 	ldw	r2,56(r4)
  807934:	dc400115 	stw	r17,4(sp)
  807938:	1000021e 	bne	r2,zero,807944 <__sfp+0x38>
  80793c:	08077000 	call	807700 <__sinit.part.1>
  807940:	81000017 	ldw	r4,0(r16)
  807944:	2480b804 	addi	r18,r4,736
  807948:	047fffc4 	movi	r17,-1
  80794c:	91000117 	ldw	r4,4(r18)
  807950:	94000217 	ldw	r16,8(r18)
  807954:	213fffc4 	addi	r4,r4,-1
  807958:	20000a16 	blt	r4,zero,807984 <__sfp+0x78>
  80795c:	8080030f 	ldh	r2,12(r16)
  807960:	10000c26 	beq	r2,zero,807994 <__sfp+0x88>
  807964:	80c01d04 	addi	r3,r16,116
  807968:	00000206 	br	807974 <__sfp+0x68>
  80796c:	18bfe60f 	ldh	r2,-104(r3)
  807970:	10000826 	beq	r2,zero,807994 <__sfp+0x88>
  807974:	213fffc4 	addi	r4,r4,-1
  807978:	1c3ffd04 	addi	r16,r3,-12
  80797c:	18c01a04 	addi	r3,r3,104
  807980:	247ffa1e 	bne	r4,r17,80796c <__alt_data_end+0xff80796c>
  807984:	90800017 	ldw	r2,0(r18)
  807988:	10001d26 	beq	r2,zero,807a00 <__sfp+0xf4>
  80798c:	1025883a 	mov	r18,r2
  807990:	003fee06 	br	80794c <__alt_data_end+0xff80794c>
  807994:	00bfffc4 	movi	r2,-1
  807998:	8080038d 	sth	r2,14(r16)
  80799c:	00800044 	movi	r2,1
  8079a0:	8080030d 	sth	r2,12(r16)
  8079a4:	80001915 	stw	zero,100(r16)
  8079a8:	80000015 	stw	zero,0(r16)
  8079ac:	80000215 	stw	zero,8(r16)
  8079b0:	80000115 	stw	zero,4(r16)
  8079b4:	80000415 	stw	zero,16(r16)
  8079b8:	80000515 	stw	zero,20(r16)
  8079bc:	80000615 	stw	zero,24(r16)
  8079c0:	01800204 	movi	r6,8
  8079c4:	000b883a 	mov	r5,zero
  8079c8:	81001704 	addi	r4,r16,92
  8079cc:	0808d180 	call	808d18 <memset>
  8079d0:	8005883a 	mov	r2,r16
  8079d4:	80000c15 	stw	zero,48(r16)
  8079d8:	80000d15 	stw	zero,52(r16)
  8079dc:	80001115 	stw	zero,68(r16)
  8079e0:	80001215 	stw	zero,72(r16)
  8079e4:	dfc00417 	ldw	ra,16(sp)
  8079e8:	dcc00317 	ldw	r19,12(sp)
  8079ec:	dc800217 	ldw	r18,8(sp)
  8079f0:	dc400117 	ldw	r17,4(sp)
  8079f4:	dc000017 	ldw	r16,0(sp)
  8079f8:	dec00504 	addi	sp,sp,20
  8079fc:	f800283a 	ret
  807a00:	01400104 	movi	r5,4
  807a04:	9809883a 	mov	r4,r19
  807a08:	08078a40 	call	8078a4 <__sfmoreglue>
  807a0c:	90800015 	stw	r2,0(r18)
  807a10:	103fde1e 	bne	r2,zero,80798c <__alt_data_end+0xff80798c>
  807a14:	00800304 	movi	r2,12
  807a18:	98800015 	stw	r2,0(r19)
  807a1c:	0005883a 	mov	r2,zero
  807a20:	003ff006 	br	8079e4 <__alt_data_end+0xff8079e4>

00807a24 <_cleanup>:
  807a24:	00802074 	movhi	r2,129
  807a28:	108b6404 	addi	r2,r2,11664
  807a2c:	11000017 	ldw	r4,0(r2)
  807a30:	01402074 	movhi	r5,129
  807a34:	296e5d04 	addi	r5,r5,-18060
  807a38:	0807f841 	jmpi	807f84 <_fwalk_reent>

00807a3c <__sinit>:
  807a3c:	20800e17 	ldw	r2,56(r4)
  807a40:	10000126 	beq	r2,zero,807a48 <__sinit+0xc>
  807a44:	f800283a 	ret
  807a48:	08077001 	jmpi	807700 <__sinit.part.1>

00807a4c <__sfp_lock_acquire>:
  807a4c:	f800283a 	ret

00807a50 <__sfp_lock_release>:
  807a50:	f800283a 	ret

00807a54 <__sinit_lock_acquire>:
  807a54:	f800283a 	ret

00807a58 <__sinit_lock_release>:
  807a58:	f800283a 	ret

00807a5c <__fp_lock_all>:
  807a5c:	00802074 	movhi	r2,129
  807a60:	108b6504 	addi	r2,r2,11668
  807a64:	11000017 	ldw	r4,0(r2)
  807a68:	01402034 	movhi	r5,128
  807a6c:	295e2704 	addi	r5,r5,30876
  807a70:	0807ec01 	jmpi	807ec0 <_fwalk>

00807a74 <__fp_unlock_all>:
  807a74:	00802074 	movhi	r2,129
  807a78:	108b6504 	addi	r2,r2,11668
  807a7c:	11000017 	ldw	r4,0(r2)
  807a80:	01402034 	movhi	r5,128
  807a84:	295dbb04 	addi	r5,r5,30444
  807a88:	0807ec01 	jmpi	807ec0 <_fwalk>

00807a8c <_malloc_trim_r>:
  807a8c:	defffb04 	addi	sp,sp,-20
  807a90:	dcc00315 	stw	r19,12(sp)
  807a94:	04c02074 	movhi	r19,129
  807a98:	dc800215 	stw	r18,8(sp)
  807a9c:	dc400115 	stw	r17,4(sp)
  807aa0:	dc000015 	stw	r16,0(sp)
  807aa4:	dfc00415 	stw	ra,16(sp)
  807aa8:	2821883a 	mov	r16,r5
  807aac:	9cc5e004 	addi	r19,r19,6016
  807ab0:	2025883a 	mov	r18,r4
  807ab4:	080ebd00 	call	80ebd0 <__malloc_lock>
  807ab8:	98800217 	ldw	r2,8(r19)
  807abc:	14400117 	ldw	r17,4(r2)
  807ac0:	00bfff04 	movi	r2,-4
  807ac4:	88a2703a 	and	r17,r17,r2
  807ac8:	8c21c83a 	sub	r16,r17,r16
  807acc:	8403fbc4 	addi	r16,r16,4079
  807ad0:	8020d33a 	srli	r16,r16,12
  807ad4:	0083ffc4 	movi	r2,4095
  807ad8:	843fffc4 	addi	r16,r16,-1
  807adc:	8020933a 	slli	r16,r16,12
  807ae0:	1400060e 	bge	r2,r16,807afc <_malloc_trim_r+0x70>
  807ae4:	000b883a 	mov	r5,zero
  807ae8:	9009883a 	mov	r4,r18
  807aec:	0809eb00 	call	809eb0 <_sbrk_r>
  807af0:	98c00217 	ldw	r3,8(r19)
  807af4:	1c47883a 	add	r3,r3,r17
  807af8:	10c00a26 	beq	r2,r3,807b24 <_malloc_trim_r+0x98>
  807afc:	9009883a 	mov	r4,r18
  807b00:	080ebf40 	call	80ebf4 <__malloc_unlock>
  807b04:	0005883a 	mov	r2,zero
  807b08:	dfc00417 	ldw	ra,16(sp)
  807b0c:	dcc00317 	ldw	r19,12(sp)
  807b10:	dc800217 	ldw	r18,8(sp)
  807b14:	dc400117 	ldw	r17,4(sp)
  807b18:	dc000017 	ldw	r16,0(sp)
  807b1c:	dec00504 	addi	sp,sp,20
  807b20:	f800283a 	ret
  807b24:	040bc83a 	sub	r5,zero,r16
  807b28:	9009883a 	mov	r4,r18
  807b2c:	0809eb00 	call	809eb0 <_sbrk_r>
  807b30:	00ffffc4 	movi	r3,-1
  807b34:	10c00d26 	beq	r2,r3,807b6c <_malloc_trim_r+0xe0>
  807b38:	00c02074 	movhi	r3,129
  807b3c:	18d23d04 	addi	r3,r3,18676
  807b40:	18800017 	ldw	r2,0(r3)
  807b44:	99000217 	ldw	r4,8(r19)
  807b48:	8c23c83a 	sub	r17,r17,r16
  807b4c:	8c400054 	ori	r17,r17,1
  807b50:	1421c83a 	sub	r16,r2,r16
  807b54:	24400115 	stw	r17,4(r4)
  807b58:	9009883a 	mov	r4,r18
  807b5c:	1c000015 	stw	r16,0(r3)
  807b60:	080ebf40 	call	80ebf4 <__malloc_unlock>
  807b64:	00800044 	movi	r2,1
  807b68:	003fe706 	br	807b08 <__alt_data_end+0xff807b08>
  807b6c:	000b883a 	mov	r5,zero
  807b70:	9009883a 	mov	r4,r18
  807b74:	0809eb00 	call	809eb0 <_sbrk_r>
  807b78:	99000217 	ldw	r4,8(r19)
  807b7c:	014003c4 	movi	r5,15
  807b80:	1107c83a 	sub	r3,r2,r4
  807b84:	28ffdd0e 	bge	r5,r3,807afc <__alt_data_end+0xff807afc>
  807b88:	01402074 	movhi	r5,129
  807b8c:	294b6704 	addi	r5,r5,11676
  807b90:	29400017 	ldw	r5,0(r5)
  807b94:	18c00054 	ori	r3,r3,1
  807b98:	20c00115 	stw	r3,4(r4)
  807b9c:	00c02074 	movhi	r3,129
  807ba0:	1145c83a 	sub	r2,r2,r5
  807ba4:	18d23d04 	addi	r3,r3,18676
  807ba8:	18800015 	stw	r2,0(r3)
  807bac:	003fd306 	br	807afc <__alt_data_end+0xff807afc>

00807bb0 <_free_r>:
  807bb0:	28004126 	beq	r5,zero,807cb8 <_free_r+0x108>
  807bb4:	defffd04 	addi	sp,sp,-12
  807bb8:	dc400115 	stw	r17,4(sp)
  807bbc:	dc000015 	stw	r16,0(sp)
  807bc0:	2023883a 	mov	r17,r4
  807bc4:	2821883a 	mov	r16,r5
  807bc8:	dfc00215 	stw	ra,8(sp)
  807bcc:	080ebd00 	call	80ebd0 <__malloc_lock>
  807bd0:	81ffff17 	ldw	r7,-4(r16)
  807bd4:	00bfff84 	movi	r2,-2
  807bd8:	01002074 	movhi	r4,129
  807bdc:	81bffe04 	addi	r6,r16,-8
  807be0:	3884703a 	and	r2,r7,r2
  807be4:	2105e004 	addi	r4,r4,6016
  807be8:	308b883a 	add	r5,r6,r2
  807bec:	2a400117 	ldw	r9,4(r5)
  807bf0:	22000217 	ldw	r8,8(r4)
  807bf4:	00ffff04 	movi	r3,-4
  807bf8:	48c6703a 	and	r3,r9,r3
  807bfc:	2a005726 	beq	r5,r8,807d5c <_free_r+0x1ac>
  807c00:	28c00115 	stw	r3,4(r5)
  807c04:	39c0004c 	andi	r7,r7,1
  807c08:	3800091e 	bne	r7,zero,807c30 <_free_r+0x80>
  807c0c:	823ffe17 	ldw	r8,-8(r16)
  807c10:	22400204 	addi	r9,r4,8
  807c14:	320dc83a 	sub	r6,r6,r8
  807c18:	31c00217 	ldw	r7,8(r6)
  807c1c:	1205883a 	add	r2,r2,r8
  807c20:	3a406526 	beq	r7,r9,807db8 <_free_r+0x208>
  807c24:	32000317 	ldw	r8,12(r6)
  807c28:	3a000315 	stw	r8,12(r7)
  807c2c:	41c00215 	stw	r7,8(r8)
  807c30:	28cf883a 	add	r7,r5,r3
  807c34:	39c00117 	ldw	r7,4(r7)
  807c38:	39c0004c 	andi	r7,r7,1
  807c3c:	38003a26 	beq	r7,zero,807d28 <_free_r+0x178>
  807c40:	10c00054 	ori	r3,r2,1
  807c44:	30c00115 	stw	r3,4(r6)
  807c48:	3087883a 	add	r3,r6,r2
  807c4c:	18800015 	stw	r2,0(r3)
  807c50:	00c07fc4 	movi	r3,511
  807c54:	18801936 	bltu	r3,r2,807cbc <_free_r+0x10c>
  807c58:	1004d0fa 	srli	r2,r2,3
  807c5c:	01c00044 	movi	r7,1
  807c60:	21400117 	ldw	r5,4(r4)
  807c64:	10c00044 	addi	r3,r2,1
  807c68:	18c7883a 	add	r3,r3,r3
  807c6c:	1005d0ba 	srai	r2,r2,2
  807c70:	18c7883a 	add	r3,r3,r3
  807c74:	18c7883a 	add	r3,r3,r3
  807c78:	1907883a 	add	r3,r3,r4
  807c7c:	3884983a 	sll	r2,r7,r2
  807c80:	19c00017 	ldw	r7,0(r3)
  807c84:	1a3ffe04 	addi	r8,r3,-8
  807c88:	1144b03a 	or	r2,r2,r5
  807c8c:	32000315 	stw	r8,12(r6)
  807c90:	31c00215 	stw	r7,8(r6)
  807c94:	20800115 	stw	r2,4(r4)
  807c98:	19800015 	stw	r6,0(r3)
  807c9c:	39800315 	stw	r6,12(r7)
  807ca0:	8809883a 	mov	r4,r17
  807ca4:	dfc00217 	ldw	ra,8(sp)
  807ca8:	dc400117 	ldw	r17,4(sp)
  807cac:	dc000017 	ldw	r16,0(sp)
  807cb0:	dec00304 	addi	sp,sp,12
  807cb4:	080ebf41 	jmpi	80ebf4 <__malloc_unlock>
  807cb8:	f800283a 	ret
  807cbc:	100ad27a 	srli	r5,r2,9
  807cc0:	00c00104 	movi	r3,4
  807cc4:	19404a36 	bltu	r3,r5,807df0 <_free_r+0x240>
  807cc8:	100ad1ba 	srli	r5,r2,6
  807ccc:	28c00e44 	addi	r3,r5,57
  807cd0:	18c7883a 	add	r3,r3,r3
  807cd4:	29400e04 	addi	r5,r5,56
  807cd8:	18c7883a 	add	r3,r3,r3
  807cdc:	18c7883a 	add	r3,r3,r3
  807ce0:	1909883a 	add	r4,r3,r4
  807ce4:	20c00017 	ldw	r3,0(r4)
  807ce8:	01c02074 	movhi	r7,129
  807cec:	213ffe04 	addi	r4,r4,-8
  807cf0:	39c5e004 	addi	r7,r7,6016
  807cf4:	20c04426 	beq	r4,r3,807e08 <_free_r+0x258>
  807cf8:	01ffff04 	movi	r7,-4
  807cfc:	19400117 	ldw	r5,4(r3)
  807d00:	29ca703a 	and	r5,r5,r7
  807d04:	1140022e 	bgeu	r2,r5,807d10 <_free_r+0x160>
  807d08:	18c00217 	ldw	r3,8(r3)
  807d0c:	20fffb1e 	bne	r4,r3,807cfc <__alt_data_end+0xff807cfc>
  807d10:	19000317 	ldw	r4,12(r3)
  807d14:	31000315 	stw	r4,12(r6)
  807d18:	30c00215 	stw	r3,8(r6)
  807d1c:	21800215 	stw	r6,8(r4)
  807d20:	19800315 	stw	r6,12(r3)
  807d24:	003fde06 	br	807ca0 <__alt_data_end+0xff807ca0>
  807d28:	29c00217 	ldw	r7,8(r5)
  807d2c:	10c5883a 	add	r2,r2,r3
  807d30:	00c02074 	movhi	r3,129
  807d34:	18c5e204 	addi	r3,r3,6024
  807d38:	38c03b26 	beq	r7,r3,807e28 <_free_r+0x278>
  807d3c:	2a000317 	ldw	r8,12(r5)
  807d40:	11400054 	ori	r5,r2,1
  807d44:	3087883a 	add	r3,r6,r2
  807d48:	3a000315 	stw	r8,12(r7)
  807d4c:	41c00215 	stw	r7,8(r8)
  807d50:	31400115 	stw	r5,4(r6)
  807d54:	18800015 	stw	r2,0(r3)
  807d58:	003fbd06 	br	807c50 <__alt_data_end+0xff807c50>
  807d5c:	39c0004c 	andi	r7,r7,1
  807d60:	10c5883a 	add	r2,r2,r3
  807d64:	3800071e 	bne	r7,zero,807d84 <_free_r+0x1d4>
  807d68:	81fffe17 	ldw	r7,-8(r16)
  807d6c:	31cdc83a 	sub	r6,r6,r7
  807d70:	30c00317 	ldw	r3,12(r6)
  807d74:	31400217 	ldw	r5,8(r6)
  807d78:	11c5883a 	add	r2,r2,r7
  807d7c:	28c00315 	stw	r3,12(r5)
  807d80:	19400215 	stw	r5,8(r3)
  807d84:	10c00054 	ori	r3,r2,1
  807d88:	30c00115 	stw	r3,4(r6)
  807d8c:	00c02074 	movhi	r3,129
  807d90:	18cb6804 	addi	r3,r3,11680
  807d94:	18c00017 	ldw	r3,0(r3)
  807d98:	21800215 	stw	r6,8(r4)
  807d9c:	10ffc036 	bltu	r2,r3,807ca0 <__alt_data_end+0xff807ca0>
  807da0:	00802074 	movhi	r2,129
  807da4:	10923404 	addi	r2,r2,18640
  807da8:	11400017 	ldw	r5,0(r2)
  807dac:	8809883a 	mov	r4,r17
  807db0:	0807a8c0 	call	807a8c <_malloc_trim_r>
  807db4:	003fba06 	br	807ca0 <__alt_data_end+0xff807ca0>
  807db8:	28c9883a 	add	r4,r5,r3
  807dbc:	21000117 	ldw	r4,4(r4)
  807dc0:	2100004c 	andi	r4,r4,1
  807dc4:	2000391e 	bne	r4,zero,807eac <_free_r+0x2fc>
  807dc8:	29c00217 	ldw	r7,8(r5)
  807dcc:	29000317 	ldw	r4,12(r5)
  807dd0:	1885883a 	add	r2,r3,r2
  807dd4:	10c00054 	ori	r3,r2,1
  807dd8:	39000315 	stw	r4,12(r7)
  807ddc:	21c00215 	stw	r7,8(r4)
  807de0:	30c00115 	stw	r3,4(r6)
  807de4:	308d883a 	add	r6,r6,r2
  807de8:	30800015 	stw	r2,0(r6)
  807dec:	003fac06 	br	807ca0 <__alt_data_end+0xff807ca0>
  807df0:	00c00504 	movi	r3,20
  807df4:	19401536 	bltu	r3,r5,807e4c <_free_r+0x29c>
  807df8:	28c01704 	addi	r3,r5,92
  807dfc:	18c7883a 	add	r3,r3,r3
  807e00:	294016c4 	addi	r5,r5,91
  807e04:	003fb406 	br	807cd8 <__alt_data_end+0xff807cd8>
  807e08:	280bd0ba 	srai	r5,r5,2
  807e0c:	00c00044 	movi	r3,1
  807e10:	38800117 	ldw	r2,4(r7)
  807e14:	194a983a 	sll	r5,r3,r5
  807e18:	2007883a 	mov	r3,r4
  807e1c:	2884b03a 	or	r2,r5,r2
  807e20:	38800115 	stw	r2,4(r7)
  807e24:	003fbb06 	br	807d14 <__alt_data_end+0xff807d14>
  807e28:	21800515 	stw	r6,20(r4)
  807e2c:	21800415 	stw	r6,16(r4)
  807e30:	10c00054 	ori	r3,r2,1
  807e34:	31c00315 	stw	r7,12(r6)
  807e38:	31c00215 	stw	r7,8(r6)
  807e3c:	30c00115 	stw	r3,4(r6)
  807e40:	308d883a 	add	r6,r6,r2
  807e44:	30800015 	stw	r2,0(r6)
  807e48:	003f9506 	br	807ca0 <__alt_data_end+0xff807ca0>
  807e4c:	00c01504 	movi	r3,84
  807e50:	19400536 	bltu	r3,r5,807e68 <_free_r+0x2b8>
  807e54:	100ad33a 	srli	r5,r2,12
  807e58:	28c01bc4 	addi	r3,r5,111
  807e5c:	18c7883a 	add	r3,r3,r3
  807e60:	29401b84 	addi	r5,r5,110
  807e64:	003f9c06 	br	807cd8 <__alt_data_end+0xff807cd8>
  807e68:	00c05504 	movi	r3,340
  807e6c:	19400536 	bltu	r3,r5,807e84 <_free_r+0x2d4>
  807e70:	100ad3fa 	srli	r5,r2,15
  807e74:	28c01e04 	addi	r3,r5,120
  807e78:	18c7883a 	add	r3,r3,r3
  807e7c:	29401dc4 	addi	r5,r5,119
  807e80:	003f9506 	br	807cd8 <__alt_data_end+0xff807cd8>
  807e84:	00c15504 	movi	r3,1364
  807e88:	19400536 	bltu	r3,r5,807ea0 <_free_r+0x2f0>
  807e8c:	100ad4ba 	srli	r5,r2,18
  807e90:	28c01f44 	addi	r3,r5,125
  807e94:	18c7883a 	add	r3,r3,r3
  807e98:	29401f04 	addi	r5,r5,124
  807e9c:	003f8e06 	br	807cd8 <__alt_data_end+0xff807cd8>
  807ea0:	00c03f84 	movi	r3,254
  807ea4:	01401f84 	movi	r5,126
  807ea8:	003f8b06 	br	807cd8 <__alt_data_end+0xff807cd8>
  807eac:	10c00054 	ori	r3,r2,1
  807eb0:	30c00115 	stw	r3,4(r6)
  807eb4:	308d883a 	add	r6,r6,r2
  807eb8:	30800015 	stw	r2,0(r6)
  807ebc:	003f7806 	br	807ca0 <__alt_data_end+0xff807ca0>

00807ec0 <_fwalk>:
  807ec0:	defff704 	addi	sp,sp,-36
  807ec4:	dd000415 	stw	r20,16(sp)
  807ec8:	dfc00815 	stw	ra,32(sp)
  807ecc:	ddc00715 	stw	r23,28(sp)
  807ed0:	dd800615 	stw	r22,24(sp)
  807ed4:	dd400515 	stw	r21,20(sp)
  807ed8:	dcc00315 	stw	r19,12(sp)
  807edc:	dc800215 	stw	r18,8(sp)
  807ee0:	dc400115 	stw	r17,4(sp)
  807ee4:	dc000015 	stw	r16,0(sp)
  807ee8:	2500b804 	addi	r20,r4,736
  807eec:	a0002326 	beq	r20,zero,807f7c <_fwalk+0xbc>
  807ef0:	282b883a 	mov	r21,r5
  807ef4:	002f883a 	mov	r23,zero
  807ef8:	05800044 	movi	r22,1
  807efc:	04ffffc4 	movi	r19,-1
  807f00:	a4400117 	ldw	r17,4(r20)
  807f04:	a4800217 	ldw	r18,8(r20)
  807f08:	8c7fffc4 	addi	r17,r17,-1
  807f0c:	88000d16 	blt	r17,zero,807f44 <_fwalk+0x84>
  807f10:	94000304 	addi	r16,r18,12
  807f14:	94800384 	addi	r18,r18,14
  807f18:	8080000b 	ldhu	r2,0(r16)
  807f1c:	8c7fffc4 	addi	r17,r17,-1
  807f20:	813ffd04 	addi	r4,r16,-12
  807f24:	b080042e 	bgeu	r22,r2,807f38 <_fwalk+0x78>
  807f28:	9080000f 	ldh	r2,0(r18)
  807f2c:	14c00226 	beq	r2,r19,807f38 <_fwalk+0x78>
  807f30:	a83ee83a 	callr	r21
  807f34:	b8aeb03a 	or	r23,r23,r2
  807f38:	84001a04 	addi	r16,r16,104
  807f3c:	94801a04 	addi	r18,r18,104
  807f40:	8cfff51e 	bne	r17,r19,807f18 <__alt_data_end+0xff807f18>
  807f44:	a5000017 	ldw	r20,0(r20)
  807f48:	a03fed1e 	bne	r20,zero,807f00 <__alt_data_end+0xff807f00>
  807f4c:	b805883a 	mov	r2,r23
  807f50:	dfc00817 	ldw	ra,32(sp)
  807f54:	ddc00717 	ldw	r23,28(sp)
  807f58:	dd800617 	ldw	r22,24(sp)
  807f5c:	dd400517 	ldw	r21,20(sp)
  807f60:	dd000417 	ldw	r20,16(sp)
  807f64:	dcc00317 	ldw	r19,12(sp)
  807f68:	dc800217 	ldw	r18,8(sp)
  807f6c:	dc400117 	ldw	r17,4(sp)
  807f70:	dc000017 	ldw	r16,0(sp)
  807f74:	dec00904 	addi	sp,sp,36
  807f78:	f800283a 	ret
  807f7c:	002f883a 	mov	r23,zero
  807f80:	003ff206 	br	807f4c <__alt_data_end+0xff807f4c>

00807f84 <_fwalk_reent>:
  807f84:	defff704 	addi	sp,sp,-36
  807f88:	dd000415 	stw	r20,16(sp)
  807f8c:	dfc00815 	stw	ra,32(sp)
  807f90:	ddc00715 	stw	r23,28(sp)
  807f94:	dd800615 	stw	r22,24(sp)
  807f98:	dd400515 	stw	r21,20(sp)
  807f9c:	dcc00315 	stw	r19,12(sp)
  807fa0:	dc800215 	stw	r18,8(sp)
  807fa4:	dc400115 	stw	r17,4(sp)
  807fa8:	dc000015 	stw	r16,0(sp)
  807fac:	2500b804 	addi	r20,r4,736
  807fb0:	a0002326 	beq	r20,zero,808040 <_fwalk_reent+0xbc>
  807fb4:	282b883a 	mov	r21,r5
  807fb8:	2027883a 	mov	r19,r4
  807fbc:	002f883a 	mov	r23,zero
  807fc0:	05800044 	movi	r22,1
  807fc4:	04bfffc4 	movi	r18,-1
  807fc8:	a4400117 	ldw	r17,4(r20)
  807fcc:	a4000217 	ldw	r16,8(r20)
  807fd0:	8c7fffc4 	addi	r17,r17,-1
  807fd4:	88000c16 	blt	r17,zero,808008 <_fwalk_reent+0x84>
  807fd8:	84000304 	addi	r16,r16,12
  807fdc:	8080000b 	ldhu	r2,0(r16)
  807fe0:	8c7fffc4 	addi	r17,r17,-1
  807fe4:	817ffd04 	addi	r5,r16,-12
  807fe8:	b080052e 	bgeu	r22,r2,808000 <_fwalk_reent+0x7c>
  807fec:	8080008f 	ldh	r2,2(r16)
  807ff0:	9809883a 	mov	r4,r19
  807ff4:	14800226 	beq	r2,r18,808000 <_fwalk_reent+0x7c>
  807ff8:	a83ee83a 	callr	r21
  807ffc:	b8aeb03a 	or	r23,r23,r2
  808000:	84001a04 	addi	r16,r16,104
  808004:	8cbff51e 	bne	r17,r18,807fdc <__alt_data_end+0xff807fdc>
  808008:	a5000017 	ldw	r20,0(r20)
  80800c:	a03fee1e 	bne	r20,zero,807fc8 <__alt_data_end+0xff807fc8>
  808010:	b805883a 	mov	r2,r23
  808014:	dfc00817 	ldw	ra,32(sp)
  808018:	ddc00717 	ldw	r23,28(sp)
  80801c:	dd800617 	ldw	r22,24(sp)
  808020:	dd400517 	ldw	r21,20(sp)
  808024:	dd000417 	ldw	r20,16(sp)
  808028:	dcc00317 	ldw	r19,12(sp)
  80802c:	dc800217 	ldw	r18,8(sp)
  808030:	dc400117 	ldw	r17,4(sp)
  808034:	dc000017 	ldw	r16,0(sp)
  808038:	dec00904 	addi	sp,sp,36
  80803c:	f800283a 	ret
  808040:	002f883a 	mov	r23,zero
  808044:	003ff206 	br	808010 <__alt_data_end+0xff808010>

00808048 <_setlocale_r>:
  808048:	30001b26 	beq	r6,zero,8080b8 <_setlocale_r+0x70>
  80804c:	01402074 	movhi	r5,129
  808050:	defffe04 	addi	sp,sp,-8
  808054:	29445a04 	addi	r5,r5,4456
  808058:	3009883a 	mov	r4,r6
  80805c:	dc000015 	stw	r16,0(sp)
  808060:	dfc00115 	stw	ra,4(sp)
  808064:	3021883a 	mov	r16,r6
  808068:	080a0400 	call	80a040 <strcmp>
  80806c:	1000061e 	bne	r2,zero,808088 <_setlocale_r+0x40>
  808070:	00802074 	movhi	r2,129
  808074:	10845904 	addi	r2,r2,4452
  808078:	dfc00117 	ldw	ra,4(sp)
  80807c:	dc000017 	ldw	r16,0(sp)
  808080:	dec00204 	addi	sp,sp,8
  808084:	f800283a 	ret
  808088:	01402074 	movhi	r5,129
  80808c:	29445904 	addi	r5,r5,4452
  808090:	8009883a 	mov	r4,r16
  808094:	080a0400 	call	80a040 <strcmp>
  808098:	103ff526 	beq	r2,zero,808070 <__alt_data_end+0xff808070>
  80809c:	01402074 	movhi	r5,129
  8080a0:	29444404 	addi	r5,r5,4368
  8080a4:	8009883a 	mov	r4,r16
  8080a8:	080a0400 	call	80a040 <strcmp>
  8080ac:	103ff026 	beq	r2,zero,808070 <__alt_data_end+0xff808070>
  8080b0:	0005883a 	mov	r2,zero
  8080b4:	003ff006 	br	808078 <__alt_data_end+0xff808078>
  8080b8:	00802074 	movhi	r2,129
  8080bc:	10845904 	addi	r2,r2,4452
  8080c0:	f800283a 	ret

008080c4 <__locale_charset>:
  8080c4:	00802074 	movhi	r2,129
  8080c8:	1085ca04 	addi	r2,r2,5928
  8080cc:	f800283a 	ret

008080d0 <__locale_mb_cur_max>:
  8080d0:	00802074 	movhi	r2,129
  8080d4:	108b6604 	addi	r2,r2,11672
  8080d8:	10800017 	ldw	r2,0(r2)
  8080dc:	f800283a 	ret

008080e0 <__locale_msgcharset>:
  8080e0:	00802074 	movhi	r2,129
  8080e4:	1085c204 	addi	r2,r2,5896
  8080e8:	f800283a 	ret

008080ec <__locale_cjk_lang>:
  8080ec:	0005883a 	mov	r2,zero
  8080f0:	f800283a 	ret

008080f4 <_localeconv_r>:
  8080f4:	00802074 	movhi	r2,129
  8080f8:	1085d204 	addi	r2,r2,5960
  8080fc:	f800283a 	ret

00808100 <setlocale>:
  808100:	00802074 	movhi	r2,129
  808104:	108b6504 	addi	r2,r2,11668
  808108:	280d883a 	mov	r6,r5
  80810c:	200b883a 	mov	r5,r4
  808110:	11000017 	ldw	r4,0(r2)
  808114:	08080481 	jmpi	808048 <_setlocale_r>

00808118 <localeconv>:
  808118:	00802074 	movhi	r2,129
  80811c:	1085d204 	addi	r2,r2,5960
  808120:	f800283a 	ret

00808124 <__smakebuf_r>:
  808124:	2880030b 	ldhu	r2,12(r5)
  808128:	10c0008c 	andi	r3,r2,2
  80812c:	1800411e 	bne	r3,zero,808234 <__smakebuf_r+0x110>
  808130:	deffec04 	addi	sp,sp,-80
  808134:	dc000f15 	stw	r16,60(sp)
  808138:	2821883a 	mov	r16,r5
  80813c:	2940038f 	ldh	r5,14(r5)
  808140:	dc401015 	stw	r17,64(sp)
  808144:	dfc01315 	stw	ra,76(sp)
  808148:	dcc01215 	stw	r19,72(sp)
  80814c:	dc801115 	stw	r18,68(sp)
  808150:	2023883a 	mov	r17,r4
  808154:	28001c16 	blt	r5,zero,8081c8 <__smakebuf_r+0xa4>
  808158:	d80d883a 	mov	r6,sp
  80815c:	080bc800 	call	80bc80 <_fstat_r>
  808160:	10001816 	blt	r2,zero,8081c4 <__smakebuf_r+0xa0>
  808164:	d8800117 	ldw	r2,4(sp)
  808168:	00e00014 	movui	r3,32768
  80816c:	10bc000c 	andi	r2,r2,61440
  808170:	14c80020 	cmpeqi	r19,r2,8192
  808174:	10c03726 	beq	r2,r3,808254 <__smakebuf_r+0x130>
  808178:	80c0030b 	ldhu	r3,12(r16)
  80817c:	18c20014 	ori	r3,r3,2048
  808180:	80c0030d 	sth	r3,12(r16)
  808184:	00c80004 	movi	r3,8192
  808188:	10c0521e 	bne	r2,r3,8082d4 <__smakebuf_r+0x1b0>
  80818c:	8140038f 	ldh	r5,14(r16)
  808190:	8809883a 	mov	r4,r17
  808194:	080c1980 	call	80c198 <_isatty_r>
  808198:	10004c26 	beq	r2,zero,8082cc <__smakebuf_r+0x1a8>
  80819c:	8080030b 	ldhu	r2,12(r16)
  8081a0:	80c010c4 	addi	r3,r16,67
  8081a4:	80c00015 	stw	r3,0(r16)
  8081a8:	10800054 	ori	r2,r2,1
  8081ac:	8080030d 	sth	r2,12(r16)
  8081b0:	00800044 	movi	r2,1
  8081b4:	80c00415 	stw	r3,16(r16)
  8081b8:	80800515 	stw	r2,20(r16)
  8081bc:	04810004 	movi	r18,1024
  8081c0:	00000706 	br	8081e0 <__smakebuf_r+0xbc>
  8081c4:	8080030b 	ldhu	r2,12(r16)
  8081c8:	10c0200c 	andi	r3,r2,128
  8081cc:	18001f1e 	bne	r3,zero,80824c <__smakebuf_r+0x128>
  8081d0:	04810004 	movi	r18,1024
  8081d4:	10820014 	ori	r2,r2,2048
  8081d8:	8080030d 	sth	r2,12(r16)
  8081dc:	0027883a 	mov	r19,zero
  8081e0:	900b883a 	mov	r5,r18
  8081e4:	8809883a 	mov	r4,r17
  8081e8:	08082e00 	call	8082e0 <_malloc_r>
  8081ec:	10002c26 	beq	r2,zero,8082a0 <__smakebuf_r+0x17c>
  8081f0:	80c0030b 	ldhu	r3,12(r16)
  8081f4:	01002034 	movhi	r4,128
  8081f8:	211dbd04 	addi	r4,r4,30452
  8081fc:	89000f15 	stw	r4,60(r17)
  808200:	18c02014 	ori	r3,r3,128
  808204:	80c0030d 	sth	r3,12(r16)
  808208:	80800015 	stw	r2,0(r16)
  80820c:	80800415 	stw	r2,16(r16)
  808210:	84800515 	stw	r18,20(r16)
  808214:	98001a1e 	bne	r19,zero,808280 <__smakebuf_r+0x15c>
  808218:	dfc01317 	ldw	ra,76(sp)
  80821c:	dcc01217 	ldw	r19,72(sp)
  808220:	dc801117 	ldw	r18,68(sp)
  808224:	dc401017 	ldw	r17,64(sp)
  808228:	dc000f17 	ldw	r16,60(sp)
  80822c:	dec01404 	addi	sp,sp,80
  808230:	f800283a 	ret
  808234:	288010c4 	addi	r2,r5,67
  808238:	28800015 	stw	r2,0(r5)
  80823c:	28800415 	stw	r2,16(r5)
  808240:	00800044 	movi	r2,1
  808244:	28800515 	stw	r2,20(r5)
  808248:	f800283a 	ret
  80824c:	04801004 	movi	r18,64
  808250:	003fe006 	br	8081d4 <__alt_data_end+0xff8081d4>
  808254:	81000a17 	ldw	r4,40(r16)
  808258:	00c02074 	movhi	r3,129
  80825c:	18e7f704 	addi	r3,r3,-24612
  808260:	20ffc51e 	bne	r4,r3,808178 <__alt_data_end+0xff808178>
  808264:	8080030b 	ldhu	r2,12(r16)
  808268:	04810004 	movi	r18,1024
  80826c:	84801315 	stw	r18,76(r16)
  808270:	1484b03a 	or	r2,r2,r18
  808274:	8080030d 	sth	r2,12(r16)
  808278:	0027883a 	mov	r19,zero
  80827c:	003fd806 	br	8081e0 <__alt_data_end+0xff8081e0>
  808280:	8140038f 	ldh	r5,14(r16)
  808284:	8809883a 	mov	r4,r17
  808288:	080c1980 	call	80c198 <_isatty_r>
  80828c:	103fe226 	beq	r2,zero,808218 <__alt_data_end+0xff808218>
  808290:	8080030b 	ldhu	r2,12(r16)
  808294:	10800054 	ori	r2,r2,1
  808298:	8080030d 	sth	r2,12(r16)
  80829c:	003fde06 	br	808218 <__alt_data_end+0xff808218>
  8082a0:	8080030b 	ldhu	r2,12(r16)
  8082a4:	10c0800c 	andi	r3,r2,512
  8082a8:	183fdb1e 	bne	r3,zero,808218 <__alt_data_end+0xff808218>
  8082ac:	10800094 	ori	r2,r2,2
  8082b0:	80c010c4 	addi	r3,r16,67
  8082b4:	8080030d 	sth	r2,12(r16)
  8082b8:	00800044 	movi	r2,1
  8082bc:	80c00015 	stw	r3,0(r16)
  8082c0:	80c00415 	stw	r3,16(r16)
  8082c4:	80800515 	stw	r2,20(r16)
  8082c8:	003fd306 	br	808218 <__alt_data_end+0xff808218>
  8082cc:	04810004 	movi	r18,1024
  8082d0:	003fc306 	br	8081e0 <__alt_data_end+0xff8081e0>
  8082d4:	0027883a 	mov	r19,zero
  8082d8:	04810004 	movi	r18,1024
  8082dc:	003fc006 	br	8081e0 <__alt_data_end+0xff8081e0>

008082e0 <_malloc_r>:
  8082e0:	defff504 	addi	sp,sp,-44
  8082e4:	dc800315 	stw	r18,12(sp)
  8082e8:	dfc00a15 	stw	ra,40(sp)
  8082ec:	df000915 	stw	fp,36(sp)
  8082f0:	ddc00815 	stw	r23,32(sp)
  8082f4:	dd800715 	stw	r22,28(sp)
  8082f8:	dd400615 	stw	r21,24(sp)
  8082fc:	dd000515 	stw	r20,20(sp)
  808300:	dcc00415 	stw	r19,16(sp)
  808304:	dc400215 	stw	r17,8(sp)
  808308:	dc000115 	stw	r16,4(sp)
  80830c:	288002c4 	addi	r2,r5,11
  808310:	00c00584 	movi	r3,22
  808314:	2025883a 	mov	r18,r4
  808318:	18807f2e 	bgeu	r3,r2,808518 <_malloc_r+0x238>
  80831c:	047ffe04 	movi	r17,-8
  808320:	1462703a 	and	r17,r2,r17
  808324:	8800a316 	blt	r17,zero,8085b4 <_malloc_r+0x2d4>
  808328:	8940a236 	bltu	r17,r5,8085b4 <_malloc_r+0x2d4>
  80832c:	080ebd00 	call	80ebd0 <__malloc_lock>
  808330:	00807dc4 	movi	r2,503
  808334:	1441e92e 	bgeu	r2,r17,808adc <_malloc_r+0x7fc>
  808338:	8804d27a 	srli	r2,r17,9
  80833c:	1000a126 	beq	r2,zero,8085c4 <_malloc_r+0x2e4>
  808340:	00c00104 	movi	r3,4
  808344:	18811e36 	bltu	r3,r2,8087c0 <_malloc_r+0x4e0>
  808348:	8804d1ba 	srli	r2,r17,6
  80834c:	12000e44 	addi	r8,r2,57
  808350:	11c00e04 	addi	r7,r2,56
  808354:	4209883a 	add	r4,r8,r8
  808358:	04c02074 	movhi	r19,129
  80835c:	2109883a 	add	r4,r4,r4
  808360:	9cc5e004 	addi	r19,r19,6016
  808364:	2109883a 	add	r4,r4,r4
  808368:	9909883a 	add	r4,r19,r4
  80836c:	24000117 	ldw	r16,4(r4)
  808370:	213ffe04 	addi	r4,r4,-8
  808374:	24009726 	beq	r4,r16,8085d4 <_malloc_r+0x2f4>
  808378:	80800117 	ldw	r2,4(r16)
  80837c:	01bfff04 	movi	r6,-4
  808380:	014003c4 	movi	r5,15
  808384:	1184703a 	and	r2,r2,r6
  808388:	1447c83a 	sub	r3,r2,r17
  80838c:	28c00716 	blt	r5,r3,8083ac <_malloc_r+0xcc>
  808390:	1800920e 	bge	r3,zero,8085dc <_malloc_r+0x2fc>
  808394:	84000317 	ldw	r16,12(r16)
  808398:	24008e26 	beq	r4,r16,8085d4 <_malloc_r+0x2f4>
  80839c:	80800117 	ldw	r2,4(r16)
  8083a0:	1184703a 	and	r2,r2,r6
  8083a4:	1447c83a 	sub	r3,r2,r17
  8083a8:	28fff90e 	bge	r5,r3,808390 <__alt_data_end+0xff808390>
  8083ac:	3809883a 	mov	r4,r7
  8083b0:	01802074 	movhi	r6,129
  8083b4:	9c000417 	ldw	r16,16(r19)
  8083b8:	3185e004 	addi	r6,r6,6016
  8083bc:	32000204 	addi	r8,r6,8
  8083c0:	82013426 	beq	r16,r8,808894 <_malloc_r+0x5b4>
  8083c4:	80c00117 	ldw	r3,4(r16)
  8083c8:	00bfff04 	movi	r2,-4
  8083cc:	188e703a 	and	r7,r3,r2
  8083d0:	3c45c83a 	sub	r2,r7,r17
  8083d4:	00c003c4 	movi	r3,15
  8083d8:	18811f16 	blt	r3,r2,808858 <_malloc_r+0x578>
  8083dc:	32000515 	stw	r8,20(r6)
  8083e0:	32000415 	stw	r8,16(r6)
  8083e4:	10007f0e 	bge	r2,zero,8085e4 <_malloc_r+0x304>
  8083e8:	00807fc4 	movi	r2,511
  8083ec:	11c0fd36 	bltu	r2,r7,8087e4 <_malloc_r+0x504>
  8083f0:	3806d0fa 	srli	r3,r7,3
  8083f4:	01c00044 	movi	r7,1
  8083f8:	30800117 	ldw	r2,4(r6)
  8083fc:	19400044 	addi	r5,r3,1
  808400:	294b883a 	add	r5,r5,r5
  808404:	1807d0ba 	srai	r3,r3,2
  808408:	294b883a 	add	r5,r5,r5
  80840c:	294b883a 	add	r5,r5,r5
  808410:	298b883a 	add	r5,r5,r6
  808414:	38c6983a 	sll	r3,r7,r3
  808418:	29c00017 	ldw	r7,0(r5)
  80841c:	2a7ffe04 	addi	r9,r5,-8
  808420:	1886b03a 	or	r3,r3,r2
  808424:	82400315 	stw	r9,12(r16)
  808428:	81c00215 	stw	r7,8(r16)
  80842c:	30c00115 	stw	r3,4(r6)
  808430:	2c000015 	stw	r16,0(r5)
  808434:	3c000315 	stw	r16,12(r7)
  808438:	2005d0ba 	srai	r2,r4,2
  80843c:	01400044 	movi	r5,1
  808440:	288a983a 	sll	r5,r5,r2
  808444:	19406f36 	bltu	r3,r5,808604 <_malloc_r+0x324>
  808448:	28c4703a 	and	r2,r5,r3
  80844c:	10000a1e 	bne	r2,zero,808478 <_malloc_r+0x198>
  808450:	00bfff04 	movi	r2,-4
  808454:	294b883a 	add	r5,r5,r5
  808458:	2088703a 	and	r4,r4,r2
  80845c:	28c4703a 	and	r2,r5,r3
  808460:	21000104 	addi	r4,r4,4
  808464:	1000041e 	bne	r2,zero,808478 <_malloc_r+0x198>
  808468:	294b883a 	add	r5,r5,r5
  80846c:	28c4703a 	and	r2,r5,r3
  808470:	21000104 	addi	r4,r4,4
  808474:	103ffc26 	beq	r2,zero,808468 <__alt_data_end+0xff808468>
  808478:	02bfff04 	movi	r10,-4
  80847c:	024003c4 	movi	r9,15
  808480:	21800044 	addi	r6,r4,1
  808484:	318d883a 	add	r6,r6,r6
  808488:	318d883a 	add	r6,r6,r6
  80848c:	318d883a 	add	r6,r6,r6
  808490:	998d883a 	add	r6,r19,r6
  808494:	333ffe04 	addi	r12,r6,-8
  808498:	2017883a 	mov	r11,r4
  80849c:	31800104 	addi	r6,r6,4
  8084a0:	34000017 	ldw	r16,0(r6)
  8084a4:	31fffd04 	addi	r7,r6,-12
  8084a8:	81c0041e 	bne	r16,r7,8084bc <_malloc_r+0x1dc>
  8084ac:	0000fb06 	br	80889c <_malloc_r+0x5bc>
  8084b0:	1801030e 	bge	r3,zero,8088c0 <_malloc_r+0x5e0>
  8084b4:	84000317 	ldw	r16,12(r16)
  8084b8:	81c0f826 	beq	r16,r7,80889c <_malloc_r+0x5bc>
  8084bc:	80800117 	ldw	r2,4(r16)
  8084c0:	1284703a 	and	r2,r2,r10
  8084c4:	1447c83a 	sub	r3,r2,r17
  8084c8:	48fff90e 	bge	r9,r3,8084b0 <__alt_data_end+0xff8084b0>
  8084cc:	80800317 	ldw	r2,12(r16)
  8084d0:	81000217 	ldw	r4,8(r16)
  8084d4:	89400054 	ori	r5,r17,1
  8084d8:	81400115 	stw	r5,4(r16)
  8084dc:	20800315 	stw	r2,12(r4)
  8084e0:	11000215 	stw	r4,8(r2)
  8084e4:	8463883a 	add	r17,r16,r17
  8084e8:	9c400515 	stw	r17,20(r19)
  8084ec:	9c400415 	stw	r17,16(r19)
  8084f0:	18800054 	ori	r2,r3,1
  8084f4:	88800115 	stw	r2,4(r17)
  8084f8:	8a000315 	stw	r8,12(r17)
  8084fc:	8a000215 	stw	r8,8(r17)
  808500:	88e3883a 	add	r17,r17,r3
  808504:	88c00015 	stw	r3,0(r17)
  808508:	9009883a 	mov	r4,r18
  80850c:	080ebf40 	call	80ebf4 <__malloc_unlock>
  808510:	80800204 	addi	r2,r16,8
  808514:	00001b06 	br	808584 <_malloc_r+0x2a4>
  808518:	04400404 	movi	r17,16
  80851c:	89402536 	bltu	r17,r5,8085b4 <_malloc_r+0x2d4>
  808520:	080ebd00 	call	80ebd0 <__malloc_lock>
  808524:	00800184 	movi	r2,6
  808528:	01000084 	movi	r4,2
  80852c:	04c02074 	movhi	r19,129
  808530:	1085883a 	add	r2,r2,r2
  808534:	9cc5e004 	addi	r19,r19,6016
  808538:	1085883a 	add	r2,r2,r2
  80853c:	9885883a 	add	r2,r19,r2
  808540:	14000117 	ldw	r16,4(r2)
  808544:	10fffe04 	addi	r3,r2,-8
  808548:	80c0d926 	beq	r16,r3,8088b0 <_malloc_r+0x5d0>
  80854c:	80c00117 	ldw	r3,4(r16)
  808550:	81000317 	ldw	r4,12(r16)
  808554:	00bfff04 	movi	r2,-4
  808558:	1884703a 	and	r2,r3,r2
  80855c:	81400217 	ldw	r5,8(r16)
  808560:	8085883a 	add	r2,r16,r2
  808564:	10c00117 	ldw	r3,4(r2)
  808568:	29000315 	stw	r4,12(r5)
  80856c:	21400215 	stw	r5,8(r4)
  808570:	18c00054 	ori	r3,r3,1
  808574:	10c00115 	stw	r3,4(r2)
  808578:	9009883a 	mov	r4,r18
  80857c:	080ebf40 	call	80ebf4 <__malloc_unlock>
  808580:	80800204 	addi	r2,r16,8
  808584:	dfc00a17 	ldw	ra,40(sp)
  808588:	df000917 	ldw	fp,36(sp)
  80858c:	ddc00817 	ldw	r23,32(sp)
  808590:	dd800717 	ldw	r22,28(sp)
  808594:	dd400617 	ldw	r21,24(sp)
  808598:	dd000517 	ldw	r20,20(sp)
  80859c:	dcc00417 	ldw	r19,16(sp)
  8085a0:	dc800317 	ldw	r18,12(sp)
  8085a4:	dc400217 	ldw	r17,8(sp)
  8085a8:	dc000117 	ldw	r16,4(sp)
  8085ac:	dec00b04 	addi	sp,sp,44
  8085b0:	f800283a 	ret
  8085b4:	00800304 	movi	r2,12
  8085b8:	90800015 	stw	r2,0(r18)
  8085bc:	0005883a 	mov	r2,zero
  8085c0:	003ff006 	br	808584 <__alt_data_end+0xff808584>
  8085c4:	01002004 	movi	r4,128
  8085c8:	02001004 	movi	r8,64
  8085cc:	01c00fc4 	movi	r7,63
  8085d0:	003f6106 	br	808358 <__alt_data_end+0xff808358>
  8085d4:	4009883a 	mov	r4,r8
  8085d8:	003f7506 	br	8083b0 <__alt_data_end+0xff8083b0>
  8085dc:	81000317 	ldw	r4,12(r16)
  8085e0:	003fde06 	br	80855c <__alt_data_end+0xff80855c>
  8085e4:	81c5883a 	add	r2,r16,r7
  8085e8:	11400117 	ldw	r5,4(r2)
  8085ec:	9009883a 	mov	r4,r18
  8085f0:	29400054 	ori	r5,r5,1
  8085f4:	11400115 	stw	r5,4(r2)
  8085f8:	080ebf40 	call	80ebf4 <__malloc_unlock>
  8085fc:	80800204 	addi	r2,r16,8
  808600:	003fe006 	br	808584 <__alt_data_end+0xff808584>
  808604:	9c000217 	ldw	r16,8(r19)
  808608:	00bfff04 	movi	r2,-4
  80860c:	85800117 	ldw	r22,4(r16)
  808610:	b0ac703a 	and	r22,r22,r2
  808614:	b4400336 	bltu	r22,r17,808624 <_malloc_r+0x344>
  808618:	b445c83a 	sub	r2,r22,r17
  80861c:	00c003c4 	movi	r3,15
  808620:	18805d16 	blt	r3,r2,808798 <_malloc_r+0x4b8>
  808624:	05c02074 	movhi	r23,129
  808628:	00802074 	movhi	r2,129
  80862c:	10923404 	addi	r2,r2,18640
  808630:	bdcb6704 	addi	r23,r23,11676
  808634:	15400017 	ldw	r21,0(r2)
  808638:	b8c00017 	ldw	r3,0(r23)
  80863c:	00bfffc4 	movi	r2,-1
  808640:	858d883a 	add	r6,r16,r22
  808644:	8d6b883a 	add	r21,r17,r21
  808648:	1880ea26 	beq	r3,r2,8089f4 <_malloc_r+0x714>
  80864c:	ad4403c4 	addi	r21,r21,4111
  808650:	00bc0004 	movi	r2,-4096
  808654:	a8aa703a 	and	r21,r21,r2
  808658:	a80b883a 	mov	r5,r21
  80865c:	9009883a 	mov	r4,r18
  808660:	d9800015 	stw	r6,0(sp)
  808664:	0809eb00 	call	809eb0 <_sbrk_r>
  808668:	1029883a 	mov	r20,r2
  80866c:	00bfffc4 	movi	r2,-1
  808670:	d9800017 	ldw	r6,0(sp)
  808674:	a080e826 	beq	r20,r2,808a18 <_malloc_r+0x738>
  808678:	a180a636 	bltu	r20,r6,808914 <_malloc_r+0x634>
  80867c:	07002074 	movhi	fp,129
  808680:	e7123d04 	addi	fp,fp,18676
  808684:	e0800017 	ldw	r2,0(fp)
  808688:	a887883a 	add	r3,r21,r2
  80868c:	e0c00015 	stw	r3,0(fp)
  808690:	3500e626 	beq	r6,r20,808a2c <_malloc_r+0x74c>
  808694:	b9000017 	ldw	r4,0(r23)
  808698:	00bfffc4 	movi	r2,-1
  80869c:	2080ee26 	beq	r4,r2,808a58 <_malloc_r+0x778>
  8086a0:	a185c83a 	sub	r2,r20,r6
  8086a4:	10c5883a 	add	r2,r2,r3
  8086a8:	e0800015 	stw	r2,0(fp)
  8086ac:	a0c001cc 	andi	r3,r20,7
  8086b0:	1800bc26 	beq	r3,zero,8089a4 <_malloc_r+0x6c4>
  8086b4:	a0e9c83a 	sub	r20,r20,r3
  8086b8:	00840204 	movi	r2,4104
  8086bc:	a5000204 	addi	r20,r20,8
  8086c0:	10c7c83a 	sub	r3,r2,r3
  8086c4:	a545883a 	add	r2,r20,r21
  8086c8:	1083ffcc 	andi	r2,r2,4095
  8086cc:	18abc83a 	sub	r21,r3,r2
  8086d0:	a80b883a 	mov	r5,r21
  8086d4:	9009883a 	mov	r4,r18
  8086d8:	0809eb00 	call	809eb0 <_sbrk_r>
  8086dc:	00ffffc4 	movi	r3,-1
  8086e0:	10c0e126 	beq	r2,r3,808a68 <_malloc_r+0x788>
  8086e4:	1505c83a 	sub	r2,r2,r20
  8086e8:	1545883a 	add	r2,r2,r21
  8086ec:	10800054 	ori	r2,r2,1
  8086f0:	e0c00017 	ldw	r3,0(fp)
  8086f4:	9d000215 	stw	r20,8(r19)
  8086f8:	a0800115 	stw	r2,4(r20)
  8086fc:	a8c7883a 	add	r3,r21,r3
  808700:	e0c00015 	stw	r3,0(fp)
  808704:	84c00e26 	beq	r16,r19,808740 <_malloc_r+0x460>
  808708:	018003c4 	movi	r6,15
  80870c:	3580a72e 	bgeu	r6,r22,8089ac <_malloc_r+0x6cc>
  808710:	81400117 	ldw	r5,4(r16)
  808714:	013ffe04 	movi	r4,-8
  808718:	b0bffd04 	addi	r2,r22,-12
  80871c:	1104703a 	and	r2,r2,r4
  808720:	2900004c 	andi	r4,r5,1
  808724:	2088b03a 	or	r4,r4,r2
  808728:	81000115 	stw	r4,4(r16)
  80872c:	01400144 	movi	r5,5
  808730:	8089883a 	add	r4,r16,r2
  808734:	21400115 	stw	r5,4(r4)
  808738:	21400215 	stw	r5,8(r4)
  80873c:	3080cd36 	bltu	r6,r2,808a74 <_malloc_r+0x794>
  808740:	00802074 	movhi	r2,129
  808744:	10923304 	addi	r2,r2,18636
  808748:	11000017 	ldw	r4,0(r2)
  80874c:	20c0012e 	bgeu	r4,r3,808754 <_malloc_r+0x474>
  808750:	10c00015 	stw	r3,0(r2)
  808754:	00802074 	movhi	r2,129
  808758:	10923204 	addi	r2,r2,18632
  80875c:	11000017 	ldw	r4,0(r2)
  808760:	9c000217 	ldw	r16,8(r19)
  808764:	20c0012e 	bgeu	r4,r3,80876c <_malloc_r+0x48c>
  808768:	10c00015 	stw	r3,0(r2)
  80876c:	80c00117 	ldw	r3,4(r16)
  808770:	00bfff04 	movi	r2,-4
  808774:	1886703a 	and	r3,r3,r2
  808778:	1c45c83a 	sub	r2,r3,r17
  80877c:	1c400236 	bltu	r3,r17,808788 <_malloc_r+0x4a8>
  808780:	00c003c4 	movi	r3,15
  808784:	18800416 	blt	r3,r2,808798 <_malloc_r+0x4b8>
  808788:	9009883a 	mov	r4,r18
  80878c:	080ebf40 	call	80ebf4 <__malloc_unlock>
  808790:	0005883a 	mov	r2,zero
  808794:	003f7b06 	br	808584 <__alt_data_end+0xff808584>
  808798:	88c00054 	ori	r3,r17,1
  80879c:	80c00115 	stw	r3,4(r16)
  8087a0:	8463883a 	add	r17,r16,r17
  8087a4:	10800054 	ori	r2,r2,1
  8087a8:	9c400215 	stw	r17,8(r19)
  8087ac:	88800115 	stw	r2,4(r17)
  8087b0:	9009883a 	mov	r4,r18
  8087b4:	080ebf40 	call	80ebf4 <__malloc_unlock>
  8087b8:	80800204 	addi	r2,r16,8
  8087bc:	003f7106 	br	808584 <__alt_data_end+0xff808584>
  8087c0:	00c00504 	movi	r3,20
  8087c4:	18804a2e 	bgeu	r3,r2,8088f0 <_malloc_r+0x610>
  8087c8:	00c01504 	movi	r3,84
  8087cc:	18806e36 	bltu	r3,r2,808988 <_malloc_r+0x6a8>
  8087d0:	8804d33a 	srli	r2,r17,12
  8087d4:	12001bc4 	addi	r8,r2,111
  8087d8:	11c01b84 	addi	r7,r2,110
  8087dc:	4209883a 	add	r4,r8,r8
  8087e0:	003edd06 	br	808358 <__alt_data_end+0xff808358>
  8087e4:	3804d27a 	srli	r2,r7,9
  8087e8:	00c00104 	movi	r3,4
  8087ec:	1880442e 	bgeu	r3,r2,808900 <_malloc_r+0x620>
  8087f0:	00c00504 	movi	r3,20
  8087f4:	18808136 	bltu	r3,r2,8089fc <_malloc_r+0x71c>
  8087f8:	11401704 	addi	r5,r2,92
  8087fc:	10c016c4 	addi	r3,r2,91
  808800:	294b883a 	add	r5,r5,r5
  808804:	294b883a 	add	r5,r5,r5
  808808:	294b883a 	add	r5,r5,r5
  80880c:	994b883a 	add	r5,r19,r5
  808810:	28800017 	ldw	r2,0(r5)
  808814:	01802074 	movhi	r6,129
  808818:	297ffe04 	addi	r5,r5,-8
  80881c:	3185e004 	addi	r6,r6,6016
  808820:	28806526 	beq	r5,r2,8089b8 <_malloc_r+0x6d8>
  808824:	01bfff04 	movi	r6,-4
  808828:	10c00117 	ldw	r3,4(r2)
  80882c:	1986703a 	and	r3,r3,r6
  808830:	38c0022e 	bgeu	r7,r3,80883c <_malloc_r+0x55c>
  808834:	10800217 	ldw	r2,8(r2)
  808838:	28bffb1e 	bne	r5,r2,808828 <__alt_data_end+0xff808828>
  80883c:	11400317 	ldw	r5,12(r2)
  808840:	98c00117 	ldw	r3,4(r19)
  808844:	81400315 	stw	r5,12(r16)
  808848:	80800215 	stw	r2,8(r16)
  80884c:	2c000215 	stw	r16,8(r5)
  808850:	14000315 	stw	r16,12(r2)
  808854:	003ef806 	br	808438 <__alt_data_end+0xff808438>
  808858:	88c00054 	ori	r3,r17,1
  80885c:	80c00115 	stw	r3,4(r16)
  808860:	8463883a 	add	r17,r16,r17
  808864:	34400515 	stw	r17,20(r6)
  808868:	34400415 	stw	r17,16(r6)
  80886c:	10c00054 	ori	r3,r2,1
  808870:	8a000315 	stw	r8,12(r17)
  808874:	8a000215 	stw	r8,8(r17)
  808878:	88c00115 	stw	r3,4(r17)
  80887c:	88a3883a 	add	r17,r17,r2
  808880:	88800015 	stw	r2,0(r17)
  808884:	9009883a 	mov	r4,r18
  808888:	080ebf40 	call	80ebf4 <__malloc_unlock>
  80888c:	80800204 	addi	r2,r16,8
  808890:	003f3c06 	br	808584 <__alt_data_end+0xff808584>
  808894:	30c00117 	ldw	r3,4(r6)
  808898:	003ee706 	br	808438 <__alt_data_end+0xff808438>
  80889c:	5ac00044 	addi	r11,r11,1
  8088a0:	588000cc 	andi	r2,r11,3
  8088a4:	31800204 	addi	r6,r6,8
  8088a8:	103efd1e 	bne	r2,zero,8084a0 <__alt_data_end+0xff8084a0>
  8088ac:	00002406 	br	808940 <_malloc_r+0x660>
  8088b0:	14000317 	ldw	r16,12(r2)
  8088b4:	143f251e 	bne	r2,r16,80854c <__alt_data_end+0xff80854c>
  8088b8:	21000084 	addi	r4,r4,2
  8088bc:	003ebc06 	br	8083b0 <__alt_data_end+0xff8083b0>
  8088c0:	8085883a 	add	r2,r16,r2
  8088c4:	10c00117 	ldw	r3,4(r2)
  8088c8:	81000317 	ldw	r4,12(r16)
  8088cc:	81400217 	ldw	r5,8(r16)
  8088d0:	18c00054 	ori	r3,r3,1
  8088d4:	10c00115 	stw	r3,4(r2)
  8088d8:	29000315 	stw	r4,12(r5)
  8088dc:	21400215 	stw	r5,8(r4)
  8088e0:	9009883a 	mov	r4,r18
  8088e4:	080ebf40 	call	80ebf4 <__malloc_unlock>
  8088e8:	80800204 	addi	r2,r16,8
  8088ec:	003f2506 	br	808584 <__alt_data_end+0xff808584>
  8088f0:	12001704 	addi	r8,r2,92
  8088f4:	11c016c4 	addi	r7,r2,91
  8088f8:	4209883a 	add	r4,r8,r8
  8088fc:	003e9606 	br	808358 <__alt_data_end+0xff808358>
  808900:	3804d1ba 	srli	r2,r7,6
  808904:	11400e44 	addi	r5,r2,57
  808908:	10c00e04 	addi	r3,r2,56
  80890c:	294b883a 	add	r5,r5,r5
  808910:	003fbc06 	br	808804 <__alt_data_end+0xff808804>
  808914:	84ff5926 	beq	r16,r19,80867c <__alt_data_end+0xff80867c>
  808918:	00802074 	movhi	r2,129
  80891c:	1085e004 	addi	r2,r2,6016
  808920:	14000217 	ldw	r16,8(r2)
  808924:	00bfff04 	movi	r2,-4
  808928:	80c00117 	ldw	r3,4(r16)
  80892c:	1886703a 	and	r3,r3,r2
  808930:	003f9106 	br	808778 <__alt_data_end+0xff808778>
  808934:	60800217 	ldw	r2,8(r12)
  808938:	213fffc4 	addi	r4,r4,-1
  80893c:	1300651e 	bne	r2,r12,808ad4 <_malloc_r+0x7f4>
  808940:	208000cc 	andi	r2,r4,3
  808944:	633ffe04 	addi	r12,r12,-8
  808948:	103ffa1e 	bne	r2,zero,808934 <__alt_data_end+0xff808934>
  80894c:	98800117 	ldw	r2,4(r19)
  808950:	0146303a 	nor	r3,zero,r5
  808954:	1884703a 	and	r2,r3,r2
  808958:	98800115 	stw	r2,4(r19)
  80895c:	294b883a 	add	r5,r5,r5
  808960:	117f2836 	bltu	r2,r5,808604 <__alt_data_end+0xff808604>
  808964:	283f2726 	beq	r5,zero,808604 <__alt_data_end+0xff808604>
  808968:	2886703a 	and	r3,r5,r2
  80896c:	5809883a 	mov	r4,r11
  808970:	183ec31e 	bne	r3,zero,808480 <__alt_data_end+0xff808480>
  808974:	294b883a 	add	r5,r5,r5
  808978:	2886703a 	and	r3,r5,r2
  80897c:	21000104 	addi	r4,r4,4
  808980:	183ffc26 	beq	r3,zero,808974 <__alt_data_end+0xff808974>
  808984:	003ebe06 	br	808480 <__alt_data_end+0xff808480>
  808988:	00c05504 	movi	r3,340
  80898c:	18801236 	bltu	r3,r2,8089d8 <_malloc_r+0x6f8>
  808990:	8804d3fa 	srli	r2,r17,15
  808994:	12001e04 	addi	r8,r2,120
  808998:	11c01dc4 	addi	r7,r2,119
  80899c:	4209883a 	add	r4,r8,r8
  8089a0:	003e6d06 	br	808358 <__alt_data_end+0xff808358>
  8089a4:	00c40004 	movi	r3,4096
  8089a8:	003f4606 	br	8086c4 <__alt_data_end+0xff8086c4>
  8089ac:	00800044 	movi	r2,1
  8089b0:	a0800115 	stw	r2,4(r20)
  8089b4:	003f7406 	br	808788 <__alt_data_end+0xff808788>
  8089b8:	1805d0ba 	srai	r2,r3,2
  8089bc:	01c00044 	movi	r7,1
  8089c0:	30c00117 	ldw	r3,4(r6)
  8089c4:	388e983a 	sll	r7,r7,r2
  8089c8:	2805883a 	mov	r2,r5
  8089cc:	38c6b03a 	or	r3,r7,r3
  8089d0:	30c00115 	stw	r3,4(r6)
  8089d4:	003f9b06 	br	808844 <__alt_data_end+0xff808844>
  8089d8:	00c15504 	movi	r3,1364
  8089dc:	18801a36 	bltu	r3,r2,808a48 <_malloc_r+0x768>
  8089e0:	8804d4ba 	srli	r2,r17,18
  8089e4:	12001f44 	addi	r8,r2,125
  8089e8:	11c01f04 	addi	r7,r2,124
  8089ec:	4209883a 	add	r4,r8,r8
  8089f0:	003e5906 	br	808358 <__alt_data_end+0xff808358>
  8089f4:	ad400404 	addi	r21,r21,16
  8089f8:	003f1706 	br	808658 <__alt_data_end+0xff808658>
  8089fc:	00c01504 	movi	r3,84
  808a00:	18802336 	bltu	r3,r2,808a90 <_malloc_r+0x7b0>
  808a04:	3804d33a 	srli	r2,r7,12
  808a08:	11401bc4 	addi	r5,r2,111
  808a0c:	10c01b84 	addi	r3,r2,110
  808a10:	294b883a 	add	r5,r5,r5
  808a14:	003f7b06 	br	808804 <__alt_data_end+0xff808804>
  808a18:	9c000217 	ldw	r16,8(r19)
  808a1c:	00bfff04 	movi	r2,-4
  808a20:	80c00117 	ldw	r3,4(r16)
  808a24:	1886703a 	and	r3,r3,r2
  808a28:	003f5306 	br	808778 <__alt_data_end+0xff808778>
  808a2c:	3083ffcc 	andi	r2,r6,4095
  808a30:	103f181e 	bne	r2,zero,808694 <__alt_data_end+0xff808694>
  808a34:	99000217 	ldw	r4,8(r19)
  808a38:	b545883a 	add	r2,r22,r21
  808a3c:	10800054 	ori	r2,r2,1
  808a40:	20800115 	stw	r2,4(r4)
  808a44:	003f3e06 	br	808740 <__alt_data_end+0xff808740>
  808a48:	01003f84 	movi	r4,254
  808a4c:	02001fc4 	movi	r8,127
  808a50:	01c01f84 	movi	r7,126
  808a54:	003e4006 	br	808358 <__alt_data_end+0xff808358>
  808a58:	00802074 	movhi	r2,129
  808a5c:	108b6704 	addi	r2,r2,11676
  808a60:	15000015 	stw	r20,0(r2)
  808a64:	003f1106 	br	8086ac <__alt_data_end+0xff8086ac>
  808a68:	00800044 	movi	r2,1
  808a6c:	002b883a 	mov	r21,zero
  808a70:	003f1f06 	br	8086f0 <__alt_data_end+0xff8086f0>
  808a74:	81400204 	addi	r5,r16,8
  808a78:	9009883a 	mov	r4,r18
  808a7c:	0807bb00 	call	807bb0 <_free_r>
  808a80:	00802074 	movhi	r2,129
  808a84:	10923d04 	addi	r2,r2,18676
  808a88:	10c00017 	ldw	r3,0(r2)
  808a8c:	003f2c06 	br	808740 <__alt_data_end+0xff808740>
  808a90:	00c05504 	movi	r3,340
  808a94:	18800536 	bltu	r3,r2,808aac <_malloc_r+0x7cc>
  808a98:	3804d3fa 	srli	r2,r7,15
  808a9c:	11401e04 	addi	r5,r2,120
  808aa0:	10c01dc4 	addi	r3,r2,119
  808aa4:	294b883a 	add	r5,r5,r5
  808aa8:	003f5606 	br	808804 <__alt_data_end+0xff808804>
  808aac:	00c15504 	movi	r3,1364
  808ab0:	18800536 	bltu	r3,r2,808ac8 <_malloc_r+0x7e8>
  808ab4:	3804d4ba 	srli	r2,r7,18
  808ab8:	11401f44 	addi	r5,r2,125
  808abc:	10c01f04 	addi	r3,r2,124
  808ac0:	294b883a 	add	r5,r5,r5
  808ac4:	003f4f06 	br	808804 <__alt_data_end+0xff808804>
  808ac8:	01403f84 	movi	r5,254
  808acc:	00c01f84 	movi	r3,126
  808ad0:	003f4c06 	br	808804 <__alt_data_end+0xff808804>
  808ad4:	98800117 	ldw	r2,4(r19)
  808ad8:	003fa006 	br	80895c <__alt_data_end+0xff80895c>
  808adc:	8808d0fa 	srli	r4,r17,3
  808ae0:	20800044 	addi	r2,r4,1
  808ae4:	1085883a 	add	r2,r2,r2
  808ae8:	003e9006 	br	80852c <__alt_data_end+0xff80852c>

00808aec <memchr>:
  808aec:	208000cc 	andi	r2,r4,3
  808af0:	280f883a 	mov	r7,r5
  808af4:	10003426 	beq	r2,zero,808bc8 <memchr+0xdc>
  808af8:	30bfffc4 	addi	r2,r6,-1
  808afc:	30001a26 	beq	r6,zero,808b68 <memchr+0x7c>
  808b00:	20c00003 	ldbu	r3,0(r4)
  808b04:	29803fcc 	andi	r6,r5,255
  808b08:	30c0051e 	bne	r6,r3,808b20 <memchr+0x34>
  808b0c:	00001806 	br	808b70 <memchr+0x84>
  808b10:	10001526 	beq	r2,zero,808b68 <memchr+0x7c>
  808b14:	20c00003 	ldbu	r3,0(r4)
  808b18:	10bfffc4 	addi	r2,r2,-1
  808b1c:	30c01426 	beq	r6,r3,808b70 <memchr+0x84>
  808b20:	21000044 	addi	r4,r4,1
  808b24:	20c000cc 	andi	r3,r4,3
  808b28:	183ff91e 	bne	r3,zero,808b10 <__alt_data_end+0xff808b10>
  808b2c:	020000c4 	movi	r8,3
  808b30:	40801136 	bltu	r8,r2,808b78 <memchr+0x8c>
  808b34:	10000c26 	beq	r2,zero,808b68 <memchr+0x7c>
  808b38:	20c00003 	ldbu	r3,0(r4)
  808b3c:	29403fcc 	andi	r5,r5,255
  808b40:	28c00b26 	beq	r5,r3,808b70 <memchr+0x84>
  808b44:	20c00044 	addi	r3,r4,1
  808b48:	39803fcc 	andi	r6,r7,255
  808b4c:	2089883a 	add	r4,r4,r2
  808b50:	00000306 	br	808b60 <memchr+0x74>
  808b54:	18c00044 	addi	r3,r3,1
  808b58:	197fffc3 	ldbu	r5,-1(r3)
  808b5c:	31400526 	beq	r6,r5,808b74 <memchr+0x88>
  808b60:	1805883a 	mov	r2,r3
  808b64:	20fffb1e 	bne	r4,r3,808b54 <__alt_data_end+0xff808b54>
  808b68:	0005883a 	mov	r2,zero
  808b6c:	f800283a 	ret
  808b70:	2005883a 	mov	r2,r4
  808b74:	f800283a 	ret
  808b78:	28c03fcc 	andi	r3,r5,255
  808b7c:	1812923a 	slli	r9,r3,8
  808b80:	02ffbff4 	movhi	r11,65279
  808b84:	02a02074 	movhi	r10,32897
  808b88:	48d2b03a 	or	r9,r9,r3
  808b8c:	4806943a 	slli	r3,r9,16
  808b90:	5affbfc4 	addi	r11,r11,-257
  808b94:	52a02004 	addi	r10,r10,-32640
  808b98:	48d2b03a 	or	r9,r9,r3
  808b9c:	20c00017 	ldw	r3,0(r4)
  808ba0:	48c6f03a 	xor	r3,r9,r3
  808ba4:	1acd883a 	add	r6,r3,r11
  808ba8:	00c6303a 	nor	r3,zero,r3
  808bac:	30c6703a 	and	r3,r6,r3
  808bb0:	1a86703a 	and	r3,r3,r10
  808bb4:	183fe01e 	bne	r3,zero,808b38 <__alt_data_end+0xff808b38>
  808bb8:	10bfff04 	addi	r2,r2,-4
  808bbc:	21000104 	addi	r4,r4,4
  808bc0:	40bff636 	bltu	r8,r2,808b9c <__alt_data_end+0xff808b9c>
  808bc4:	003fdb06 	br	808b34 <__alt_data_end+0xff808b34>
  808bc8:	3005883a 	mov	r2,r6
  808bcc:	003fd706 	br	808b2c <__alt_data_end+0xff808b2c>

00808bd0 <memcpy>:
  808bd0:	defffd04 	addi	sp,sp,-12
  808bd4:	dfc00215 	stw	ra,8(sp)
  808bd8:	dc400115 	stw	r17,4(sp)
  808bdc:	dc000015 	stw	r16,0(sp)
  808be0:	00c003c4 	movi	r3,15
  808be4:	2005883a 	mov	r2,r4
  808be8:	1980452e 	bgeu	r3,r6,808d00 <memcpy+0x130>
  808bec:	2906b03a 	or	r3,r5,r4
  808bf0:	18c000cc 	andi	r3,r3,3
  808bf4:	1800441e 	bne	r3,zero,808d08 <memcpy+0x138>
  808bf8:	347ffc04 	addi	r17,r6,-16
  808bfc:	8822d13a 	srli	r17,r17,4
  808c00:	28c00104 	addi	r3,r5,4
  808c04:	23400104 	addi	r13,r4,4
  808c08:	8820913a 	slli	r16,r17,4
  808c0c:	2b000204 	addi	r12,r5,8
  808c10:	22c00204 	addi	r11,r4,8
  808c14:	84000504 	addi	r16,r16,20
  808c18:	2a800304 	addi	r10,r5,12
  808c1c:	22400304 	addi	r9,r4,12
  808c20:	2c21883a 	add	r16,r5,r16
  808c24:	2811883a 	mov	r8,r5
  808c28:	200f883a 	mov	r7,r4
  808c2c:	41000017 	ldw	r4,0(r8)
  808c30:	1fc00017 	ldw	ra,0(r3)
  808c34:	63c00017 	ldw	r15,0(r12)
  808c38:	39000015 	stw	r4,0(r7)
  808c3c:	53800017 	ldw	r14,0(r10)
  808c40:	6fc00015 	stw	ra,0(r13)
  808c44:	5bc00015 	stw	r15,0(r11)
  808c48:	4b800015 	stw	r14,0(r9)
  808c4c:	18c00404 	addi	r3,r3,16
  808c50:	39c00404 	addi	r7,r7,16
  808c54:	42000404 	addi	r8,r8,16
  808c58:	6b400404 	addi	r13,r13,16
  808c5c:	63000404 	addi	r12,r12,16
  808c60:	5ac00404 	addi	r11,r11,16
  808c64:	52800404 	addi	r10,r10,16
  808c68:	4a400404 	addi	r9,r9,16
  808c6c:	1c3fef1e 	bne	r3,r16,808c2c <__alt_data_end+0xff808c2c>
  808c70:	89c00044 	addi	r7,r17,1
  808c74:	380e913a 	slli	r7,r7,4
  808c78:	310003cc 	andi	r4,r6,15
  808c7c:	02c000c4 	movi	r11,3
  808c80:	11c7883a 	add	r3,r2,r7
  808c84:	29cb883a 	add	r5,r5,r7
  808c88:	5900212e 	bgeu	r11,r4,808d10 <memcpy+0x140>
  808c8c:	1813883a 	mov	r9,r3
  808c90:	2811883a 	mov	r8,r5
  808c94:	200f883a 	mov	r7,r4
  808c98:	42800017 	ldw	r10,0(r8)
  808c9c:	4a400104 	addi	r9,r9,4
  808ca0:	39ffff04 	addi	r7,r7,-4
  808ca4:	4abfff15 	stw	r10,-4(r9)
  808ca8:	42000104 	addi	r8,r8,4
  808cac:	59fffa36 	bltu	r11,r7,808c98 <__alt_data_end+0xff808c98>
  808cb0:	213fff04 	addi	r4,r4,-4
  808cb4:	2008d0ba 	srli	r4,r4,2
  808cb8:	318000cc 	andi	r6,r6,3
  808cbc:	21000044 	addi	r4,r4,1
  808cc0:	2109883a 	add	r4,r4,r4
  808cc4:	2109883a 	add	r4,r4,r4
  808cc8:	1907883a 	add	r3,r3,r4
  808ccc:	290b883a 	add	r5,r5,r4
  808cd0:	30000626 	beq	r6,zero,808cec <memcpy+0x11c>
  808cd4:	198d883a 	add	r6,r3,r6
  808cd8:	29c00003 	ldbu	r7,0(r5)
  808cdc:	18c00044 	addi	r3,r3,1
  808ce0:	29400044 	addi	r5,r5,1
  808ce4:	19ffffc5 	stb	r7,-1(r3)
  808ce8:	19bffb1e 	bne	r3,r6,808cd8 <__alt_data_end+0xff808cd8>
  808cec:	dfc00217 	ldw	ra,8(sp)
  808cf0:	dc400117 	ldw	r17,4(sp)
  808cf4:	dc000017 	ldw	r16,0(sp)
  808cf8:	dec00304 	addi	sp,sp,12
  808cfc:	f800283a 	ret
  808d00:	2007883a 	mov	r3,r4
  808d04:	003ff206 	br	808cd0 <__alt_data_end+0xff808cd0>
  808d08:	2007883a 	mov	r3,r4
  808d0c:	003ff106 	br	808cd4 <__alt_data_end+0xff808cd4>
  808d10:	200d883a 	mov	r6,r4
  808d14:	003fee06 	br	808cd0 <__alt_data_end+0xff808cd0>

00808d18 <memset>:
  808d18:	20c000cc 	andi	r3,r4,3
  808d1c:	2005883a 	mov	r2,r4
  808d20:	18004426 	beq	r3,zero,808e34 <memset+0x11c>
  808d24:	31ffffc4 	addi	r7,r6,-1
  808d28:	30004026 	beq	r6,zero,808e2c <memset+0x114>
  808d2c:	2813883a 	mov	r9,r5
  808d30:	200d883a 	mov	r6,r4
  808d34:	2007883a 	mov	r3,r4
  808d38:	00000406 	br	808d4c <memset+0x34>
  808d3c:	3a3fffc4 	addi	r8,r7,-1
  808d40:	31800044 	addi	r6,r6,1
  808d44:	38003926 	beq	r7,zero,808e2c <memset+0x114>
  808d48:	400f883a 	mov	r7,r8
  808d4c:	18c00044 	addi	r3,r3,1
  808d50:	32400005 	stb	r9,0(r6)
  808d54:	1a0000cc 	andi	r8,r3,3
  808d58:	403ff81e 	bne	r8,zero,808d3c <__alt_data_end+0xff808d3c>
  808d5c:	010000c4 	movi	r4,3
  808d60:	21c02d2e 	bgeu	r4,r7,808e18 <memset+0x100>
  808d64:	29003fcc 	andi	r4,r5,255
  808d68:	200c923a 	slli	r6,r4,8
  808d6c:	3108b03a 	or	r4,r6,r4
  808d70:	200c943a 	slli	r6,r4,16
  808d74:	218cb03a 	or	r6,r4,r6
  808d78:	010003c4 	movi	r4,15
  808d7c:	21c0182e 	bgeu	r4,r7,808de0 <memset+0xc8>
  808d80:	3b3ffc04 	addi	r12,r7,-16
  808d84:	6018d13a 	srli	r12,r12,4
  808d88:	1a000104 	addi	r8,r3,4
  808d8c:	1ac00204 	addi	r11,r3,8
  808d90:	6008913a 	slli	r4,r12,4
  808d94:	1a800304 	addi	r10,r3,12
  808d98:	1813883a 	mov	r9,r3
  808d9c:	21000504 	addi	r4,r4,20
  808da0:	1909883a 	add	r4,r3,r4
  808da4:	49800015 	stw	r6,0(r9)
  808da8:	41800015 	stw	r6,0(r8)
  808dac:	59800015 	stw	r6,0(r11)
  808db0:	51800015 	stw	r6,0(r10)
  808db4:	42000404 	addi	r8,r8,16
  808db8:	4a400404 	addi	r9,r9,16
  808dbc:	5ac00404 	addi	r11,r11,16
  808dc0:	52800404 	addi	r10,r10,16
  808dc4:	413ff71e 	bne	r8,r4,808da4 <__alt_data_end+0xff808da4>
  808dc8:	63000044 	addi	r12,r12,1
  808dcc:	6018913a 	slli	r12,r12,4
  808dd0:	39c003cc 	andi	r7,r7,15
  808dd4:	010000c4 	movi	r4,3
  808dd8:	1b07883a 	add	r3,r3,r12
  808ddc:	21c00e2e 	bgeu	r4,r7,808e18 <memset+0x100>
  808de0:	1813883a 	mov	r9,r3
  808de4:	3811883a 	mov	r8,r7
  808de8:	010000c4 	movi	r4,3
  808dec:	49800015 	stw	r6,0(r9)
  808df0:	423fff04 	addi	r8,r8,-4
  808df4:	4a400104 	addi	r9,r9,4
  808df8:	223ffc36 	bltu	r4,r8,808dec <__alt_data_end+0xff808dec>
  808dfc:	393fff04 	addi	r4,r7,-4
  808e00:	2008d0ba 	srli	r4,r4,2
  808e04:	39c000cc 	andi	r7,r7,3
  808e08:	21000044 	addi	r4,r4,1
  808e0c:	2109883a 	add	r4,r4,r4
  808e10:	2109883a 	add	r4,r4,r4
  808e14:	1907883a 	add	r3,r3,r4
  808e18:	38000526 	beq	r7,zero,808e30 <memset+0x118>
  808e1c:	19cf883a 	add	r7,r3,r7
  808e20:	19400005 	stb	r5,0(r3)
  808e24:	18c00044 	addi	r3,r3,1
  808e28:	38fffd1e 	bne	r7,r3,808e20 <__alt_data_end+0xff808e20>
  808e2c:	f800283a 	ret
  808e30:	f800283a 	ret
  808e34:	2007883a 	mov	r3,r4
  808e38:	300f883a 	mov	r7,r6
  808e3c:	003fc706 	br	808d5c <__alt_data_end+0xff808d5c>

00808e40 <_Balloc>:
  808e40:	20801317 	ldw	r2,76(r4)
  808e44:	defffc04 	addi	sp,sp,-16
  808e48:	dc400115 	stw	r17,4(sp)
  808e4c:	dc000015 	stw	r16,0(sp)
  808e50:	dfc00315 	stw	ra,12(sp)
  808e54:	dc800215 	stw	r18,8(sp)
  808e58:	2023883a 	mov	r17,r4
  808e5c:	2821883a 	mov	r16,r5
  808e60:	10000f26 	beq	r2,zero,808ea0 <_Balloc+0x60>
  808e64:	8407883a 	add	r3,r16,r16
  808e68:	18c7883a 	add	r3,r3,r3
  808e6c:	10c7883a 	add	r3,r2,r3
  808e70:	18800017 	ldw	r2,0(r3)
  808e74:	10001126 	beq	r2,zero,808ebc <_Balloc+0x7c>
  808e78:	11000017 	ldw	r4,0(r2)
  808e7c:	19000015 	stw	r4,0(r3)
  808e80:	10000415 	stw	zero,16(r2)
  808e84:	10000315 	stw	zero,12(r2)
  808e88:	dfc00317 	ldw	ra,12(sp)
  808e8c:	dc800217 	ldw	r18,8(sp)
  808e90:	dc400117 	ldw	r17,4(sp)
  808e94:	dc000017 	ldw	r16,0(sp)
  808e98:	dec00404 	addi	sp,sp,16
  808e9c:	f800283a 	ret
  808ea0:	01800844 	movi	r6,33
  808ea4:	01400104 	movi	r5,4
  808ea8:	080b8b00 	call	80b8b0 <_calloc_r>
  808eac:	88801315 	stw	r2,76(r17)
  808eb0:	103fec1e 	bne	r2,zero,808e64 <__alt_data_end+0xff808e64>
  808eb4:	0005883a 	mov	r2,zero
  808eb8:	003ff306 	br	808e88 <__alt_data_end+0xff808e88>
  808ebc:	01400044 	movi	r5,1
  808ec0:	2c24983a 	sll	r18,r5,r16
  808ec4:	8809883a 	mov	r4,r17
  808ec8:	91800144 	addi	r6,r18,5
  808ecc:	318d883a 	add	r6,r6,r6
  808ed0:	318d883a 	add	r6,r6,r6
  808ed4:	080b8b00 	call	80b8b0 <_calloc_r>
  808ed8:	103ff626 	beq	r2,zero,808eb4 <__alt_data_end+0xff808eb4>
  808edc:	14000115 	stw	r16,4(r2)
  808ee0:	14800215 	stw	r18,8(r2)
  808ee4:	003fe606 	br	808e80 <__alt_data_end+0xff808e80>

00808ee8 <_Bfree>:
  808ee8:	28000826 	beq	r5,zero,808f0c <_Bfree+0x24>
  808eec:	28c00117 	ldw	r3,4(r5)
  808ef0:	20801317 	ldw	r2,76(r4)
  808ef4:	18c7883a 	add	r3,r3,r3
  808ef8:	18c7883a 	add	r3,r3,r3
  808efc:	10c5883a 	add	r2,r2,r3
  808f00:	10c00017 	ldw	r3,0(r2)
  808f04:	28c00015 	stw	r3,0(r5)
  808f08:	11400015 	stw	r5,0(r2)
  808f0c:	f800283a 	ret

00808f10 <__multadd>:
  808f10:	defffa04 	addi	sp,sp,-24
  808f14:	dc800315 	stw	r18,12(sp)
  808f18:	dc400215 	stw	r17,8(sp)
  808f1c:	dc000115 	stw	r16,4(sp)
  808f20:	2823883a 	mov	r17,r5
  808f24:	2c000417 	ldw	r16,16(r5)
  808f28:	dfc00515 	stw	ra,20(sp)
  808f2c:	dcc00415 	stw	r19,16(sp)
  808f30:	2025883a 	mov	r18,r4
  808f34:	29400504 	addi	r5,r5,20
  808f38:	0011883a 	mov	r8,zero
  808f3c:	28c00017 	ldw	r3,0(r5)
  808f40:	29400104 	addi	r5,r5,4
  808f44:	42000044 	addi	r8,r8,1
  808f48:	18bfffcc 	andi	r2,r3,65535
  808f4c:	1185383a 	mul	r2,r2,r6
  808f50:	1806d43a 	srli	r3,r3,16
  808f54:	11cf883a 	add	r7,r2,r7
  808f58:	3808d43a 	srli	r4,r7,16
  808f5c:	1987383a 	mul	r3,r3,r6
  808f60:	38bfffcc 	andi	r2,r7,65535
  808f64:	1907883a 	add	r3,r3,r4
  808f68:	1808943a 	slli	r4,r3,16
  808f6c:	180ed43a 	srli	r7,r3,16
  808f70:	2085883a 	add	r2,r4,r2
  808f74:	28bfff15 	stw	r2,-4(r5)
  808f78:	443ff016 	blt	r8,r16,808f3c <__alt_data_end+0xff808f3c>
  808f7c:	38000926 	beq	r7,zero,808fa4 <__multadd+0x94>
  808f80:	88800217 	ldw	r2,8(r17)
  808f84:	80800f0e 	bge	r16,r2,808fc4 <__multadd+0xb4>
  808f88:	80800144 	addi	r2,r16,5
  808f8c:	1085883a 	add	r2,r2,r2
  808f90:	1085883a 	add	r2,r2,r2
  808f94:	8885883a 	add	r2,r17,r2
  808f98:	11c00015 	stw	r7,0(r2)
  808f9c:	84000044 	addi	r16,r16,1
  808fa0:	8c000415 	stw	r16,16(r17)
  808fa4:	8805883a 	mov	r2,r17
  808fa8:	dfc00517 	ldw	ra,20(sp)
  808fac:	dcc00417 	ldw	r19,16(sp)
  808fb0:	dc800317 	ldw	r18,12(sp)
  808fb4:	dc400217 	ldw	r17,8(sp)
  808fb8:	dc000117 	ldw	r16,4(sp)
  808fbc:	dec00604 	addi	sp,sp,24
  808fc0:	f800283a 	ret
  808fc4:	89400117 	ldw	r5,4(r17)
  808fc8:	9009883a 	mov	r4,r18
  808fcc:	d9c00015 	stw	r7,0(sp)
  808fd0:	29400044 	addi	r5,r5,1
  808fd4:	0808e400 	call	808e40 <_Balloc>
  808fd8:	89800417 	ldw	r6,16(r17)
  808fdc:	89400304 	addi	r5,r17,12
  808fe0:	11000304 	addi	r4,r2,12
  808fe4:	31800084 	addi	r6,r6,2
  808fe8:	318d883a 	add	r6,r6,r6
  808fec:	318d883a 	add	r6,r6,r6
  808ff0:	1027883a 	mov	r19,r2
  808ff4:	0808bd00 	call	808bd0 <memcpy>
  808ff8:	d9c00017 	ldw	r7,0(sp)
  808ffc:	88000a26 	beq	r17,zero,809028 <__multadd+0x118>
  809000:	88c00117 	ldw	r3,4(r17)
  809004:	90801317 	ldw	r2,76(r18)
  809008:	18c7883a 	add	r3,r3,r3
  80900c:	18c7883a 	add	r3,r3,r3
  809010:	10c5883a 	add	r2,r2,r3
  809014:	10c00017 	ldw	r3,0(r2)
  809018:	88c00015 	stw	r3,0(r17)
  80901c:	14400015 	stw	r17,0(r2)
  809020:	9823883a 	mov	r17,r19
  809024:	003fd806 	br	808f88 <__alt_data_end+0xff808f88>
  809028:	9823883a 	mov	r17,r19
  80902c:	003fd606 	br	808f88 <__alt_data_end+0xff808f88>

00809030 <__s2b>:
  809030:	defff904 	addi	sp,sp,-28
  809034:	dc400115 	stw	r17,4(sp)
  809038:	dc000015 	stw	r16,0(sp)
  80903c:	2023883a 	mov	r17,r4
  809040:	2821883a 	mov	r16,r5
  809044:	39000204 	addi	r4,r7,8
  809048:	01400244 	movi	r5,9
  80904c:	dcc00315 	stw	r19,12(sp)
  809050:	dc800215 	stw	r18,8(sp)
  809054:	dfc00615 	stw	ra,24(sp)
  809058:	dd400515 	stw	r21,20(sp)
  80905c:	dd000415 	stw	r20,16(sp)
  809060:	3825883a 	mov	r18,r7
  809064:	3027883a 	mov	r19,r6
  809068:	080d75c0 	call	80d75c <__divsi3>
  80906c:	00c00044 	movi	r3,1
  809070:	000b883a 	mov	r5,zero
  809074:	1880030e 	bge	r3,r2,809084 <__s2b+0x54>
  809078:	18c7883a 	add	r3,r3,r3
  80907c:	29400044 	addi	r5,r5,1
  809080:	18bffd16 	blt	r3,r2,809078 <__alt_data_end+0xff809078>
  809084:	8809883a 	mov	r4,r17
  809088:	0808e400 	call	808e40 <_Balloc>
  80908c:	d8c00717 	ldw	r3,28(sp)
  809090:	10c00515 	stw	r3,20(r2)
  809094:	00c00044 	movi	r3,1
  809098:	10c00415 	stw	r3,16(r2)
  80909c:	00c00244 	movi	r3,9
  8090a0:	1cc0210e 	bge	r3,r19,809128 <__s2b+0xf8>
  8090a4:	80eb883a 	add	r21,r16,r3
  8090a8:	a829883a 	mov	r20,r21
  8090ac:	84e1883a 	add	r16,r16,r19
  8090b0:	a1c00007 	ldb	r7,0(r20)
  8090b4:	01800284 	movi	r6,10
  8090b8:	a5000044 	addi	r20,r20,1
  8090bc:	100b883a 	mov	r5,r2
  8090c0:	39fff404 	addi	r7,r7,-48
  8090c4:	8809883a 	mov	r4,r17
  8090c8:	0808f100 	call	808f10 <__multadd>
  8090cc:	a43ff81e 	bne	r20,r16,8090b0 <__alt_data_end+0xff8090b0>
  8090d0:	ace1883a 	add	r16,r21,r19
  8090d4:	843ffe04 	addi	r16,r16,-8
  8090d8:	9c800a0e 	bge	r19,r18,809104 <__s2b+0xd4>
  8090dc:	94e5c83a 	sub	r18,r18,r19
  8090e0:	84a5883a 	add	r18,r16,r18
  8090e4:	81c00007 	ldb	r7,0(r16)
  8090e8:	01800284 	movi	r6,10
  8090ec:	84000044 	addi	r16,r16,1
  8090f0:	100b883a 	mov	r5,r2
  8090f4:	39fff404 	addi	r7,r7,-48
  8090f8:	8809883a 	mov	r4,r17
  8090fc:	0808f100 	call	808f10 <__multadd>
  809100:	84bff81e 	bne	r16,r18,8090e4 <__alt_data_end+0xff8090e4>
  809104:	dfc00617 	ldw	ra,24(sp)
  809108:	dd400517 	ldw	r21,20(sp)
  80910c:	dd000417 	ldw	r20,16(sp)
  809110:	dcc00317 	ldw	r19,12(sp)
  809114:	dc800217 	ldw	r18,8(sp)
  809118:	dc400117 	ldw	r17,4(sp)
  80911c:	dc000017 	ldw	r16,0(sp)
  809120:	dec00704 	addi	sp,sp,28
  809124:	f800283a 	ret
  809128:	84000284 	addi	r16,r16,10
  80912c:	1827883a 	mov	r19,r3
  809130:	003fe906 	br	8090d8 <__alt_data_end+0xff8090d8>

00809134 <__hi0bits>:
  809134:	20bfffec 	andhi	r2,r4,65535
  809138:	1000141e 	bne	r2,zero,80918c <__hi0bits+0x58>
  80913c:	2008943a 	slli	r4,r4,16
  809140:	00800404 	movi	r2,16
  809144:	20ffc02c 	andhi	r3,r4,65280
  809148:	1800021e 	bne	r3,zero,809154 <__hi0bits+0x20>
  80914c:	2008923a 	slli	r4,r4,8
  809150:	10800204 	addi	r2,r2,8
  809154:	20fc002c 	andhi	r3,r4,61440
  809158:	1800021e 	bne	r3,zero,809164 <__hi0bits+0x30>
  80915c:	2008913a 	slli	r4,r4,4
  809160:	10800104 	addi	r2,r2,4
  809164:	20f0002c 	andhi	r3,r4,49152
  809168:	1800031e 	bne	r3,zero,809178 <__hi0bits+0x44>
  80916c:	2109883a 	add	r4,r4,r4
  809170:	10800084 	addi	r2,r2,2
  809174:	2109883a 	add	r4,r4,r4
  809178:	20000316 	blt	r4,zero,809188 <__hi0bits+0x54>
  80917c:	2110002c 	andhi	r4,r4,16384
  809180:	2000041e 	bne	r4,zero,809194 <__hi0bits+0x60>
  809184:	00800804 	movi	r2,32
  809188:	f800283a 	ret
  80918c:	0005883a 	mov	r2,zero
  809190:	003fec06 	br	809144 <__alt_data_end+0xff809144>
  809194:	10800044 	addi	r2,r2,1
  809198:	f800283a 	ret

0080919c <__lo0bits>:
  80919c:	20c00017 	ldw	r3,0(r4)
  8091a0:	188001cc 	andi	r2,r3,7
  8091a4:	10000826 	beq	r2,zero,8091c8 <__lo0bits+0x2c>
  8091a8:	1880004c 	andi	r2,r3,1
  8091ac:	1000211e 	bne	r2,zero,809234 <__lo0bits+0x98>
  8091b0:	1880008c 	andi	r2,r3,2
  8091b4:	1000211e 	bne	r2,zero,80923c <__lo0bits+0xa0>
  8091b8:	1806d0ba 	srli	r3,r3,2
  8091bc:	00800084 	movi	r2,2
  8091c0:	20c00015 	stw	r3,0(r4)
  8091c4:	f800283a 	ret
  8091c8:	18bfffcc 	andi	r2,r3,65535
  8091cc:	10001326 	beq	r2,zero,80921c <__lo0bits+0x80>
  8091d0:	0005883a 	mov	r2,zero
  8091d4:	19403fcc 	andi	r5,r3,255
  8091d8:	2800021e 	bne	r5,zero,8091e4 <__lo0bits+0x48>
  8091dc:	1806d23a 	srli	r3,r3,8
  8091e0:	10800204 	addi	r2,r2,8
  8091e4:	194003cc 	andi	r5,r3,15
  8091e8:	2800021e 	bne	r5,zero,8091f4 <__lo0bits+0x58>
  8091ec:	1806d13a 	srli	r3,r3,4
  8091f0:	10800104 	addi	r2,r2,4
  8091f4:	194000cc 	andi	r5,r3,3
  8091f8:	2800021e 	bne	r5,zero,809204 <__lo0bits+0x68>
  8091fc:	1806d0ba 	srli	r3,r3,2
  809200:	10800084 	addi	r2,r2,2
  809204:	1940004c 	andi	r5,r3,1
  809208:	2800081e 	bne	r5,zero,80922c <__lo0bits+0x90>
  80920c:	1806d07a 	srli	r3,r3,1
  809210:	1800051e 	bne	r3,zero,809228 <__lo0bits+0x8c>
  809214:	00800804 	movi	r2,32
  809218:	f800283a 	ret
  80921c:	1806d43a 	srli	r3,r3,16
  809220:	00800404 	movi	r2,16
  809224:	003feb06 	br	8091d4 <__alt_data_end+0xff8091d4>
  809228:	10800044 	addi	r2,r2,1
  80922c:	20c00015 	stw	r3,0(r4)
  809230:	f800283a 	ret
  809234:	0005883a 	mov	r2,zero
  809238:	f800283a 	ret
  80923c:	1806d07a 	srli	r3,r3,1
  809240:	00800044 	movi	r2,1
  809244:	20c00015 	stw	r3,0(r4)
  809248:	f800283a 	ret

0080924c <__i2b>:
  80924c:	defffd04 	addi	sp,sp,-12
  809250:	dc000015 	stw	r16,0(sp)
  809254:	04000044 	movi	r16,1
  809258:	dc400115 	stw	r17,4(sp)
  80925c:	2823883a 	mov	r17,r5
  809260:	800b883a 	mov	r5,r16
  809264:	dfc00215 	stw	ra,8(sp)
  809268:	0808e400 	call	808e40 <_Balloc>
  80926c:	14400515 	stw	r17,20(r2)
  809270:	14000415 	stw	r16,16(r2)
  809274:	dfc00217 	ldw	ra,8(sp)
  809278:	dc400117 	ldw	r17,4(sp)
  80927c:	dc000017 	ldw	r16,0(sp)
  809280:	dec00304 	addi	sp,sp,12
  809284:	f800283a 	ret

00809288 <__multiply>:
  809288:	defffa04 	addi	sp,sp,-24
  80928c:	dcc00315 	stw	r19,12(sp)
  809290:	dc800215 	stw	r18,8(sp)
  809294:	34c00417 	ldw	r19,16(r6)
  809298:	2c800417 	ldw	r18,16(r5)
  80929c:	dd000415 	stw	r20,16(sp)
  8092a0:	dc400115 	stw	r17,4(sp)
  8092a4:	dfc00515 	stw	ra,20(sp)
  8092a8:	dc000015 	stw	r16,0(sp)
  8092ac:	2829883a 	mov	r20,r5
  8092b0:	3023883a 	mov	r17,r6
  8092b4:	94c0050e 	bge	r18,r19,8092cc <__multiply+0x44>
  8092b8:	9007883a 	mov	r3,r18
  8092bc:	3029883a 	mov	r20,r6
  8092c0:	9825883a 	mov	r18,r19
  8092c4:	2823883a 	mov	r17,r5
  8092c8:	1827883a 	mov	r19,r3
  8092cc:	a0800217 	ldw	r2,8(r20)
  8092d0:	94e1883a 	add	r16,r18,r19
  8092d4:	a1400117 	ldw	r5,4(r20)
  8092d8:	1400010e 	bge	r2,r16,8092e0 <__multiply+0x58>
  8092dc:	29400044 	addi	r5,r5,1
  8092e0:	0808e400 	call	808e40 <_Balloc>
  8092e4:	8415883a 	add	r10,r16,r16
  8092e8:	12c00504 	addi	r11,r2,20
  8092ec:	5295883a 	add	r10,r10,r10
  8092f0:	5a95883a 	add	r10,r11,r10
  8092f4:	5807883a 	mov	r3,r11
  8092f8:	5a80032e 	bgeu	r11,r10,809308 <__multiply+0x80>
  8092fc:	18000015 	stw	zero,0(r3)
  809300:	18c00104 	addi	r3,r3,4
  809304:	1abffd36 	bltu	r3,r10,8092fc <__alt_data_end+0xff8092fc>
  809308:	9ce7883a 	add	r19,r19,r19
  80930c:	94a5883a 	add	r18,r18,r18
  809310:	89800504 	addi	r6,r17,20
  809314:	9ce7883a 	add	r19,r19,r19
  809318:	a3400504 	addi	r13,r20,20
  80931c:	94a5883a 	add	r18,r18,r18
  809320:	34d9883a 	add	r12,r6,r19
  809324:	6c93883a 	add	r9,r13,r18
  809328:	3300422e 	bgeu	r6,r12,809434 <__multiply+0x1ac>
  80932c:	37c00017 	ldw	ra,0(r6)
  809330:	fbffffcc 	andi	r15,ra,65535
  809334:	78001b26 	beq	r15,zero,8093a4 <__multiply+0x11c>
  809338:	5811883a 	mov	r8,r11
  80933c:	681d883a 	mov	r14,r13
  809340:	000f883a 	mov	r7,zero
  809344:	71000017 	ldw	r4,0(r14)
  809348:	40c00017 	ldw	r3,0(r8)
  80934c:	73800104 	addi	r14,r14,4
  809350:	217fffcc 	andi	r5,r4,65535
  809354:	2bcb383a 	mul	r5,r5,r15
  809358:	2008d43a 	srli	r4,r4,16
  80935c:	1c7fffcc 	andi	r17,r3,65535
  809360:	2c4b883a 	add	r5,r5,r17
  809364:	29cb883a 	add	r5,r5,r7
  809368:	23c9383a 	mul	r4,r4,r15
  80936c:	1806d43a 	srli	r3,r3,16
  809370:	280ed43a 	srli	r7,r5,16
  809374:	297fffcc 	andi	r5,r5,65535
  809378:	20c7883a 	add	r3,r4,r3
  80937c:	19c7883a 	add	r3,r3,r7
  809380:	1808943a 	slli	r4,r3,16
  809384:	4023883a 	mov	r17,r8
  809388:	180ed43a 	srli	r7,r3,16
  80938c:	214ab03a 	or	r5,r4,r5
  809390:	41400015 	stw	r5,0(r8)
  809394:	42000104 	addi	r8,r8,4
  809398:	727fea36 	bltu	r14,r9,809344 <__alt_data_end+0xff809344>
  80939c:	89c00115 	stw	r7,4(r17)
  8093a0:	37c00017 	ldw	ra,0(r6)
  8093a4:	f83ed43a 	srli	ra,ra,16
  8093a8:	f8001f26 	beq	ra,zero,809428 <__multiply+0x1a0>
  8093ac:	58c00017 	ldw	r3,0(r11)
  8093b0:	681d883a 	mov	r14,r13
  8093b4:	581f883a 	mov	r15,r11
  8093b8:	1811883a 	mov	r8,r3
  8093bc:	5825883a 	mov	r18,r11
  8093c0:	000f883a 	mov	r7,zero
  8093c4:	00000106 	br	8093cc <__multiply+0x144>
  8093c8:	8825883a 	mov	r18,r17
  8093cc:	7140000b 	ldhu	r5,0(r14)
  8093d0:	4010d43a 	srli	r8,r8,16
  8093d4:	193fffcc 	andi	r4,r3,65535
  8093d8:	2fcb383a 	mul	r5,r5,ra
  8093dc:	7bc00104 	addi	r15,r15,4
  8093e0:	73800104 	addi	r14,r14,4
  8093e4:	2a0b883a 	add	r5,r5,r8
  8093e8:	29cb883a 	add	r5,r5,r7
  8093ec:	2806943a 	slli	r3,r5,16
  8093f0:	94400104 	addi	r17,r18,4
  8093f4:	280ad43a 	srli	r5,r5,16
  8093f8:	1908b03a 	or	r4,r3,r4
  8093fc:	793fff15 	stw	r4,-4(r15)
  809400:	70ffff17 	ldw	r3,-4(r14)
  809404:	8a000017 	ldw	r8,0(r17)
  809408:	1806d43a 	srli	r3,r3,16
  80940c:	413fffcc 	andi	r4,r8,65535
  809410:	1fc7383a 	mul	r3,r3,ra
  809414:	1907883a 	add	r3,r3,r4
  809418:	1947883a 	add	r3,r3,r5
  80941c:	180ed43a 	srli	r7,r3,16
  809420:	727fe936 	bltu	r14,r9,8093c8 <__alt_data_end+0xff8093c8>
  809424:	90c00115 	stw	r3,4(r18)
  809428:	31800104 	addi	r6,r6,4
  80942c:	5ac00104 	addi	r11,r11,4
  809430:	333fbe36 	bltu	r6,r12,80932c <__alt_data_end+0xff80932c>
  809434:	0400090e 	bge	zero,r16,80945c <__multiply+0x1d4>
  809438:	50ffff17 	ldw	r3,-4(r10)
  80943c:	52bfff04 	addi	r10,r10,-4
  809440:	18000326 	beq	r3,zero,809450 <__multiply+0x1c8>
  809444:	00000506 	br	80945c <__multiply+0x1d4>
  809448:	50c00017 	ldw	r3,0(r10)
  80944c:	1800031e 	bne	r3,zero,80945c <__multiply+0x1d4>
  809450:	843fffc4 	addi	r16,r16,-1
  809454:	52bfff04 	addi	r10,r10,-4
  809458:	803ffb1e 	bne	r16,zero,809448 <__alt_data_end+0xff809448>
  80945c:	14000415 	stw	r16,16(r2)
  809460:	dfc00517 	ldw	ra,20(sp)
  809464:	dd000417 	ldw	r20,16(sp)
  809468:	dcc00317 	ldw	r19,12(sp)
  80946c:	dc800217 	ldw	r18,8(sp)
  809470:	dc400117 	ldw	r17,4(sp)
  809474:	dc000017 	ldw	r16,0(sp)
  809478:	dec00604 	addi	sp,sp,24
  80947c:	f800283a 	ret

00809480 <__pow5mult>:
  809480:	defffa04 	addi	sp,sp,-24
  809484:	dcc00315 	stw	r19,12(sp)
  809488:	dc000015 	stw	r16,0(sp)
  80948c:	dfc00515 	stw	ra,20(sp)
  809490:	dd000415 	stw	r20,16(sp)
  809494:	dc800215 	stw	r18,8(sp)
  809498:	dc400115 	stw	r17,4(sp)
  80949c:	308000cc 	andi	r2,r6,3
  8094a0:	3021883a 	mov	r16,r6
  8094a4:	2027883a 	mov	r19,r4
  8094a8:	10002f1e 	bne	r2,zero,809568 <__pow5mult+0xe8>
  8094ac:	2825883a 	mov	r18,r5
  8094b0:	8021d0ba 	srai	r16,r16,2
  8094b4:	80001a26 	beq	r16,zero,809520 <__pow5mult+0xa0>
  8094b8:	9c401217 	ldw	r17,72(r19)
  8094bc:	8800061e 	bne	r17,zero,8094d8 <__pow5mult+0x58>
  8094c0:	00003406 	br	809594 <__pow5mult+0x114>
  8094c4:	8021d07a 	srai	r16,r16,1
  8094c8:	80001526 	beq	r16,zero,809520 <__pow5mult+0xa0>
  8094cc:	88800017 	ldw	r2,0(r17)
  8094d0:	10001c26 	beq	r2,zero,809544 <__pow5mult+0xc4>
  8094d4:	1023883a 	mov	r17,r2
  8094d8:	8080004c 	andi	r2,r16,1
  8094dc:	103ff926 	beq	r2,zero,8094c4 <__alt_data_end+0xff8094c4>
  8094e0:	880d883a 	mov	r6,r17
  8094e4:	900b883a 	mov	r5,r18
  8094e8:	9809883a 	mov	r4,r19
  8094ec:	08092880 	call	809288 <__multiply>
  8094f0:	90001b26 	beq	r18,zero,809560 <__pow5mult+0xe0>
  8094f4:	91000117 	ldw	r4,4(r18)
  8094f8:	98c01317 	ldw	r3,76(r19)
  8094fc:	8021d07a 	srai	r16,r16,1
  809500:	2109883a 	add	r4,r4,r4
  809504:	2109883a 	add	r4,r4,r4
  809508:	1907883a 	add	r3,r3,r4
  80950c:	19000017 	ldw	r4,0(r3)
  809510:	91000015 	stw	r4,0(r18)
  809514:	1c800015 	stw	r18,0(r3)
  809518:	1025883a 	mov	r18,r2
  80951c:	803feb1e 	bne	r16,zero,8094cc <__alt_data_end+0xff8094cc>
  809520:	9005883a 	mov	r2,r18
  809524:	dfc00517 	ldw	ra,20(sp)
  809528:	dd000417 	ldw	r20,16(sp)
  80952c:	dcc00317 	ldw	r19,12(sp)
  809530:	dc800217 	ldw	r18,8(sp)
  809534:	dc400117 	ldw	r17,4(sp)
  809538:	dc000017 	ldw	r16,0(sp)
  80953c:	dec00604 	addi	sp,sp,24
  809540:	f800283a 	ret
  809544:	880d883a 	mov	r6,r17
  809548:	880b883a 	mov	r5,r17
  80954c:	9809883a 	mov	r4,r19
  809550:	08092880 	call	809288 <__multiply>
  809554:	88800015 	stw	r2,0(r17)
  809558:	10000015 	stw	zero,0(r2)
  80955c:	003fdd06 	br	8094d4 <__alt_data_end+0xff8094d4>
  809560:	1025883a 	mov	r18,r2
  809564:	003fd706 	br	8094c4 <__alt_data_end+0xff8094c4>
  809568:	10bfffc4 	addi	r2,r2,-1
  80956c:	1085883a 	add	r2,r2,r2
  809570:	00c02074 	movhi	r3,129
  809574:	18c45d04 	addi	r3,r3,4468
  809578:	1085883a 	add	r2,r2,r2
  80957c:	1885883a 	add	r2,r3,r2
  809580:	11800017 	ldw	r6,0(r2)
  809584:	000f883a 	mov	r7,zero
  809588:	0808f100 	call	808f10 <__multadd>
  80958c:	1025883a 	mov	r18,r2
  809590:	003fc706 	br	8094b0 <__alt_data_end+0xff8094b0>
  809594:	05000044 	movi	r20,1
  809598:	a00b883a 	mov	r5,r20
  80959c:	9809883a 	mov	r4,r19
  8095a0:	0808e400 	call	808e40 <_Balloc>
  8095a4:	1023883a 	mov	r17,r2
  8095a8:	00809c44 	movi	r2,625
  8095ac:	88800515 	stw	r2,20(r17)
  8095b0:	8d000415 	stw	r20,16(r17)
  8095b4:	9c401215 	stw	r17,72(r19)
  8095b8:	88000015 	stw	zero,0(r17)
  8095bc:	003fc606 	br	8094d8 <__alt_data_end+0xff8094d8>

008095c0 <__lshift>:
  8095c0:	defff904 	addi	sp,sp,-28
  8095c4:	dd400515 	stw	r21,20(sp)
  8095c8:	dcc00315 	stw	r19,12(sp)
  8095cc:	302bd17a 	srai	r21,r6,5
  8095d0:	2cc00417 	ldw	r19,16(r5)
  8095d4:	28800217 	ldw	r2,8(r5)
  8095d8:	dd000415 	stw	r20,16(sp)
  8095dc:	ace7883a 	add	r19,r21,r19
  8095e0:	dc800215 	stw	r18,8(sp)
  8095e4:	dc400115 	stw	r17,4(sp)
  8095e8:	dc000015 	stw	r16,0(sp)
  8095ec:	dfc00615 	stw	ra,24(sp)
  8095f0:	9c000044 	addi	r16,r19,1
  8095f4:	2823883a 	mov	r17,r5
  8095f8:	3029883a 	mov	r20,r6
  8095fc:	2025883a 	mov	r18,r4
  809600:	29400117 	ldw	r5,4(r5)
  809604:	1400030e 	bge	r2,r16,809614 <__lshift+0x54>
  809608:	1085883a 	add	r2,r2,r2
  80960c:	29400044 	addi	r5,r5,1
  809610:	143ffd16 	blt	r2,r16,809608 <__alt_data_end+0xff809608>
  809614:	9009883a 	mov	r4,r18
  809618:	0808e400 	call	808e40 <_Balloc>
  80961c:	10c00504 	addi	r3,r2,20
  809620:	0540070e 	bge	zero,r21,809640 <__lshift+0x80>
  809624:	ad6b883a 	add	r21,r21,r21
  809628:	ad6b883a 	add	r21,r21,r21
  80962c:	1809883a 	mov	r4,r3
  809630:	1d47883a 	add	r3,r3,r21
  809634:	20000015 	stw	zero,0(r4)
  809638:	21000104 	addi	r4,r4,4
  80963c:	193ffd1e 	bne	r3,r4,809634 <__alt_data_end+0xff809634>
  809640:	8a000417 	ldw	r8,16(r17)
  809644:	89000504 	addi	r4,r17,20
  809648:	a18007cc 	andi	r6,r20,31
  80964c:	4211883a 	add	r8,r8,r8
  809650:	4211883a 	add	r8,r8,r8
  809654:	2211883a 	add	r8,r4,r8
  809658:	30002326 	beq	r6,zero,8096e8 <__lshift+0x128>
  80965c:	02400804 	movi	r9,32
  809660:	4993c83a 	sub	r9,r9,r6
  809664:	000b883a 	mov	r5,zero
  809668:	21c00017 	ldw	r7,0(r4)
  80966c:	1815883a 	mov	r10,r3
  809670:	18c00104 	addi	r3,r3,4
  809674:	398e983a 	sll	r7,r7,r6
  809678:	21000104 	addi	r4,r4,4
  80967c:	394ab03a 	or	r5,r7,r5
  809680:	197fff15 	stw	r5,-4(r3)
  809684:	217fff17 	ldw	r5,-4(r4)
  809688:	2a4ad83a 	srl	r5,r5,r9
  80968c:	223ff636 	bltu	r4,r8,809668 <__alt_data_end+0xff809668>
  809690:	51400115 	stw	r5,4(r10)
  809694:	28001a1e 	bne	r5,zero,809700 <__lshift+0x140>
  809698:	843fffc4 	addi	r16,r16,-1
  80969c:	14000415 	stw	r16,16(r2)
  8096a0:	88000826 	beq	r17,zero,8096c4 <__lshift+0x104>
  8096a4:	89000117 	ldw	r4,4(r17)
  8096a8:	90c01317 	ldw	r3,76(r18)
  8096ac:	2109883a 	add	r4,r4,r4
  8096b0:	2109883a 	add	r4,r4,r4
  8096b4:	1907883a 	add	r3,r3,r4
  8096b8:	19000017 	ldw	r4,0(r3)
  8096bc:	89000015 	stw	r4,0(r17)
  8096c0:	1c400015 	stw	r17,0(r3)
  8096c4:	dfc00617 	ldw	ra,24(sp)
  8096c8:	dd400517 	ldw	r21,20(sp)
  8096cc:	dd000417 	ldw	r20,16(sp)
  8096d0:	dcc00317 	ldw	r19,12(sp)
  8096d4:	dc800217 	ldw	r18,8(sp)
  8096d8:	dc400117 	ldw	r17,4(sp)
  8096dc:	dc000017 	ldw	r16,0(sp)
  8096e0:	dec00704 	addi	sp,sp,28
  8096e4:	f800283a 	ret
  8096e8:	21400017 	ldw	r5,0(r4)
  8096ec:	18c00104 	addi	r3,r3,4
  8096f0:	21000104 	addi	r4,r4,4
  8096f4:	197fff15 	stw	r5,-4(r3)
  8096f8:	223ffb36 	bltu	r4,r8,8096e8 <__alt_data_end+0xff8096e8>
  8096fc:	003fe606 	br	809698 <__alt_data_end+0xff809698>
  809700:	9c000084 	addi	r16,r19,2
  809704:	003fe406 	br	809698 <__alt_data_end+0xff809698>

00809708 <__mcmp>:
  809708:	20800417 	ldw	r2,16(r4)
  80970c:	28c00417 	ldw	r3,16(r5)
  809710:	10c5c83a 	sub	r2,r2,r3
  809714:	1000111e 	bne	r2,zero,80975c <__mcmp+0x54>
  809718:	18c7883a 	add	r3,r3,r3
  80971c:	18c7883a 	add	r3,r3,r3
  809720:	21000504 	addi	r4,r4,20
  809724:	29400504 	addi	r5,r5,20
  809728:	20c5883a 	add	r2,r4,r3
  80972c:	28cb883a 	add	r5,r5,r3
  809730:	00000106 	br	809738 <__mcmp+0x30>
  809734:	20800a2e 	bgeu	r4,r2,809760 <__mcmp+0x58>
  809738:	10bfff04 	addi	r2,r2,-4
  80973c:	297fff04 	addi	r5,r5,-4
  809740:	11800017 	ldw	r6,0(r2)
  809744:	28c00017 	ldw	r3,0(r5)
  809748:	30fffa26 	beq	r6,r3,809734 <__alt_data_end+0xff809734>
  80974c:	30c00236 	bltu	r6,r3,809758 <__mcmp+0x50>
  809750:	00800044 	movi	r2,1
  809754:	f800283a 	ret
  809758:	00bfffc4 	movi	r2,-1
  80975c:	f800283a 	ret
  809760:	0005883a 	mov	r2,zero
  809764:	f800283a 	ret

00809768 <__mdiff>:
  809768:	28c00417 	ldw	r3,16(r5)
  80976c:	30800417 	ldw	r2,16(r6)
  809770:	defffa04 	addi	sp,sp,-24
  809774:	dcc00315 	stw	r19,12(sp)
  809778:	dc800215 	stw	r18,8(sp)
  80977c:	dfc00515 	stw	ra,20(sp)
  809780:	dd000415 	stw	r20,16(sp)
  809784:	dc400115 	stw	r17,4(sp)
  809788:	dc000015 	stw	r16,0(sp)
  80978c:	1887c83a 	sub	r3,r3,r2
  809790:	2825883a 	mov	r18,r5
  809794:	3027883a 	mov	r19,r6
  809798:	1800141e 	bne	r3,zero,8097ec <__mdiff+0x84>
  80979c:	1085883a 	add	r2,r2,r2
  8097a0:	1085883a 	add	r2,r2,r2
  8097a4:	2a000504 	addi	r8,r5,20
  8097a8:	34000504 	addi	r16,r6,20
  8097ac:	4087883a 	add	r3,r8,r2
  8097b0:	8085883a 	add	r2,r16,r2
  8097b4:	00000106 	br	8097bc <__mdiff+0x54>
  8097b8:	40c0592e 	bgeu	r8,r3,809920 <__mdiff+0x1b8>
  8097bc:	18ffff04 	addi	r3,r3,-4
  8097c0:	10bfff04 	addi	r2,r2,-4
  8097c4:	19c00017 	ldw	r7,0(r3)
  8097c8:	11400017 	ldw	r5,0(r2)
  8097cc:	397ffa26 	beq	r7,r5,8097b8 <__alt_data_end+0xff8097b8>
  8097d0:	3940592e 	bgeu	r7,r5,809938 <__mdiff+0x1d0>
  8097d4:	9005883a 	mov	r2,r18
  8097d8:	4023883a 	mov	r17,r8
  8097dc:	9825883a 	mov	r18,r19
  8097e0:	05000044 	movi	r20,1
  8097e4:	1027883a 	mov	r19,r2
  8097e8:	00000406 	br	8097fc <__mdiff+0x94>
  8097ec:	18005616 	blt	r3,zero,809948 <__mdiff+0x1e0>
  8097f0:	34400504 	addi	r17,r6,20
  8097f4:	2c000504 	addi	r16,r5,20
  8097f8:	0029883a 	mov	r20,zero
  8097fc:	91400117 	ldw	r5,4(r18)
  809800:	0808e400 	call	808e40 <_Balloc>
  809804:	92400417 	ldw	r9,16(r18)
  809808:	9b000417 	ldw	r12,16(r19)
  80980c:	12c00504 	addi	r11,r2,20
  809810:	4a51883a 	add	r8,r9,r9
  809814:	6319883a 	add	r12,r12,r12
  809818:	4211883a 	add	r8,r8,r8
  80981c:	6319883a 	add	r12,r12,r12
  809820:	15000315 	stw	r20,12(r2)
  809824:	8211883a 	add	r8,r16,r8
  809828:	8b19883a 	add	r12,r17,r12
  80982c:	0007883a 	mov	r3,zero
  809830:	81400017 	ldw	r5,0(r16)
  809834:	89c00017 	ldw	r7,0(r17)
  809838:	59800104 	addi	r6,r11,4
  80983c:	293fffcc 	andi	r4,r5,65535
  809840:	20c7883a 	add	r3,r4,r3
  809844:	393fffcc 	andi	r4,r7,65535
  809848:	1909c83a 	sub	r4,r3,r4
  80984c:	280ad43a 	srli	r5,r5,16
  809850:	380ed43a 	srli	r7,r7,16
  809854:	2007d43a 	srai	r3,r4,16
  809858:	213fffcc 	andi	r4,r4,65535
  80985c:	29cbc83a 	sub	r5,r5,r7
  809860:	28c7883a 	add	r3,r5,r3
  809864:	180a943a 	slli	r5,r3,16
  809868:	8c400104 	addi	r17,r17,4
  80986c:	84000104 	addi	r16,r16,4
  809870:	2908b03a 	or	r4,r5,r4
  809874:	59000015 	stw	r4,0(r11)
  809878:	1807d43a 	srai	r3,r3,16
  80987c:	3015883a 	mov	r10,r6
  809880:	3017883a 	mov	r11,r6
  809884:	8b3fea36 	bltu	r17,r12,809830 <__alt_data_end+0xff809830>
  809888:	8200162e 	bgeu	r16,r8,8098e4 <__mdiff+0x17c>
  80988c:	8017883a 	mov	r11,r16
  809890:	59400017 	ldw	r5,0(r11)
  809894:	31800104 	addi	r6,r6,4
  809898:	5ac00104 	addi	r11,r11,4
  80989c:	293fffcc 	andi	r4,r5,65535
  8098a0:	20c7883a 	add	r3,r4,r3
  8098a4:	280ed43a 	srli	r7,r5,16
  8098a8:	180bd43a 	srai	r5,r3,16
  8098ac:	193fffcc 	andi	r4,r3,65535
  8098b0:	3947883a 	add	r3,r7,r5
  8098b4:	180a943a 	slli	r5,r3,16
  8098b8:	1807d43a 	srai	r3,r3,16
  8098bc:	2908b03a 	or	r4,r5,r4
  8098c0:	313fff15 	stw	r4,-4(r6)
  8098c4:	5a3ff236 	bltu	r11,r8,809890 <__alt_data_end+0xff809890>
  8098c8:	0406303a 	nor	r3,zero,r16
  8098cc:	1a07883a 	add	r3,r3,r8
  8098d0:	1806d0ba 	srli	r3,r3,2
  8098d4:	18c00044 	addi	r3,r3,1
  8098d8:	18c7883a 	add	r3,r3,r3
  8098dc:	18c7883a 	add	r3,r3,r3
  8098e0:	50d5883a 	add	r10,r10,r3
  8098e4:	50ffff04 	addi	r3,r10,-4
  8098e8:	2000041e 	bne	r4,zero,8098fc <__mdiff+0x194>
  8098ec:	18ffff04 	addi	r3,r3,-4
  8098f0:	19000017 	ldw	r4,0(r3)
  8098f4:	4a7fffc4 	addi	r9,r9,-1
  8098f8:	203ffc26 	beq	r4,zero,8098ec <__alt_data_end+0xff8098ec>
  8098fc:	12400415 	stw	r9,16(r2)
  809900:	dfc00517 	ldw	ra,20(sp)
  809904:	dd000417 	ldw	r20,16(sp)
  809908:	dcc00317 	ldw	r19,12(sp)
  80990c:	dc800217 	ldw	r18,8(sp)
  809910:	dc400117 	ldw	r17,4(sp)
  809914:	dc000017 	ldw	r16,0(sp)
  809918:	dec00604 	addi	sp,sp,24
  80991c:	f800283a 	ret
  809920:	000b883a 	mov	r5,zero
  809924:	0808e400 	call	808e40 <_Balloc>
  809928:	00c00044 	movi	r3,1
  80992c:	10c00415 	stw	r3,16(r2)
  809930:	10000515 	stw	zero,20(r2)
  809934:	003ff206 	br	809900 <__alt_data_end+0xff809900>
  809938:	8023883a 	mov	r17,r16
  80993c:	0029883a 	mov	r20,zero
  809940:	4021883a 	mov	r16,r8
  809944:	003fad06 	br	8097fc <__alt_data_end+0xff8097fc>
  809948:	9005883a 	mov	r2,r18
  80994c:	94400504 	addi	r17,r18,20
  809950:	9c000504 	addi	r16,r19,20
  809954:	9825883a 	mov	r18,r19
  809958:	05000044 	movi	r20,1
  80995c:	1027883a 	mov	r19,r2
  809960:	003fa606 	br	8097fc <__alt_data_end+0xff8097fc>

00809964 <__ulp>:
  809964:	295ffc2c 	andhi	r5,r5,32752
  809968:	00bf3034 	movhi	r2,64704
  80996c:	2887883a 	add	r3,r5,r2
  809970:	00c0020e 	bge	zero,r3,80997c <__ulp+0x18>
  809974:	0005883a 	mov	r2,zero
  809978:	f800283a 	ret
  80997c:	00c7c83a 	sub	r3,zero,r3
  809980:	1807d53a 	srai	r3,r3,20
  809984:	008004c4 	movi	r2,19
  809988:	10c00b0e 	bge	r2,r3,8099b8 <__ulp+0x54>
  80998c:	18bffb04 	addi	r2,r3,-20
  809990:	01000784 	movi	r4,30
  809994:	0007883a 	mov	r3,zero
  809998:	20800516 	blt	r4,r2,8099b0 <__ulp+0x4c>
  80999c:	010007c4 	movi	r4,31
  8099a0:	2089c83a 	sub	r4,r4,r2
  8099a4:	00800044 	movi	r2,1
  8099a8:	1104983a 	sll	r2,r2,r4
  8099ac:	f800283a 	ret
  8099b0:	00800044 	movi	r2,1
  8099b4:	f800283a 	ret
  8099b8:	01400234 	movhi	r5,8
  8099bc:	28c7d83a 	sra	r3,r5,r3
  8099c0:	0005883a 	mov	r2,zero
  8099c4:	f800283a 	ret

008099c8 <__b2d>:
  8099c8:	defffa04 	addi	sp,sp,-24
  8099cc:	dc000015 	stw	r16,0(sp)
  8099d0:	24000417 	ldw	r16,16(r4)
  8099d4:	dc400115 	stw	r17,4(sp)
  8099d8:	24400504 	addi	r17,r4,20
  8099dc:	8421883a 	add	r16,r16,r16
  8099e0:	8421883a 	add	r16,r16,r16
  8099e4:	8c21883a 	add	r16,r17,r16
  8099e8:	dc800215 	stw	r18,8(sp)
  8099ec:	84bfff17 	ldw	r18,-4(r16)
  8099f0:	dd000415 	stw	r20,16(sp)
  8099f4:	dcc00315 	stw	r19,12(sp)
  8099f8:	9009883a 	mov	r4,r18
  8099fc:	2829883a 	mov	r20,r5
  809a00:	dfc00515 	stw	ra,20(sp)
  809a04:	08091340 	call	809134 <__hi0bits>
  809a08:	00c00804 	movi	r3,32
  809a0c:	1889c83a 	sub	r4,r3,r2
  809a10:	a1000015 	stw	r4,0(r20)
  809a14:	01000284 	movi	r4,10
  809a18:	84ffff04 	addi	r19,r16,-4
  809a1c:	20801216 	blt	r4,r2,809a68 <__b2d+0xa0>
  809a20:	018002c4 	movi	r6,11
  809a24:	308dc83a 	sub	r6,r6,r2
  809a28:	9186d83a 	srl	r3,r18,r6
  809a2c:	18cffc34 	orhi	r3,r3,16368
  809a30:	8cc0212e 	bgeu	r17,r19,809ab8 <__b2d+0xf0>
  809a34:	813ffe17 	ldw	r4,-8(r16)
  809a38:	218cd83a 	srl	r6,r4,r6
  809a3c:	10800544 	addi	r2,r2,21
  809a40:	9084983a 	sll	r2,r18,r2
  809a44:	1184b03a 	or	r2,r2,r6
  809a48:	dfc00517 	ldw	ra,20(sp)
  809a4c:	dd000417 	ldw	r20,16(sp)
  809a50:	dcc00317 	ldw	r19,12(sp)
  809a54:	dc800217 	ldw	r18,8(sp)
  809a58:	dc400117 	ldw	r17,4(sp)
  809a5c:	dc000017 	ldw	r16,0(sp)
  809a60:	dec00604 	addi	sp,sp,24
  809a64:	f800283a 	ret
  809a68:	8cc00f2e 	bgeu	r17,r19,809aa8 <__b2d+0xe0>
  809a6c:	117ffd44 	addi	r5,r2,-11
  809a70:	80bffe17 	ldw	r2,-8(r16)
  809a74:	28000e26 	beq	r5,zero,809ab0 <__b2d+0xe8>
  809a78:	1949c83a 	sub	r4,r3,r5
  809a7c:	9164983a 	sll	r18,r18,r5
  809a80:	1106d83a 	srl	r3,r2,r4
  809a84:	81bffe04 	addi	r6,r16,-8
  809a88:	948ffc34 	orhi	r18,r18,16368
  809a8c:	90c6b03a 	or	r3,r18,r3
  809a90:	89800e2e 	bgeu	r17,r6,809acc <__b2d+0x104>
  809a94:	81bffd17 	ldw	r6,-12(r16)
  809a98:	1144983a 	sll	r2,r2,r5
  809a9c:	310ad83a 	srl	r5,r6,r4
  809aa0:	2884b03a 	or	r2,r5,r2
  809aa4:	003fe806 	br	809a48 <__alt_data_end+0xff809a48>
  809aa8:	10bffd44 	addi	r2,r2,-11
  809aac:	1000041e 	bne	r2,zero,809ac0 <__b2d+0xf8>
  809ab0:	90cffc34 	orhi	r3,r18,16368
  809ab4:	003fe406 	br	809a48 <__alt_data_end+0xff809a48>
  809ab8:	000d883a 	mov	r6,zero
  809abc:	003fdf06 	br	809a3c <__alt_data_end+0xff809a3c>
  809ac0:	90a4983a 	sll	r18,r18,r2
  809ac4:	0005883a 	mov	r2,zero
  809ac8:	003ff906 	br	809ab0 <__alt_data_end+0xff809ab0>
  809acc:	1144983a 	sll	r2,r2,r5
  809ad0:	003fdd06 	br	809a48 <__alt_data_end+0xff809a48>

00809ad4 <__d2b>:
  809ad4:	defff804 	addi	sp,sp,-32
  809ad8:	dc000215 	stw	r16,8(sp)
  809adc:	3021883a 	mov	r16,r6
  809ae0:	dc400315 	stw	r17,12(sp)
  809ae4:	8022907a 	slli	r17,r16,1
  809ae8:	dd000615 	stw	r20,24(sp)
  809aec:	2829883a 	mov	r20,r5
  809af0:	01400044 	movi	r5,1
  809af4:	dcc00515 	stw	r19,20(sp)
  809af8:	dc800415 	stw	r18,16(sp)
  809afc:	dfc00715 	stw	ra,28(sp)
  809b00:	3825883a 	mov	r18,r7
  809b04:	8822d57a 	srli	r17,r17,21
  809b08:	0808e400 	call	808e40 <_Balloc>
  809b0c:	1027883a 	mov	r19,r2
  809b10:	00800434 	movhi	r2,16
  809b14:	10bfffc4 	addi	r2,r2,-1
  809b18:	808c703a 	and	r6,r16,r2
  809b1c:	88000126 	beq	r17,zero,809b24 <__d2b+0x50>
  809b20:	31800434 	orhi	r6,r6,16
  809b24:	d9800015 	stw	r6,0(sp)
  809b28:	a0002426 	beq	r20,zero,809bbc <__d2b+0xe8>
  809b2c:	d9000104 	addi	r4,sp,4
  809b30:	dd000115 	stw	r20,4(sp)
  809b34:	080919c0 	call	80919c <__lo0bits>
  809b38:	d8c00017 	ldw	r3,0(sp)
  809b3c:	10002f1e 	bne	r2,zero,809bfc <__d2b+0x128>
  809b40:	d9000117 	ldw	r4,4(sp)
  809b44:	99000515 	stw	r4,20(r19)
  809b48:	1821003a 	cmpeq	r16,r3,zero
  809b4c:	01000084 	movi	r4,2
  809b50:	2421c83a 	sub	r16,r4,r16
  809b54:	98c00615 	stw	r3,24(r19)
  809b58:	9c000415 	stw	r16,16(r19)
  809b5c:	88001f1e 	bne	r17,zero,809bdc <__d2b+0x108>
  809b60:	10bef384 	addi	r2,r2,-1074
  809b64:	90800015 	stw	r2,0(r18)
  809b68:	00900034 	movhi	r2,16384
  809b6c:	10bfffc4 	addi	r2,r2,-1
  809b70:	8085883a 	add	r2,r16,r2
  809b74:	1085883a 	add	r2,r2,r2
  809b78:	1085883a 	add	r2,r2,r2
  809b7c:	9885883a 	add	r2,r19,r2
  809b80:	11000517 	ldw	r4,20(r2)
  809b84:	8020917a 	slli	r16,r16,5
  809b88:	08091340 	call	809134 <__hi0bits>
  809b8c:	d8c00817 	ldw	r3,32(sp)
  809b90:	8085c83a 	sub	r2,r16,r2
  809b94:	18800015 	stw	r2,0(r3)
  809b98:	9805883a 	mov	r2,r19
  809b9c:	dfc00717 	ldw	ra,28(sp)
  809ba0:	dd000617 	ldw	r20,24(sp)
  809ba4:	dcc00517 	ldw	r19,20(sp)
  809ba8:	dc800417 	ldw	r18,16(sp)
  809bac:	dc400317 	ldw	r17,12(sp)
  809bb0:	dc000217 	ldw	r16,8(sp)
  809bb4:	dec00804 	addi	sp,sp,32
  809bb8:	f800283a 	ret
  809bbc:	d809883a 	mov	r4,sp
  809bc0:	080919c0 	call	80919c <__lo0bits>
  809bc4:	d8c00017 	ldw	r3,0(sp)
  809bc8:	04000044 	movi	r16,1
  809bcc:	9c000415 	stw	r16,16(r19)
  809bd0:	98c00515 	stw	r3,20(r19)
  809bd4:	10800804 	addi	r2,r2,32
  809bd8:	883fe126 	beq	r17,zero,809b60 <__alt_data_end+0xff809b60>
  809bdc:	00c00d44 	movi	r3,53
  809be0:	8c7ef344 	addi	r17,r17,-1075
  809be4:	88a3883a 	add	r17,r17,r2
  809be8:	1885c83a 	sub	r2,r3,r2
  809bec:	d8c00817 	ldw	r3,32(sp)
  809bf0:	94400015 	stw	r17,0(r18)
  809bf4:	18800015 	stw	r2,0(r3)
  809bf8:	003fe706 	br	809b98 <__alt_data_end+0xff809b98>
  809bfc:	01000804 	movi	r4,32
  809c00:	2089c83a 	sub	r4,r4,r2
  809c04:	1908983a 	sll	r4,r3,r4
  809c08:	d9400117 	ldw	r5,4(sp)
  809c0c:	1886d83a 	srl	r3,r3,r2
  809c10:	2148b03a 	or	r4,r4,r5
  809c14:	99000515 	stw	r4,20(r19)
  809c18:	d8c00015 	stw	r3,0(sp)
  809c1c:	003fca06 	br	809b48 <__alt_data_end+0xff809b48>

00809c20 <__ratio>:
  809c20:	defff904 	addi	sp,sp,-28
  809c24:	dc400315 	stw	r17,12(sp)
  809c28:	2823883a 	mov	r17,r5
  809c2c:	d9400104 	addi	r5,sp,4
  809c30:	dfc00615 	stw	ra,24(sp)
  809c34:	dcc00515 	stw	r19,20(sp)
  809c38:	dc800415 	stw	r18,16(sp)
  809c3c:	2027883a 	mov	r19,r4
  809c40:	dc000215 	stw	r16,8(sp)
  809c44:	08099c80 	call	8099c8 <__b2d>
  809c48:	d80b883a 	mov	r5,sp
  809c4c:	8809883a 	mov	r4,r17
  809c50:	1025883a 	mov	r18,r2
  809c54:	1821883a 	mov	r16,r3
  809c58:	08099c80 	call	8099c8 <__b2d>
  809c5c:	8a000417 	ldw	r8,16(r17)
  809c60:	99000417 	ldw	r4,16(r19)
  809c64:	d9400117 	ldw	r5,4(sp)
  809c68:	2209c83a 	sub	r4,r4,r8
  809c6c:	2010917a 	slli	r8,r4,5
  809c70:	d9000017 	ldw	r4,0(sp)
  809c74:	2909c83a 	sub	r4,r5,r4
  809c78:	4109883a 	add	r4,r8,r4
  809c7c:	01000e0e 	bge	zero,r4,809cb8 <__ratio+0x98>
  809c80:	2008953a 	slli	r4,r4,20
  809c84:	2421883a 	add	r16,r4,r16
  809c88:	100d883a 	mov	r6,r2
  809c8c:	180f883a 	mov	r7,r3
  809c90:	9009883a 	mov	r4,r18
  809c94:	800b883a 	mov	r5,r16
  809c98:	080d9100 	call	80d910 <__divdf3>
  809c9c:	dfc00617 	ldw	ra,24(sp)
  809ca0:	dcc00517 	ldw	r19,20(sp)
  809ca4:	dc800417 	ldw	r18,16(sp)
  809ca8:	dc400317 	ldw	r17,12(sp)
  809cac:	dc000217 	ldw	r16,8(sp)
  809cb0:	dec00704 	addi	sp,sp,28
  809cb4:	f800283a 	ret
  809cb8:	2008953a 	slli	r4,r4,20
  809cbc:	1907c83a 	sub	r3,r3,r4
  809cc0:	003ff106 	br	809c88 <__alt_data_end+0xff809c88>

00809cc4 <_mprec_log10>:
  809cc4:	defffe04 	addi	sp,sp,-8
  809cc8:	dc000015 	stw	r16,0(sp)
  809ccc:	dfc00115 	stw	ra,4(sp)
  809cd0:	008005c4 	movi	r2,23
  809cd4:	2021883a 	mov	r16,r4
  809cd8:	11000d0e 	bge	r2,r4,809d10 <_mprec_log10+0x4c>
  809cdc:	0005883a 	mov	r2,zero
  809ce0:	00cffc34 	movhi	r3,16368
  809ce4:	843fffc4 	addi	r16,r16,-1
  809ce8:	000d883a 	mov	r6,zero
  809cec:	01d00934 	movhi	r7,16420
  809cf0:	1009883a 	mov	r4,r2
  809cf4:	180b883a 	mov	r5,r3
  809cf8:	08023fc0 	call	8023fc <__muldf3>
  809cfc:	803ff91e 	bne	r16,zero,809ce4 <__alt_data_end+0xff809ce4>
  809d00:	dfc00117 	ldw	ra,4(sp)
  809d04:	dc000017 	ldw	r16,0(sp)
  809d08:	dec00204 	addi	sp,sp,8
  809d0c:	f800283a 	ret
  809d10:	202090fa 	slli	r16,r4,3
  809d14:	00802074 	movhi	r2,129
  809d18:	10847404 	addi	r2,r2,4560
  809d1c:	1421883a 	add	r16,r2,r16
  809d20:	80800017 	ldw	r2,0(r16)
  809d24:	80c00117 	ldw	r3,4(r16)
  809d28:	dfc00117 	ldw	ra,4(sp)
  809d2c:	dc000017 	ldw	r16,0(sp)
  809d30:	dec00204 	addi	sp,sp,8
  809d34:	f800283a 	ret

00809d38 <__copybits>:
  809d38:	297fffc4 	addi	r5,r5,-1
  809d3c:	280fd17a 	srai	r7,r5,5
  809d40:	30c00417 	ldw	r3,16(r6)
  809d44:	30800504 	addi	r2,r6,20
  809d48:	39c00044 	addi	r7,r7,1
  809d4c:	18c7883a 	add	r3,r3,r3
  809d50:	39cf883a 	add	r7,r7,r7
  809d54:	18c7883a 	add	r3,r3,r3
  809d58:	39cf883a 	add	r7,r7,r7
  809d5c:	10c7883a 	add	r3,r2,r3
  809d60:	21cf883a 	add	r7,r4,r7
  809d64:	10c00d2e 	bgeu	r2,r3,809d9c <__copybits+0x64>
  809d68:	200b883a 	mov	r5,r4
  809d6c:	12000017 	ldw	r8,0(r2)
  809d70:	29400104 	addi	r5,r5,4
  809d74:	10800104 	addi	r2,r2,4
  809d78:	2a3fff15 	stw	r8,-4(r5)
  809d7c:	10fffb36 	bltu	r2,r3,809d6c <__alt_data_end+0xff809d6c>
  809d80:	1985c83a 	sub	r2,r3,r6
  809d84:	10bffac4 	addi	r2,r2,-21
  809d88:	1004d0ba 	srli	r2,r2,2
  809d8c:	10800044 	addi	r2,r2,1
  809d90:	1085883a 	add	r2,r2,r2
  809d94:	1085883a 	add	r2,r2,r2
  809d98:	2089883a 	add	r4,r4,r2
  809d9c:	21c0032e 	bgeu	r4,r7,809dac <__copybits+0x74>
  809da0:	20000015 	stw	zero,0(r4)
  809da4:	21000104 	addi	r4,r4,4
  809da8:	21fffd36 	bltu	r4,r7,809da0 <__alt_data_end+0xff809da0>
  809dac:	f800283a 	ret

00809db0 <__any_on>:
  809db0:	20c00417 	ldw	r3,16(r4)
  809db4:	2805d17a 	srai	r2,r5,5
  809db8:	21000504 	addi	r4,r4,20
  809dbc:	18800d0e 	bge	r3,r2,809df4 <__any_on+0x44>
  809dc0:	18c7883a 	add	r3,r3,r3
  809dc4:	18c7883a 	add	r3,r3,r3
  809dc8:	20c7883a 	add	r3,r4,r3
  809dcc:	20c0192e 	bgeu	r4,r3,809e34 <__any_on+0x84>
  809dd0:	18bfff17 	ldw	r2,-4(r3)
  809dd4:	18ffff04 	addi	r3,r3,-4
  809dd8:	1000041e 	bne	r2,zero,809dec <__any_on+0x3c>
  809ddc:	20c0142e 	bgeu	r4,r3,809e30 <__any_on+0x80>
  809de0:	18ffff04 	addi	r3,r3,-4
  809de4:	19400017 	ldw	r5,0(r3)
  809de8:	283ffc26 	beq	r5,zero,809ddc <__alt_data_end+0xff809ddc>
  809dec:	00800044 	movi	r2,1
  809df0:	f800283a 	ret
  809df4:	10c00a0e 	bge	r2,r3,809e20 <__any_on+0x70>
  809df8:	1085883a 	add	r2,r2,r2
  809dfc:	1085883a 	add	r2,r2,r2
  809e00:	294007cc 	andi	r5,r5,31
  809e04:	2087883a 	add	r3,r4,r2
  809e08:	283ff026 	beq	r5,zero,809dcc <__alt_data_end+0xff809dcc>
  809e0c:	19800017 	ldw	r6,0(r3)
  809e10:	3144d83a 	srl	r2,r6,r5
  809e14:	114a983a 	sll	r5,r2,r5
  809e18:	317ff41e 	bne	r6,r5,809dec <__alt_data_end+0xff809dec>
  809e1c:	003feb06 	br	809dcc <__alt_data_end+0xff809dcc>
  809e20:	1085883a 	add	r2,r2,r2
  809e24:	1085883a 	add	r2,r2,r2
  809e28:	2087883a 	add	r3,r4,r2
  809e2c:	003fe706 	br	809dcc <__alt_data_end+0xff809dcc>
  809e30:	f800283a 	ret
  809e34:	0005883a 	mov	r2,zero
  809e38:	f800283a 	ret

00809e3c <__fpclassifyd>:
  809e3c:	00a00034 	movhi	r2,32768
  809e40:	10bfffc4 	addi	r2,r2,-1
  809e44:	2884703a 	and	r2,r5,r2
  809e48:	10000726 	beq	r2,zero,809e68 <__fpclassifyd+0x2c>
  809e4c:	00fffc34 	movhi	r3,65520
  809e50:	019ff834 	movhi	r6,32736
  809e54:	28c7883a 	add	r3,r5,r3
  809e58:	31bfffc4 	addi	r6,r6,-1
  809e5c:	30c00536 	bltu	r6,r3,809e74 <__fpclassifyd+0x38>
  809e60:	00800104 	movi	r2,4
  809e64:	f800283a 	ret
  809e68:	2000021e 	bne	r4,zero,809e74 <__fpclassifyd+0x38>
  809e6c:	00800084 	movi	r2,2
  809e70:	f800283a 	ret
  809e74:	00dffc34 	movhi	r3,32752
  809e78:	019ff834 	movhi	r6,32736
  809e7c:	28cb883a 	add	r5,r5,r3
  809e80:	31bfffc4 	addi	r6,r6,-1
  809e84:	317ff62e 	bgeu	r6,r5,809e60 <__alt_data_end+0xff809e60>
  809e88:	01400434 	movhi	r5,16
  809e8c:	297fffc4 	addi	r5,r5,-1
  809e90:	28800236 	bltu	r5,r2,809e9c <__fpclassifyd+0x60>
  809e94:	008000c4 	movi	r2,3
  809e98:	f800283a 	ret
  809e9c:	10c00226 	beq	r2,r3,809ea8 <__fpclassifyd+0x6c>
  809ea0:	0005883a 	mov	r2,zero
  809ea4:	f800283a 	ret
  809ea8:	2005003a 	cmpeq	r2,r4,zero
  809eac:	f800283a 	ret

00809eb0 <_sbrk_r>:
  809eb0:	defffd04 	addi	sp,sp,-12
  809eb4:	dc000015 	stw	r16,0(sp)
  809eb8:	04002074 	movhi	r16,129
  809ebc:	dc400115 	stw	r17,4(sp)
  809ec0:	84123504 	addi	r16,r16,18644
  809ec4:	2023883a 	mov	r17,r4
  809ec8:	2809883a 	mov	r4,r5
  809ecc:	dfc00215 	stw	ra,8(sp)
  809ed0:	80000015 	stw	zero,0(r16)
  809ed4:	080edf00 	call	80edf0 <sbrk>
  809ed8:	00ffffc4 	movi	r3,-1
  809edc:	10c00526 	beq	r2,r3,809ef4 <_sbrk_r+0x44>
  809ee0:	dfc00217 	ldw	ra,8(sp)
  809ee4:	dc400117 	ldw	r17,4(sp)
  809ee8:	dc000017 	ldw	r16,0(sp)
  809eec:	dec00304 	addi	sp,sp,12
  809ef0:	f800283a 	ret
  809ef4:	80c00017 	ldw	r3,0(r16)
  809ef8:	183ff926 	beq	r3,zero,809ee0 <__alt_data_end+0xff809ee0>
  809efc:	88c00015 	stw	r3,0(r17)
  809f00:	003ff706 	br	809ee0 <__alt_data_end+0xff809ee0>

00809f04 <__sread>:
  809f04:	defffe04 	addi	sp,sp,-8
  809f08:	dc000015 	stw	r16,0(sp)
  809f0c:	2821883a 	mov	r16,r5
  809f10:	2940038f 	ldh	r5,14(r5)
  809f14:	dfc00115 	stw	ra,4(sp)
  809f18:	080c3a80 	call	80c3a8 <_read_r>
  809f1c:	10000716 	blt	r2,zero,809f3c <__sread+0x38>
  809f20:	80c01417 	ldw	r3,80(r16)
  809f24:	1887883a 	add	r3,r3,r2
  809f28:	80c01415 	stw	r3,80(r16)
  809f2c:	dfc00117 	ldw	ra,4(sp)
  809f30:	dc000017 	ldw	r16,0(sp)
  809f34:	dec00204 	addi	sp,sp,8
  809f38:	f800283a 	ret
  809f3c:	80c0030b 	ldhu	r3,12(r16)
  809f40:	18fbffcc 	andi	r3,r3,61439
  809f44:	80c0030d 	sth	r3,12(r16)
  809f48:	dfc00117 	ldw	ra,4(sp)
  809f4c:	dc000017 	ldw	r16,0(sp)
  809f50:	dec00204 	addi	sp,sp,8
  809f54:	f800283a 	ret

00809f58 <__seofread>:
  809f58:	0005883a 	mov	r2,zero
  809f5c:	f800283a 	ret

00809f60 <__swrite>:
  809f60:	2880030b 	ldhu	r2,12(r5)
  809f64:	defffb04 	addi	sp,sp,-20
  809f68:	dcc00315 	stw	r19,12(sp)
  809f6c:	dc800215 	stw	r18,8(sp)
  809f70:	dc400115 	stw	r17,4(sp)
  809f74:	dc000015 	stw	r16,0(sp)
  809f78:	dfc00415 	stw	ra,16(sp)
  809f7c:	10c0400c 	andi	r3,r2,256
  809f80:	2821883a 	mov	r16,r5
  809f84:	2023883a 	mov	r17,r4
  809f88:	3025883a 	mov	r18,r6
  809f8c:	3827883a 	mov	r19,r7
  809f90:	18000526 	beq	r3,zero,809fa8 <__swrite+0x48>
  809f94:	2940038f 	ldh	r5,14(r5)
  809f98:	01c00084 	movi	r7,2
  809f9c:	000d883a 	mov	r6,zero
  809fa0:	080c1ec0 	call	80c1ec <_lseek_r>
  809fa4:	8080030b 	ldhu	r2,12(r16)
  809fa8:	8140038f 	ldh	r5,14(r16)
  809fac:	10bbffcc 	andi	r2,r2,61439
  809fb0:	980f883a 	mov	r7,r19
  809fb4:	900d883a 	mov	r6,r18
  809fb8:	8809883a 	mov	r4,r17
  809fbc:	8080030d 	sth	r2,12(r16)
  809fc0:	dfc00417 	ldw	ra,16(sp)
  809fc4:	dcc00317 	ldw	r19,12(sp)
  809fc8:	dc800217 	ldw	r18,8(sp)
  809fcc:	dc400117 	ldw	r17,4(sp)
  809fd0:	dc000017 	ldw	r16,0(sp)
  809fd4:	dec00504 	addi	sp,sp,20
  809fd8:	080b7fc1 	jmpi	80b7fc <_write_r>

00809fdc <__sseek>:
  809fdc:	defffe04 	addi	sp,sp,-8
  809fe0:	dc000015 	stw	r16,0(sp)
  809fe4:	2821883a 	mov	r16,r5
  809fe8:	2940038f 	ldh	r5,14(r5)
  809fec:	dfc00115 	stw	ra,4(sp)
  809ff0:	080c1ec0 	call	80c1ec <_lseek_r>
  809ff4:	00ffffc4 	movi	r3,-1
  809ff8:	10c00826 	beq	r2,r3,80a01c <__sseek+0x40>
  809ffc:	80c0030b 	ldhu	r3,12(r16)
  80a000:	80801415 	stw	r2,80(r16)
  80a004:	18c40014 	ori	r3,r3,4096
  80a008:	80c0030d 	sth	r3,12(r16)
  80a00c:	dfc00117 	ldw	ra,4(sp)
  80a010:	dc000017 	ldw	r16,0(sp)
  80a014:	dec00204 	addi	sp,sp,8
  80a018:	f800283a 	ret
  80a01c:	80c0030b 	ldhu	r3,12(r16)
  80a020:	18fbffcc 	andi	r3,r3,61439
  80a024:	80c0030d 	sth	r3,12(r16)
  80a028:	dfc00117 	ldw	ra,4(sp)
  80a02c:	dc000017 	ldw	r16,0(sp)
  80a030:	dec00204 	addi	sp,sp,8
  80a034:	f800283a 	ret

0080a038 <__sclose>:
  80a038:	2940038f 	ldh	r5,14(r5)
  80a03c:	080b85c1 	jmpi	80b85c <_close_r>

0080a040 <strcmp>:
  80a040:	2144b03a 	or	r2,r4,r5
  80a044:	108000cc 	andi	r2,r2,3
  80a048:	1000171e 	bne	r2,zero,80a0a8 <strcmp+0x68>
  80a04c:	20800017 	ldw	r2,0(r4)
  80a050:	28c00017 	ldw	r3,0(r5)
  80a054:	10c0141e 	bne	r2,r3,80a0a8 <strcmp+0x68>
  80a058:	027fbff4 	movhi	r9,65279
  80a05c:	4a7fbfc4 	addi	r9,r9,-257
  80a060:	0086303a 	nor	r3,zero,r2
  80a064:	02202074 	movhi	r8,32897
  80a068:	1245883a 	add	r2,r2,r9
  80a06c:	42202004 	addi	r8,r8,-32640
  80a070:	10c4703a 	and	r2,r2,r3
  80a074:	1204703a 	and	r2,r2,r8
  80a078:	10000226 	beq	r2,zero,80a084 <strcmp+0x44>
  80a07c:	00002306 	br	80a10c <strcmp+0xcc>
  80a080:	1000221e 	bne	r2,zero,80a10c <strcmp+0xcc>
  80a084:	21000104 	addi	r4,r4,4
  80a088:	20c00017 	ldw	r3,0(r4)
  80a08c:	29400104 	addi	r5,r5,4
  80a090:	29800017 	ldw	r6,0(r5)
  80a094:	1a4f883a 	add	r7,r3,r9
  80a098:	00c4303a 	nor	r2,zero,r3
  80a09c:	3884703a 	and	r2,r7,r2
  80a0a0:	1204703a 	and	r2,r2,r8
  80a0a4:	19bff626 	beq	r3,r6,80a080 <__alt_data_end+0xff80a080>
  80a0a8:	20800003 	ldbu	r2,0(r4)
  80a0ac:	10c03fcc 	andi	r3,r2,255
  80a0b0:	18c0201c 	xori	r3,r3,128
  80a0b4:	18ffe004 	addi	r3,r3,-128
  80a0b8:	18000c26 	beq	r3,zero,80a0ec <strcmp+0xac>
  80a0bc:	29800007 	ldb	r6,0(r5)
  80a0c0:	19800326 	beq	r3,r6,80a0d0 <strcmp+0x90>
  80a0c4:	00001306 	br	80a114 <strcmp+0xd4>
  80a0c8:	29800007 	ldb	r6,0(r5)
  80a0cc:	11800b1e 	bne	r2,r6,80a0fc <strcmp+0xbc>
  80a0d0:	21000044 	addi	r4,r4,1
  80a0d4:	20c00003 	ldbu	r3,0(r4)
  80a0d8:	29400044 	addi	r5,r5,1
  80a0dc:	18803fcc 	andi	r2,r3,255
  80a0e0:	1080201c 	xori	r2,r2,128
  80a0e4:	10bfe004 	addi	r2,r2,-128
  80a0e8:	103ff71e 	bne	r2,zero,80a0c8 <__alt_data_end+0xff80a0c8>
  80a0ec:	0007883a 	mov	r3,zero
  80a0f0:	28800003 	ldbu	r2,0(r5)
  80a0f4:	1885c83a 	sub	r2,r3,r2
  80a0f8:	f800283a 	ret
  80a0fc:	28800003 	ldbu	r2,0(r5)
  80a100:	18c03fcc 	andi	r3,r3,255
  80a104:	1885c83a 	sub	r2,r3,r2
  80a108:	f800283a 	ret
  80a10c:	0005883a 	mov	r2,zero
  80a110:	f800283a 	ret
  80a114:	10c03fcc 	andi	r3,r2,255
  80a118:	003ff506 	br	80a0f0 <__alt_data_end+0xff80a0f0>

0080a11c <strlen>:
  80a11c:	208000cc 	andi	r2,r4,3
  80a120:	10002026 	beq	r2,zero,80a1a4 <strlen+0x88>
  80a124:	20800007 	ldb	r2,0(r4)
  80a128:	10002026 	beq	r2,zero,80a1ac <strlen+0x90>
  80a12c:	2005883a 	mov	r2,r4
  80a130:	00000206 	br	80a13c <strlen+0x20>
  80a134:	10c00007 	ldb	r3,0(r2)
  80a138:	18001826 	beq	r3,zero,80a19c <strlen+0x80>
  80a13c:	10800044 	addi	r2,r2,1
  80a140:	10c000cc 	andi	r3,r2,3
  80a144:	183ffb1e 	bne	r3,zero,80a134 <__alt_data_end+0xff80a134>
  80a148:	10c00017 	ldw	r3,0(r2)
  80a14c:	01ffbff4 	movhi	r7,65279
  80a150:	39ffbfc4 	addi	r7,r7,-257
  80a154:	00ca303a 	nor	r5,zero,r3
  80a158:	01a02074 	movhi	r6,32897
  80a15c:	19c7883a 	add	r3,r3,r7
  80a160:	31a02004 	addi	r6,r6,-32640
  80a164:	1946703a 	and	r3,r3,r5
  80a168:	1986703a 	and	r3,r3,r6
  80a16c:	1800091e 	bne	r3,zero,80a194 <strlen+0x78>
  80a170:	10800104 	addi	r2,r2,4
  80a174:	10c00017 	ldw	r3,0(r2)
  80a178:	19cb883a 	add	r5,r3,r7
  80a17c:	00c6303a 	nor	r3,zero,r3
  80a180:	28c6703a 	and	r3,r5,r3
  80a184:	1986703a 	and	r3,r3,r6
  80a188:	183ff926 	beq	r3,zero,80a170 <__alt_data_end+0xff80a170>
  80a18c:	00000106 	br	80a194 <strlen+0x78>
  80a190:	10800044 	addi	r2,r2,1
  80a194:	10c00007 	ldb	r3,0(r2)
  80a198:	183ffd1e 	bne	r3,zero,80a190 <__alt_data_end+0xff80a190>
  80a19c:	1105c83a 	sub	r2,r2,r4
  80a1a0:	f800283a 	ret
  80a1a4:	2005883a 	mov	r2,r4
  80a1a8:	003fe706 	br	80a148 <__alt_data_end+0xff80a148>
  80a1ac:	0005883a 	mov	r2,zero
  80a1b0:	f800283a 	ret

0080a1b4 <__sprint_r.part.0>:
  80a1b4:	28801917 	ldw	r2,100(r5)
  80a1b8:	defff604 	addi	sp,sp,-40
  80a1bc:	dd400515 	stw	r21,20(sp)
  80a1c0:	dfc00915 	stw	ra,36(sp)
  80a1c4:	df000815 	stw	fp,32(sp)
  80a1c8:	ddc00715 	stw	r23,28(sp)
  80a1cc:	dd800615 	stw	r22,24(sp)
  80a1d0:	dd000415 	stw	r20,16(sp)
  80a1d4:	dcc00315 	stw	r19,12(sp)
  80a1d8:	dc800215 	stw	r18,8(sp)
  80a1dc:	dc400115 	stw	r17,4(sp)
  80a1e0:	dc000015 	stw	r16,0(sp)
  80a1e4:	1088000c 	andi	r2,r2,8192
  80a1e8:	302b883a 	mov	r21,r6
  80a1ec:	10002e26 	beq	r2,zero,80a2a8 <__sprint_r.part.0+0xf4>
  80a1f0:	30800217 	ldw	r2,8(r6)
  80a1f4:	35800017 	ldw	r22,0(r6)
  80a1f8:	10002926 	beq	r2,zero,80a2a0 <__sprint_r.part.0+0xec>
  80a1fc:	2827883a 	mov	r19,r5
  80a200:	2029883a 	mov	r20,r4
  80a204:	b5c00104 	addi	r23,r22,4
  80a208:	04bfffc4 	movi	r18,-1
  80a20c:	bc400017 	ldw	r17,0(r23)
  80a210:	b4000017 	ldw	r16,0(r22)
  80a214:	0039883a 	mov	fp,zero
  80a218:	8822d0ba 	srli	r17,r17,2
  80a21c:	8800031e 	bne	r17,zero,80a22c <__sprint_r.part.0+0x78>
  80a220:	00001806 	br	80a284 <__sprint_r.part.0+0xd0>
  80a224:	84000104 	addi	r16,r16,4
  80a228:	8f001526 	beq	r17,fp,80a280 <__sprint_r.part.0+0xcc>
  80a22c:	81400017 	ldw	r5,0(r16)
  80a230:	980d883a 	mov	r6,r19
  80a234:	a009883a 	mov	r4,r20
  80a238:	080bbdc0 	call	80bbdc <_fputwc_r>
  80a23c:	e7000044 	addi	fp,fp,1
  80a240:	14bff81e 	bne	r2,r18,80a224 <__alt_data_end+0xff80a224>
  80a244:	9005883a 	mov	r2,r18
  80a248:	a8000215 	stw	zero,8(r21)
  80a24c:	a8000115 	stw	zero,4(r21)
  80a250:	dfc00917 	ldw	ra,36(sp)
  80a254:	df000817 	ldw	fp,32(sp)
  80a258:	ddc00717 	ldw	r23,28(sp)
  80a25c:	dd800617 	ldw	r22,24(sp)
  80a260:	dd400517 	ldw	r21,20(sp)
  80a264:	dd000417 	ldw	r20,16(sp)
  80a268:	dcc00317 	ldw	r19,12(sp)
  80a26c:	dc800217 	ldw	r18,8(sp)
  80a270:	dc400117 	ldw	r17,4(sp)
  80a274:	dc000017 	ldw	r16,0(sp)
  80a278:	dec00a04 	addi	sp,sp,40
  80a27c:	f800283a 	ret
  80a280:	a8800217 	ldw	r2,8(r21)
  80a284:	8c63883a 	add	r17,r17,r17
  80a288:	8c63883a 	add	r17,r17,r17
  80a28c:	1445c83a 	sub	r2,r2,r17
  80a290:	a8800215 	stw	r2,8(r21)
  80a294:	b5800204 	addi	r22,r22,8
  80a298:	bdc00204 	addi	r23,r23,8
  80a29c:	103fdb1e 	bne	r2,zero,80a20c <__alt_data_end+0xff80a20c>
  80a2a0:	0005883a 	mov	r2,zero
  80a2a4:	003fe806 	br	80a248 <__alt_data_end+0xff80a248>
  80a2a8:	080bcdc0 	call	80bcdc <__sfvwrite_r>
  80a2ac:	003fe606 	br	80a248 <__alt_data_end+0xff80a248>

0080a2b0 <__sprint_r>:
  80a2b0:	30c00217 	ldw	r3,8(r6)
  80a2b4:	18000126 	beq	r3,zero,80a2bc <__sprint_r+0xc>
  80a2b8:	080a1b41 	jmpi	80a1b4 <__sprint_r.part.0>
  80a2bc:	30000115 	stw	zero,4(r6)
  80a2c0:	0005883a 	mov	r2,zero
  80a2c4:	f800283a 	ret

0080a2c8 <___vfiprintf_internal_r>:
  80a2c8:	deffc904 	addi	sp,sp,-220
  80a2cc:	df003515 	stw	fp,212(sp)
  80a2d0:	dd003115 	stw	r20,196(sp)
  80a2d4:	dfc03615 	stw	ra,216(sp)
  80a2d8:	ddc03415 	stw	r23,208(sp)
  80a2dc:	dd803315 	stw	r22,204(sp)
  80a2e0:	dd403215 	stw	r21,200(sp)
  80a2e4:	dcc03015 	stw	r19,192(sp)
  80a2e8:	dc802f15 	stw	r18,188(sp)
  80a2ec:	dc402e15 	stw	r17,184(sp)
  80a2f0:	dc002d15 	stw	r16,180(sp)
  80a2f4:	d9002015 	stw	r4,128(sp)
  80a2f8:	d9c02215 	stw	r7,136(sp)
  80a2fc:	2829883a 	mov	r20,r5
  80a300:	3039883a 	mov	fp,r6
  80a304:	20000226 	beq	r4,zero,80a310 <___vfiprintf_internal_r+0x48>
  80a308:	20800e17 	ldw	r2,56(r4)
  80a30c:	1000cf26 	beq	r2,zero,80a64c <___vfiprintf_internal_r+0x384>
  80a310:	a080030b 	ldhu	r2,12(r20)
  80a314:	10c8000c 	andi	r3,r2,8192
  80a318:	1800061e 	bne	r3,zero,80a334 <___vfiprintf_internal_r+0x6c>
  80a31c:	a1001917 	ldw	r4,100(r20)
  80a320:	00f7ffc4 	movi	r3,-8193
  80a324:	10880014 	ori	r2,r2,8192
  80a328:	20c6703a 	and	r3,r4,r3
  80a32c:	a080030d 	sth	r2,12(r20)
  80a330:	a0c01915 	stw	r3,100(r20)
  80a334:	10c0020c 	andi	r3,r2,8
  80a338:	1800a926 	beq	r3,zero,80a5e0 <___vfiprintf_internal_r+0x318>
  80a33c:	a0c00417 	ldw	r3,16(r20)
  80a340:	1800a726 	beq	r3,zero,80a5e0 <___vfiprintf_internal_r+0x318>
  80a344:	1080068c 	andi	r2,r2,26
  80a348:	00c00284 	movi	r3,10
  80a34c:	10c0ac26 	beq	r2,r3,80a600 <___vfiprintf_internal_r+0x338>
  80a350:	da801a04 	addi	r10,sp,104
  80a354:	da801e15 	stw	r10,120(sp)
  80a358:	d8801e17 	ldw	r2,120(sp)
  80a35c:	da8019c4 	addi	r10,sp,103
  80a360:	05802074 	movhi	r22,129
  80a364:	05c02074 	movhi	r23,129
  80a368:	da801f15 	stw	r10,124(sp)
  80a36c:	1295c83a 	sub	r10,r2,r10
  80a370:	b584aa04 	addi	r22,r22,4776
  80a374:	bdc4a604 	addi	r23,r23,4760
  80a378:	dec01a15 	stw	sp,104(sp)
  80a37c:	d8001c15 	stw	zero,112(sp)
  80a380:	d8001b15 	stw	zero,108(sp)
  80a384:	d8002615 	stw	zero,152(sp)
  80a388:	d8002315 	stw	zero,140(sp)
  80a38c:	da802715 	stw	r10,156(sp)
  80a390:	d811883a 	mov	r8,sp
  80a394:	dd002115 	stw	r20,132(sp)
  80a398:	e021883a 	mov	r16,fp
  80a39c:	80800007 	ldb	r2,0(r16)
  80a3a0:	1003ea26 	beq	r2,zero,80b34c <___vfiprintf_internal_r+0x1084>
  80a3a4:	00c00944 	movi	r3,37
  80a3a8:	8025883a 	mov	r18,r16
  80a3ac:	10c0021e 	bne	r2,r3,80a3b8 <___vfiprintf_internal_r+0xf0>
  80a3b0:	00001606 	br	80a40c <___vfiprintf_internal_r+0x144>
  80a3b4:	10c00326 	beq	r2,r3,80a3c4 <___vfiprintf_internal_r+0xfc>
  80a3b8:	94800044 	addi	r18,r18,1
  80a3bc:	90800007 	ldb	r2,0(r18)
  80a3c0:	103ffc1e 	bne	r2,zero,80a3b4 <__alt_data_end+0xff80a3b4>
  80a3c4:	9423c83a 	sub	r17,r18,r16
  80a3c8:	88001026 	beq	r17,zero,80a40c <___vfiprintf_internal_r+0x144>
  80a3cc:	d8c01c17 	ldw	r3,112(sp)
  80a3d0:	d8801b17 	ldw	r2,108(sp)
  80a3d4:	44000015 	stw	r16,0(r8)
  80a3d8:	88c7883a 	add	r3,r17,r3
  80a3dc:	10800044 	addi	r2,r2,1
  80a3e0:	44400115 	stw	r17,4(r8)
  80a3e4:	d8c01c15 	stw	r3,112(sp)
  80a3e8:	d8801b15 	stw	r2,108(sp)
  80a3ec:	010001c4 	movi	r4,7
  80a3f0:	2080760e 	bge	r4,r2,80a5cc <___vfiprintf_internal_r+0x304>
  80a3f4:	1803821e 	bne	r3,zero,80b200 <___vfiprintf_internal_r+0xf38>
  80a3f8:	da802317 	ldw	r10,140(sp)
  80a3fc:	d8001b15 	stw	zero,108(sp)
  80a400:	d811883a 	mov	r8,sp
  80a404:	5455883a 	add	r10,r10,r17
  80a408:	da802315 	stw	r10,140(sp)
  80a40c:	90800007 	ldb	r2,0(r18)
  80a410:	10044626 	beq	r2,zero,80b52c <___vfiprintf_internal_r+0x1264>
  80a414:	90c00047 	ldb	r3,1(r18)
  80a418:	94000044 	addi	r16,r18,1
  80a41c:	d8001d85 	stb	zero,118(sp)
  80a420:	0009883a 	mov	r4,zero
  80a424:	000f883a 	mov	r7,zero
  80a428:	027fffc4 	movi	r9,-1
  80a42c:	0023883a 	mov	r17,zero
  80a430:	0029883a 	mov	r20,zero
  80a434:	01401604 	movi	r5,88
  80a438:	01800244 	movi	r6,9
  80a43c:	03400a84 	movi	r13,42
  80a440:	03001b04 	movi	r12,108
  80a444:	84000044 	addi	r16,r16,1
  80a448:	18bff804 	addi	r2,r3,-32
  80a44c:	28827336 	bltu	r5,r2,80ae1c <___vfiprintf_internal_r+0xb54>
  80a450:	100490ba 	slli	r2,r2,2
  80a454:	02802074 	movhi	r10,129
  80a458:	52a91a04 	addi	r10,r10,-23448
  80a45c:	1285883a 	add	r2,r2,r10
  80a460:	10800017 	ldw	r2,0(r2)
  80a464:	1000683a 	jmp	r2
  80a468:	0080ab50 	cmplti	r2,zero,685
  80a46c:	0080ae1c 	xori	r2,zero,696
  80a470:	0080ae1c 	xori	r2,zero,696
  80a474:	0080ab70 	cmpltui	r2,zero,685
  80a478:	0080ae1c 	xori	r2,zero,696
  80a47c:	0080ae1c 	xori	r2,zero,696
  80a480:	0080ae1c 	xori	r2,zero,696
  80a484:	0080ae1c 	xori	r2,zero,696
  80a488:	0080ae1c 	xori	r2,zero,696
  80a48c:	0080ae1c 	xori	r2,zero,696
  80a490:	0080ad58 	cmpnei	r2,zero,693
  80a494:	0080ad74 	movhi	r2,693
  80a498:	0080ae1c 	xori	r2,zero,696
  80a49c:	0080a65c 	xori	r2,zero,665
  80a4a0:	0080ad84 	movi	r2,694
  80a4a4:	0080ae1c 	xori	r2,zero,696
  80a4a8:	0080ab7c 	xorhi	r2,zero,685
  80a4ac:	0080ab88 	cmpgei	r2,zero,686
  80a4b0:	0080ab88 	cmpgei	r2,zero,686
  80a4b4:	0080ab88 	cmpgei	r2,zero,686
  80a4b8:	0080ab88 	cmpgei	r2,zero,686
  80a4bc:	0080ab88 	cmpgei	r2,zero,686
  80a4c0:	0080ab88 	cmpgei	r2,zero,686
  80a4c4:	0080ab88 	cmpgei	r2,zero,686
  80a4c8:	0080ab88 	cmpgei	r2,zero,686
  80a4cc:	0080ab88 	cmpgei	r2,zero,686
  80a4d0:	0080ae1c 	xori	r2,zero,696
  80a4d4:	0080ae1c 	xori	r2,zero,696
  80a4d8:	0080ae1c 	xori	r2,zero,696
  80a4dc:	0080ae1c 	xori	r2,zero,696
  80a4e0:	0080ae1c 	xori	r2,zero,696
  80a4e4:	0080ae1c 	xori	r2,zero,696
  80a4e8:	0080ae1c 	xori	r2,zero,696
  80a4ec:	0080ae1c 	xori	r2,zero,696
  80a4f0:	0080ae1c 	xori	r2,zero,696
  80a4f4:	0080ae1c 	xori	r2,zero,696
  80a4f8:	0080abb4 	movhi	r2,686
  80a4fc:	0080ae1c 	xori	r2,zero,696
  80a500:	0080ae1c 	xori	r2,zero,696
  80a504:	0080ae1c 	xori	r2,zero,696
  80a508:	0080ae1c 	xori	r2,zero,696
  80a50c:	0080ae1c 	xori	r2,zero,696
  80a510:	0080ae1c 	xori	r2,zero,696
  80a514:	0080ae1c 	xori	r2,zero,696
  80a518:	0080ae1c 	xori	r2,zero,696
  80a51c:	0080ae1c 	xori	r2,zero,696
  80a520:	0080ae1c 	xori	r2,zero,696
  80a524:	0080abec 	andhi	r2,zero,687
  80a528:	0080ae1c 	xori	r2,zero,696
  80a52c:	0080ae1c 	xori	r2,zero,696
  80a530:	0080ae1c 	xori	r2,zero,696
  80a534:	0080ae1c 	xori	r2,zero,696
  80a538:	0080ae1c 	xori	r2,zero,696
  80a53c:	0080ac44 	movi	r2,689
  80a540:	0080ae1c 	xori	r2,zero,696
  80a544:	0080ae1c 	xori	r2,zero,696
  80a548:	0080acb4 	movhi	r2,690
  80a54c:	0080ae1c 	xori	r2,zero,696
  80a550:	0080ae1c 	xori	r2,zero,696
  80a554:	0080ae1c 	xori	r2,zero,696
  80a558:	0080ae1c 	xori	r2,zero,696
  80a55c:	0080ae1c 	xori	r2,zero,696
  80a560:	0080ae1c 	xori	r2,zero,696
  80a564:	0080ae1c 	xori	r2,zero,696
  80a568:	0080ae1c 	xori	r2,zero,696
  80a56c:	0080ae1c 	xori	r2,zero,696
  80a570:	0080ae1c 	xori	r2,zero,696
  80a574:	0080aa60 	cmpeqi	r2,zero,681
  80a578:	0080aa8c 	andi	r2,zero,682
  80a57c:	0080ae1c 	xori	r2,zero,696
  80a580:	0080ae1c 	xori	r2,zero,696
  80a584:	0080ae1c 	xori	r2,zero,696
  80a588:	0080adc4 	movi	r2,695
  80a58c:	0080aa8c 	andi	r2,zero,682
  80a590:	0080ae1c 	xori	r2,zero,696
  80a594:	0080ae1c 	xori	r2,zero,696
  80a598:	0080a920 	cmpeqi	r2,zero,676
  80a59c:	0080ae1c 	xori	r2,zero,696
  80a5a0:	0080a930 	cmpltui	r2,zero,676
  80a5a4:	0080a96c 	andhi	r2,zero,677
  80a5a8:	0080a668 	cmpgeui	r2,zero,665
  80a5ac:	0080a914 	movui	r2,676
  80a5b0:	0080ae1c 	xori	r2,zero,696
  80a5b4:	0080acf0 	cmpltui	r2,zero,691
  80a5b8:	0080ae1c 	xori	r2,zero,696
  80a5bc:	0080ad48 	cmpgei	r2,zero,693
  80a5c0:	0080ae1c 	xori	r2,zero,696
  80a5c4:	0080ae1c 	xori	r2,zero,696
  80a5c8:	0080aa0c 	andi	r2,zero,680
  80a5cc:	42000204 	addi	r8,r8,8
  80a5d0:	da802317 	ldw	r10,140(sp)
  80a5d4:	5455883a 	add	r10,r10,r17
  80a5d8:	da802315 	stw	r10,140(sp)
  80a5dc:	003f8b06 	br	80a40c <__alt_data_end+0xff80a40c>
  80a5e0:	d9002017 	ldw	r4,128(sp)
  80a5e4:	a00b883a 	mov	r5,r20
  80a5e8:	0805a680 	call	805a68 <__swsetup_r>
  80a5ec:	1003b11e 	bne	r2,zero,80b4b4 <___vfiprintf_internal_r+0x11ec>
  80a5f0:	a080030b 	ldhu	r2,12(r20)
  80a5f4:	00c00284 	movi	r3,10
  80a5f8:	1080068c 	andi	r2,r2,26
  80a5fc:	10ff541e 	bne	r2,r3,80a350 <__alt_data_end+0xff80a350>
  80a600:	a080038f 	ldh	r2,14(r20)
  80a604:	103f5216 	blt	r2,zero,80a350 <__alt_data_end+0xff80a350>
  80a608:	d9c02217 	ldw	r7,136(sp)
  80a60c:	d9002017 	ldw	r4,128(sp)
  80a610:	e00d883a 	mov	r6,fp
  80a614:	a00b883a 	mov	r5,r20
  80a618:	080b7400 	call	80b740 <__sbprintf>
  80a61c:	dfc03617 	ldw	ra,216(sp)
  80a620:	df003517 	ldw	fp,212(sp)
  80a624:	ddc03417 	ldw	r23,208(sp)
  80a628:	dd803317 	ldw	r22,204(sp)
  80a62c:	dd403217 	ldw	r21,200(sp)
  80a630:	dd003117 	ldw	r20,196(sp)
  80a634:	dcc03017 	ldw	r19,192(sp)
  80a638:	dc802f17 	ldw	r18,188(sp)
  80a63c:	dc402e17 	ldw	r17,184(sp)
  80a640:	dc002d17 	ldw	r16,180(sp)
  80a644:	dec03704 	addi	sp,sp,220
  80a648:	f800283a 	ret
  80a64c:	0807a3c0 	call	807a3c <__sinit>
  80a650:	003f2f06 	br	80a310 <__alt_data_end+0xff80a310>
  80a654:	0463c83a 	sub	r17,zero,r17
  80a658:	d8802215 	stw	r2,136(sp)
  80a65c:	a5000114 	ori	r20,r20,4
  80a660:	80c00007 	ldb	r3,0(r16)
  80a664:	003f7706 	br	80a444 <__alt_data_end+0xff80a444>
  80a668:	00800c04 	movi	r2,48
  80a66c:	da802217 	ldw	r10,136(sp)
  80a670:	d8801d05 	stb	r2,116(sp)
  80a674:	00801e04 	movi	r2,120
  80a678:	d8801d45 	stb	r2,117(sp)
  80a67c:	d8001d85 	stb	zero,118(sp)
  80a680:	50c00104 	addi	r3,r10,4
  80a684:	54800017 	ldw	r18,0(r10)
  80a688:	0027883a 	mov	r19,zero
  80a68c:	a0800094 	ori	r2,r20,2
  80a690:	48030b16 	blt	r9,zero,80b2c0 <___vfiprintf_internal_r+0xff8>
  80a694:	00bfdfc4 	movi	r2,-129
  80a698:	a096703a 	and	r11,r20,r2
  80a69c:	d8c02215 	stw	r3,136(sp)
  80a6a0:	5d000094 	ori	r20,r11,2
  80a6a4:	90032b1e 	bne	r18,zero,80b354 <___vfiprintf_internal_r+0x108c>
  80a6a8:	00802074 	movhi	r2,129
  80a6ac:	10844504 	addi	r2,r2,4372
  80a6b0:	d8802615 	stw	r2,152(sp)
  80a6b4:	0039883a 	mov	fp,zero
  80a6b8:	48017b1e 	bne	r9,zero,80aca8 <___vfiprintf_internal_r+0x9e0>
  80a6bc:	0013883a 	mov	r9,zero
  80a6c0:	0027883a 	mov	r19,zero
  80a6c4:	dd401a04 	addi	r21,sp,104
  80a6c8:	4825883a 	mov	r18,r9
  80a6cc:	4cc0010e 	bge	r9,r19,80a6d4 <___vfiprintf_internal_r+0x40c>
  80a6d0:	9825883a 	mov	r18,r19
  80a6d4:	e7003fcc 	andi	fp,fp,255
  80a6d8:	e700201c 	xori	fp,fp,128
  80a6dc:	e73fe004 	addi	fp,fp,-128
  80a6e0:	e0000126 	beq	fp,zero,80a6e8 <___vfiprintf_internal_r+0x420>
  80a6e4:	94800044 	addi	r18,r18,1
  80a6e8:	a380008c 	andi	r14,r20,2
  80a6ec:	70000126 	beq	r14,zero,80a6f4 <___vfiprintf_internal_r+0x42c>
  80a6f0:	94800084 	addi	r18,r18,2
  80a6f4:	a700210c 	andi	fp,r20,132
  80a6f8:	e001df1e 	bne	fp,zero,80ae78 <___vfiprintf_internal_r+0xbb0>
  80a6fc:	8c87c83a 	sub	r3,r17,r18
  80a700:	00c1dd0e 	bge	zero,r3,80ae78 <___vfiprintf_internal_r+0xbb0>
  80a704:	01c00404 	movi	r7,16
  80a708:	d8801c17 	ldw	r2,112(sp)
  80a70c:	38c3ad0e 	bge	r7,r3,80b5c4 <___vfiprintf_internal_r+0x12fc>
  80a710:	02802074 	movhi	r10,129
  80a714:	5284aa04 	addi	r10,r10,4776
  80a718:	dc002915 	stw	r16,164(sp)
  80a71c:	d9801b17 	ldw	r6,108(sp)
  80a720:	da802415 	stw	r10,144(sp)
  80a724:	03c001c4 	movi	r15,7
  80a728:	da402515 	stw	r9,148(sp)
  80a72c:	db802815 	stw	r14,160(sp)
  80a730:	1821883a 	mov	r16,r3
  80a734:	00000506 	br	80a74c <___vfiprintf_internal_r+0x484>
  80a738:	31400084 	addi	r5,r6,2
  80a73c:	42000204 	addi	r8,r8,8
  80a740:	200d883a 	mov	r6,r4
  80a744:	843ffc04 	addi	r16,r16,-16
  80a748:	3c000d0e 	bge	r7,r16,80a780 <___vfiprintf_internal_r+0x4b8>
  80a74c:	10800404 	addi	r2,r2,16
  80a750:	31000044 	addi	r4,r6,1
  80a754:	45800015 	stw	r22,0(r8)
  80a758:	41c00115 	stw	r7,4(r8)
  80a75c:	d8801c15 	stw	r2,112(sp)
  80a760:	d9001b15 	stw	r4,108(sp)
  80a764:	793ff40e 	bge	r15,r4,80a738 <__alt_data_end+0xff80a738>
  80a768:	1001b51e 	bne	r2,zero,80ae40 <___vfiprintf_internal_r+0xb78>
  80a76c:	843ffc04 	addi	r16,r16,-16
  80a770:	000d883a 	mov	r6,zero
  80a774:	01400044 	movi	r5,1
  80a778:	d811883a 	mov	r8,sp
  80a77c:	3c3ff316 	blt	r7,r16,80a74c <__alt_data_end+0xff80a74c>
  80a780:	8007883a 	mov	r3,r16
  80a784:	da402517 	ldw	r9,148(sp)
  80a788:	db802817 	ldw	r14,160(sp)
  80a78c:	dc002917 	ldw	r16,164(sp)
  80a790:	da802417 	ldw	r10,144(sp)
  80a794:	1885883a 	add	r2,r3,r2
  80a798:	40c00115 	stw	r3,4(r8)
  80a79c:	42800015 	stw	r10,0(r8)
  80a7a0:	d8801c15 	stw	r2,112(sp)
  80a7a4:	d9401b15 	stw	r5,108(sp)
  80a7a8:	00c001c4 	movi	r3,7
  80a7ac:	19426016 	blt	r3,r5,80b130 <___vfiprintf_internal_r+0xe68>
  80a7b0:	d8c01d87 	ldb	r3,118(sp)
  80a7b4:	42000204 	addi	r8,r8,8
  80a7b8:	29000044 	addi	r4,r5,1
  80a7bc:	1801b31e 	bne	r3,zero,80ae8c <___vfiprintf_internal_r+0xbc4>
  80a7c0:	7001c026 	beq	r14,zero,80aec4 <___vfiprintf_internal_r+0xbfc>
  80a7c4:	d8c01d04 	addi	r3,sp,116
  80a7c8:	10800084 	addi	r2,r2,2
  80a7cc:	40c00015 	stw	r3,0(r8)
  80a7d0:	00c00084 	movi	r3,2
  80a7d4:	40c00115 	stw	r3,4(r8)
  80a7d8:	d8801c15 	stw	r2,112(sp)
  80a7dc:	d9001b15 	stw	r4,108(sp)
  80a7e0:	00c001c4 	movi	r3,7
  80a7e4:	1902650e 	bge	r3,r4,80b17c <___vfiprintf_internal_r+0xeb4>
  80a7e8:	10029a1e 	bne	r2,zero,80b254 <___vfiprintf_internal_r+0xf8c>
  80a7ec:	00c02004 	movi	r3,128
  80a7f0:	01000044 	movi	r4,1
  80a7f4:	000b883a 	mov	r5,zero
  80a7f8:	d811883a 	mov	r8,sp
  80a7fc:	e0c1b31e 	bne	fp,r3,80aecc <___vfiprintf_internal_r+0xc04>
  80a800:	8cb9c83a 	sub	fp,r17,r18
  80a804:	0701b10e 	bge	zero,fp,80aecc <___vfiprintf_internal_r+0xc04>
  80a808:	01c00404 	movi	r7,16
  80a80c:	3f03890e 	bge	r7,fp,80b634 <___vfiprintf_internal_r+0x136c>
  80a810:	00c02074 	movhi	r3,129
  80a814:	18c4a604 	addi	r3,r3,4760
  80a818:	d8c02415 	stw	r3,144(sp)
  80a81c:	8007883a 	mov	r3,r16
  80a820:	034001c4 	movi	r13,7
  80a824:	e021883a 	mov	r16,fp
  80a828:	da402515 	stw	r9,148(sp)
  80a82c:	1839883a 	mov	fp,r3
  80a830:	00000506 	br	80a848 <___vfiprintf_internal_r+0x580>
  80a834:	29800084 	addi	r6,r5,2
  80a838:	42000204 	addi	r8,r8,8
  80a83c:	180b883a 	mov	r5,r3
  80a840:	843ffc04 	addi	r16,r16,-16
  80a844:	3c000d0e 	bge	r7,r16,80a87c <___vfiprintf_internal_r+0x5b4>
  80a848:	10800404 	addi	r2,r2,16
  80a84c:	28c00044 	addi	r3,r5,1
  80a850:	45c00015 	stw	r23,0(r8)
  80a854:	41c00115 	stw	r7,4(r8)
  80a858:	d8801c15 	stw	r2,112(sp)
  80a85c:	d8c01b15 	stw	r3,108(sp)
  80a860:	68fff40e 	bge	r13,r3,80a834 <__alt_data_end+0xff80a834>
  80a864:	1002241e 	bne	r2,zero,80b0f8 <___vfiprintf_internal_r+0xe30>
  80a868:	843ffc04 	addi	r16,r16,-16
  80a86c:	01800044 	movi	r6,1
  80a870:	000b883a 	mov	r5,zero
  80a874:	d811883a 	mov	r8,sp
  80a878:	3c3ff316 	blt	r7,r16,80a848 <__alt_data_end+0xff80a848>
  80a87c:	da402517 	ldw	r9,148(sp)
  80a880:	e007883a 	mov	r3,fp
  80a884:	8039883a 	mov	fp,r16
  80a888:	1821883a 	mov	r16,r3
  80a88c:	d8c02417 	ldw	r3,144(sp)
  80a890:	1705883a 	add	r2,r2,fp
  80a894:	47000115 	stw	fp,4(r8)
  80a898:	40c00015 	stw	r3,0(r8)
  80a89c:	d8801c15 	stw	r2,112(sp)
  80a8a0:	d9801b15 	stw	r6,108(sp)
  80a8a4:	00c001c4 	movi	r3,7
  80a8a8:	19827616 	blt	r3,r6,80b284 <___vfiprintf_internal_r+0xfbc>
  80a8ac:	4cf9c83a 	sub	fp,r9,r19
  80a8b0:	42000204 	addi	r8,r8,8
  80a8b4:	31000044 	addi	r4,r6,1
  80a8b8:	300b883a 	mov	r5,r6
  80a8bc:	07018516 	blt	zero,fp,80aed4 <___vfiprintf_internal_r+0xc0c>
  80a8c0:	9885883a 	add	r2,r19,r2
  80a8c4:	45400015 	stw	r21,0(r8)
  80a8c8:	44c00115 	stw	r19,4(r8)
  80a8cc:	d8801c15 	stw	r2,112(sp)
  80a8d0:	d9001b15 	stw	r4,108(sp)
  80a8d4:	00c001c4 	movi	r3,7
  80a8d8:	1901dd0e 	bge	r3,r4,80b050 <___vfiprintf_internal_r+0xd88>
  80a8dc:	1002401e 	bne	r2,zero,80b1e0 <___vfiprintf_internal_r+0xf18>
  80a8e0:	d8001b15 	stw	zero,108(sp)
  80a8e4:	a2c0010c 	andi	r11,r20,4
  80a8e8:	58000226 	beq	r11,zero,80a8f4 <___vfiprintf_internal_r+0x62c>
  80a8ec:	8ca7c83a 	sub	r19,r17,r18
  80a8f0:	04c2f216 	blt	zero,r19,80b4bc <___vfiprintf_internal_r+0x11f4>
  80a8f4:	8c80010e 	bge	r17,r18,80a8fc <___vfiprintf_internal_r+0x634>
  80a8f8:	9023883a 	mov	r17,r18
  80a8fc:	da802317 	ldw	r10,140(sp)
  80a900:	5455883a 	add	r10,r10,r17
  80a904:	da802315 	stw	r10,140(sp)
  80a908:	d8001b15 	stw	zero,108(sp)
  80a90c:	d811883a 	mov	r8,sp
  80a910:	003ea206 	br	80a39c <__alt_data_end+0xff80a39c>
  80a914:	a5000814 	ori	r20,r20,32
  80a918:	80c00007 	ldb	r3,0(r16)
  80a91c:	003ec906 	br	80a444 <__alt_data_end+0xff80a444>
  80a920:	80c00007 	ldb	r3,0(r16)
  80a924:	1b030926 	beq	r3,r12,80b54c <___vfiprintf_internal_r+0x1284>
  80a928:	a5000414 	ori	r20,r20,16
  80a92c:	003ec506 	br	80a444 <__alt_data_end+0xff80a444>
  80a930:	21003fcc 	andi	r4,r4,255
  80a934:	20035e1e 	bne	r4,zero,80b6b0 <___vfiprintf_internal_r+0x13e8>
  80a938:	a080080c 	andi	r2,r20,32
  80a93c:	1002a526 	beq	r2,zero,80b3d4 <___vfiprintf_internal_r+0x110c>
  80a940:	da802217 	ldw	r10,136(sp)
  80a944:	50800017 	ldw	r2,0(r10)
  80a948:	da802317 	ldw	r10,140(sp)
  80a94c:	5007d7fa 	srai	r3,r10,31
  80a950:	da802217 	ldw	r10,136(sp)
  80a954:	10c00115 	stw	r3,4(r2)
  80a958:	52800104 	addi	r10,r10,4
  80a95c:	da802215 	stw	r10,136(sp)
  80a960:	da802317 	ldw	r10,140(sp)
  80a964:	12800015 	stw	r10,0(r2)
  80a968:	003e8c06 	br	80a39c <__alt_data_end+0xff80a39c>
  80a96c:	21003fcc 	andi	r4,r4,255
  80a970:	2003511e 	bne	r4,zero,80b6b8 <___vfiprintf_internal_r+0x13f0>
  80a974:	a080080c 	andi	r2,r20,32
  80a978:	1000a126 	beq	r2,zero,80ac00 <___vfiprintf_internal_r+0x938>
  80a97c:	da802217 	ldw	r10,136(sp)
  80a980:	d8001d85 	stb	zero,118(sp)
  80a984:	50800204 	addi	r2,r10,8
  80a988:	54800017 	ldw	r18,0(r10)
  80a98c:	54c00117 	ldw	r19,4(r10)
  80a990:	4802b416 	blt	r9,zero,80b464 <___vfiprintf_internal_r+0x119c>
  80a994:	013fdfc4 	movi	r4,-129
  80a998:	94c6b03a 	or	r3,r18,r19
  80a99c:	d8802215 	stw	r2,136(sp)
  80a9a0:	a128703a 	and	r20,r20,r4
  80a9a4:	1800a226 	beq	r3,zero,80ac30 <___vfiprintf_internal_r+0x968>
  80a9a8:	0039883a 	mov	fp,zero
  80a9ac:	dd401a04 	addi	r21,sp,104
  80a9b0:	9006d0fa 	srli	r3,r18,3
  80a9b4:	9808977a 	slli	r4,r19,29
  80a9b8:	9826d0fa 	srli	r19,r19,3
  80a9bc:	948001cc 	andi	r18,r18,7
  80a9c0:	90800c04 	addi	r2,r18,48
  80a9c4:	ad7fffc4 	addi	r21,r21,-1
  80a9c8:	20e4b03a 	or	r18,r4,r3
  80a9cc:	a8800005 	stb	r2,0(r21)
  80a9d0:	94c6b03a 	or	r3,r18,r19
  80a9d4:	183ff61e 	bne	r3,zero,80a9b0 <__alt_data_end+0xff80a9b0>
  80a9d8:	a0c0004c 	andi	r3,r20,1
  80a9dc:	18005926 	beq	r3,zero,80ab44 <___vfiprintf_internal_r+0x87c>
  80a9e0:	10803fcc 	andi	r2,r2,255
  80a9e4:	1080201c 	xori	r2,r2,128
  80a9e8:	10bfe004 	addi	r2,r2,-128
  80a9ec:	00c00c04 	movi	r3,48
  80a9f0:	10c05426 	beq	r2,r3,80ab44 <___vfiprintf_internal_r+0x87c>
  80a9f4:	da801e17 	ldw	r10,120(sp)
  80a9f8:	a8bfffc4 	addi	r2,r21,-1
  80a9fc:	a8ffffc5 	stb	r3,-1(r21)
  80aa00:	50a7c83a 	sub	r19,r10,r2
  80aa04:	102b883a 	mov	r21,r2
  80aa08:	003f2f06 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80aa0c:	21003fcc 	andi	r4,r4,255
  80aa10:	2003421e 	bne	r4,zero,80b71c <___vfiprintf_internal_r+0x1454>
  80aa14:	00802074 	movhi	r2,129
  80aa18:	10844504 	addi	r2,r2,4372
  80aa1c:	d8802615 	stw	r2,152(sp)
  80aa20:	a080080c 	andi	r2,r20,32
  80aa24:	1000aa26 	beq	r2,zero,80acd0 <___vfiprintf_internal_r+0xa08>
  80aa28:	da802217 	ldw	r10,136(sp)
  80aa2c:	54800017 	ldw	r18,0(r10)
  80aa30:	54c00117 	ldw	r19,4(r10)
  80aa34:	52800204 	addi	r10,r10,8
  80aa38:	da802215 	stw	r10,136(sp)
  80aa3c:	a080004c 	andi	r2,r20,1
  80aa40:	1001d226 	beq	r2,zero,80b18c <___vfiprintf_internal_r+0xec4>
  80aa44:	94c4b03a 	or	r2,r18,r19
  80aa48:	1002351e 	bne	r2,zero,80b320 <___vfiprintf_internal_r+0x1058>
  80aa4c:	d8001d85 	stb	zero,118(sp)
  80aa50:	48022216 	blt	r9,zero,80b2dc <___vfiprintf_internal_r+0x1014>
  80aa54:	00bfdfc4 	movi	r2,-129
  80aa58:	a0a8703a 	and	r20,r20,r2
  80aa5c:	003f1506 	br	80a6b4 <__alt_data_end+0xff80a6b4>
  80aa60:	da802217 	ldw	r10,136(sp)
  80aa64:	04800044 	movi	r18,1
  80aa68:	d8001d85 	stb	zero,118(sp)
  80aa6c:	50800017 	ldw	r2,0(r10)
  80aa70:	52800104 	addi	r10,r10,4
  80aa74:	da802215 	stw	r10,136(sp)
  80aa78:	d8801005 	stb	r2,64(sp)
  80aa7c:	9027883a 	mov	r19,r18
  80aa80:	dd401004 	addi	r21,sp,64
  80aa84:	0013883a 	mov	r9,zero
  80aa88:	003f1706 	br	80a6e8 <__alt_data_end+0xff80a6e8>
  80aa8c:	21003fcc 	andi	r4,r4,255
  80aa90:	2003201e 	bne	r4,zero,80b714 <___vfiprintf_internal_r+0x144c>
  80aa94:	a080080c 	andi	r2,r20,32
  80aa98:	10004b26 	beq	r2,zero,80abc8 <___vfiprintf_internal_r+0x900>
  80aa9c:	da802217 	ldw	r10,136(sp)
  80aaa0:	50800117 	ldw	r2,4(r10)
  80aaa4:	54800017 	ldw	r18,0(r10)
  80aaa8:	52800204 	addi	r10,r10,8
  80aaac:	da802215 	stw	r10,136(sp)
  80aab0:	1027883a 	mov	r19,r2
  80aab4:	10022c16 	blt	r2,zero,80b368 <___vfiprintf_internal_r+0x10a0>
  80aab8:	df001d83 	ldbu	fp,118(sp)
  80aabc:	48007216 	blt	r9,zero,80ac88 <___vfiprintf_internal_r+0x9c0>
  80aac0:	00ffdfc4 	movi	r3,-129
  80aac4:	94c4b03a 	or	r2,r18,r19
  80aac8:	a0e8703a 	and	r20,r20,r3
  80aacc:	1000cc26 	beq	r2,zero,80ae00 <___vfiprintf_internal_r+0xb38>
  80aad0:	98021026 	beq	r19,zero,80b314 <___vfiprintf_internal_r+0x104c>
  80aad4:	dc402415 	stw	r17,144(sp)
  80aad8:	dc002515 	stw	r16,148(sp)
  80aadc:	9823883a 	mov	r17,r19
  80aae0:	9021883a 	mov	r16,r18
  80aae4:	dd401a04 	addi	r21,sp,104
  80aae8:	4825883a 	mov	r18,r9
  80aaec:	4027883a 	mov	r19,r8
  80aaf0:	8009883a 	mov	r4,r16
  80aaf4:	880b883a 	mov	r5,r17
  80aaf8:	01800284 	movi	r6,10
  80aafc:	000f883a 	mov	r7,zero
  80ab00:	080d2240 	call	80d224 <__umoddi3>
  80ab04:	10800c04 	addi	r2,r2,48
  80ab08:	ad7fffc4 	addi	r21,r21,-1
  80ab0c:	8009883a 	mov	r4,r16
  80ab10:	880b883a 	mov	r5,r17
  80ab14:	a8800005 	stb	r2,0(r21)
  80ab18:	01800284 	movi	r6,10
  80ab1c:	000f883a 	mov	r7,zero
  80ab20:	080ccac0 	call	80ccac <__udivdi3>
  80ab24:	1021883a 	mov	r16,r2
  80ab28:	10c4b03a 	or	r2,r2,r3
  80ab2c:	1823883a 	mov	r17,r3
  80ab30:	103fef1e 	bne	r2,zero,80aaf0 <__alt_data_end+0xff80aaf0>
  80ab34:	dc402417 	ldw	r17,144(sp)
  80ab38:	dc002517 	ldw	r16,148(sp)
  80ab3c:	9013883a 	mov	r9,r18
  80ab40:	9811883a 	mov	r8,r19
  80ab44:	da801e17 	ldw	r10,120(sp)
  80ab48:	5567c83a 	sub	r19,r10,r21
  80ab4c:	003ede06 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80ab50:	38803fcc 	andi	r2,r7,255
  80ab54:	1080201c 	xori	r2,r2,128
  80ab58:	10bfe004 	addi	r2,r2,-128
  80ab5c:	1002371e 	bne	r2,zero,80b43c <___vfiprintf_internal_r+0x1174>
  80ab60:	01000044 	movi	r4,1
  80ab64:	01c00804 	movi	r7,32
  80ab68:	80c00007 	ldb	r3,0(r16)
  80ab6c:	003e3506 	br	80a444 <__alt_data_end+0xff80a444>
  80ab70:	a5000054 	ori	r20,r20,1
  80ab74:	80c00007 	ldb	r3,0(r16)
  80ab78:	003e3206 	br	80a444 <__alt_data_end+0xff80a444>
  80ab7c:	a5002014 	ori	r20,r20,128
  80ab80:	80c00007 	ldb	r3,0(r16)
  80ab84:	003e2f06 	br	80a444 <__alt_data_end+0xff80a444>
  80ab88:	8015883a 	mov	r10,r16
  80ab8c:	0023883a 	mov	r17,zero
  80ab90:	18bff404 	addi	r2,r3,-48
  80ab94:	50c00007 	ldb	r3,0(r10)
  80ab98:	8c4002a4 	muli	r17,r17,10
  80ab9c:	84000044 	addi	r16,r16,1
  80aba0:	8015883a 	mov	r10,r16
  80aba4:	1463883a 	add	r17,r2,r17
  80aba8:	18bff404 	addi	r2,r3,-48
  80abac:	30bff92e 	bgeu	r6,r2,80ab94 <__alt_data_end+0xff80ab94>
  80abb0:	003e2506 	br	80a448 <__alt_data_end+0xff80a448>
  80abb4:	21003fcc 	andi	r4,r4,255
  80abb8:	2002d41e 	bne	r4,zero,80b70c <___vfiprintf_internal_r+0x1444>
  80abbc:	a5000414 	ori	r20,r20,16
  80abc0:	a080080c 	andi	r2,r20,32
  80abc4:	103fb51e 	bne	r2,zero,80aa9c <__alt_data_end+0xff80aa9c>
  80abc8:	a080040c 	andi	r2,r20,16
  80abcc:	1001f826 	beq	r2,zero,80b3b0 <___vfiprintf_internal_r+0x10e8>
  80abd0:	da802217 	ldw	r10,136(sp)
  80abd4:	54800017 	ldw	r18,0(r10)
  80abd8:	52800104 	addi	r10,r10,4
  80abdc:	da802215 	stw	r10,136(sp)
  80abe0:	9027d7fa 	srai	r19,r18,31
  80abe4:	9805883a 	mov	r2,r19
  80abe8:	003fb206 	br	80aab4 <__alt_data_end+0xff80aab4>
  80abec:	21003fcc 	andi	r4,r4,255
  80abf0:	2002c41e 	bne	r4,zero,80b704 <___vfiprintf_internal_r+0x143c>
  80abf4:	a5000414 	ori	r20,r20,16
  80abf8:	a080080c 	andi	r2,r20,32
  80abfc:	103f5f1e 	bne	r2,zero,80a97c <__alt_data_end+0xff80a97c>
  80ac00:	a080040c 	andi	r2,r20,16
  80ac04:	10020f26 	beq	r2,zero,80b444 <___vfiprintf_internal_r+0x117c>
  80ac08:	da802217 	ldw	r10,136(sp)
  80ac0c:	d8001d85 	stb	zero,118(sp)
  80ac10:	0027883a 	mov	r19,zero
  80ac14:	50800104 	addi	r2,r10,4
  80ac18:	54800017 	ldw	r18,0(r10)
  80ac1c:	48021116 	blt	r9,zero,80b464 <___vfiprintf_internal_r+0x119c>
  80ac20:	00ffdfc4 	movi	r3,-129
  80ac24:	d8802215 	stw	r2,136(sp)
  80ac28:	a0e8703a 	and	r20,r20,r3
  80ac2c:	903f5e1e 	bne	r18,zero,80a9a8 <__alt_data_end+0xff80a9a8>
  80ac30:	0039883a 	mov	fp,zero
  80ac34:	4802a626 	beq	r9,zero,80b6d0 <___vfiprintf_internal_r+0x1408>
  80ac38:	0025883a 	mov	r18,zero
  80ac3c:	0027883a 	mov	r19,zero
  80ac40:	003f5a06 	br	80a9ac <__alt_data_end+0xff80a9ac>
  80ac44:	21003fcc 	andi	r4,r4,255
  80ac48:	20029f1e 	bne	r4,zero,80b6c8 <___vfiprintf_internal_r+0x1400>
  80ac4c:	a5000414 	ori	r20,r20,16
  80ac50:	a080080c 	andi	r2,r20,32
  80ac54:	10005e1e 	bne	r2,zero,80add0 <___vfiprintf_internal_r+0xb08>
  80ac58:	a080040c 	andi	r2,r20,16
  80ac5c:	1001a21e 	bne	r2,zero,80b2e8 <___vfiprintf_internal_r+0x1020>
  80ac60:	a080100c 	andi	r2,r20,64
  80ac64:	d8001d85 	stb	zero,118(sp)
  80ac68:	da802217 	ldw	r10,136(sp)
  80ac6c:	1002231e 	bne	r2,zero,80b4fc <___vfiprintf_internal_r+0x1234>
  80ac70:	50800104 	addi	r2,r10,4
  80ac74:	54800017 	ldw	r18,0(r10)
  80ac78:	0027883a 	mov	r19,zero
  80ac7c:	4801a00e 	bge	r9,zero,80b300 <___vfiprintf_internal_r+0x1038>
  80ac80:	d8802215 	stw	r2,136(sp)
  80ac84:	0039883a 	mov	fp,zero
  80ac88:	94c4b03a 	or	r2,r18,r19
  80ac8c:	103f901e 	bne	r2,zero,80aad0 <__alt_data_end+0xff80aad0>
  80ac90:	00800044 	movi	r2,1
  80ac94:	10803fcc 	andi	r2,r2,255
  80ac98:	00c00044 	movi	r3,1
  80ac9c:	10c05926 	beq	r2,r3,80ae04 <___vfiprintf_internal_r+0xb3c>
  80aca0:	00c00084 	movi	r3,2
  80aca4:	10ffe41e 	bne	r2,r3,80ac38 <__alt_data_end+0xff80ac38>
  80aca8:	0025883a 	mov	r18,zero
  80acac:	0027883a 	mov	r19,zero
  80acb0:	00013d06 	br	80b1a8 <___vfiprintf_internal_r+0xee0>
  80acb4:	21003fcc 	andi	r4,r4,255
  80acb8:	2002811e 	bne	r4,zero,80b6c0 <___vfiprintf_internal_r+0x13f8>
  80acbc:	00802074 	movhi	r2,129
  80acc0:	10844004 	addi	r2,r2,4352
  80acc4:	d8802615 	stw	r2,152(sp)
  80acc8:	a080080c 	andi	r2,r20,32
  80accc:	103f561e 	bne	r2,zero,80aa28 <__alt_data_end+0xff80aa28>
  80acd0:	a080040c 	andi	r2,r20,16
  80acd4:	1001d126 	beq	r2,zero,80b41c <___vfiprintf_internal_r+0x1154>
  80acd8:	da802217 	ldw	r10,136(sp)
  80acdc:	0027883a 	mov	r19,zero
  80ace0:	54800017 	ldw	r18,0(r10)
  80ace4:	52800104 	addi	r10,r10,4
  80ace8:	da802215 	stw	r10,136(sp)
  80acec:	003f5306 	br	80aa3c <__alt_data_end+0xff80aa3c>
  80acf0:	da802217 	ldw	r10,136(sp)
  80acf4:	d8001d85 	stb	zero,118(sp)
  80acf8:	55400017 	ldw	r21,0(r10)
  80acfc:	50c00104 	addi	r3,r10,4
  80ad00:	a8024226 	beq	r21,zero,80b60c <___vfiprintf_internal_r+0x1344>
  80ad04:	48021816 	blt	r9,zero,80b568 <___vfiprintf_internal_r+0x12a0>
  80ad08:	480d883a 	mov	r6,r9
  80ad0c:	000b883a 	mov	r5,zero
  80ad10:	a809883a 	mov	r4,r21
  80ad14:	d8c02a15 	stw	r3,168(sp)
  80ad18:	da002b15 	stw	r8,172(sp)
  80ad1c:	da402c15 	stw	r9,176(sp)
  80ad20:	0808aec0 	call	808aec <memchr>
  80ad24:	d8c02a17 	ldw	r3,168(sp)
  80ad28:	da002b17 	ldw	r8,172(sp)
  80ad2c:	da402c17 	ldw	r9,176(sp)
  80ad30:	10024826 	beq	r2,zero,80b654 <___vfiprintf_internal_r+0x138c>
  80ad34:	1567c83a 	sub	r19,r2,r21
  80ad38:	df001d83 	ldbu	fp,118(sp)
  80ad3c:	d8c02215 	stw	r3,136(sp)
  80ad40:	0013883a 	mov	r9,zero
  80ad44:	003e6006 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80ad48:	21003fcc 	andi	r4,r4,255
  80ad4c:	203fc026 	beq	r4,zero,80ac50 <__alt_data_end+0xff80ac50>
  80ad50:	d9c01d85 	stb	r7,118(sp)
  80ad54:	003fbe06 	br	80ac50 <__alt_data_end+0xff80ac50>
  80ad58:	da802217 	ldw	r10,136(sp)
  80ad5c:	54400017 	ldw	r17,0(r10)
  80ad60:	50800104 	addi	r2,r10,4
  80ad64:	883e3b16 	blt	r17,zero,80a654 <__alt_data_end+0xff80a654>
  80ad68:	d8802215 	stw	r2,136(sp)
  80ad6c:	80c00007 	ldb	r3,0(r16)
  80ad70:	003db406 	br	80a444 <__alt_data_end+0xff80a444>
  80ad74:	01000044 	movi	r4,1
  80ad78:	01c00ac4 	movi	r7,43
  80ad7c:	80c00007 	ldb	r3,0(r16)
  80ad80:	003db006 	br	80a444 <__alt_data_end+0xff80a444>
  80ad84:	80c00007 	ldb	r3,0(r16)
  80ad88:	82800044 	addi	r10,r16,1
  80ad8c:	1b423c26 	beq	r3,r13,80b680 <___vfiprintf_internal_r+0x13b8>
  80ad90:	18bff404 	addi	r2,r3,-48
  80ad94:	0013883a 	mov	r9,zero
  80ad98:	30822b36 	bltu	r6,r2,80b648 <___vfiprintf_internal_r+0x1380>
  80ad9c:	50c00007 	ldb	r3,0(r10)
  80ada0:	4a4002a4 	muli	r9,r9,10
  80ada4:	54000044 	addi	r16,r10,1
  80ada8:	8015883a 	mov	r10,r16
  80adac:	4893883a 	add	r9,r9,r2
  80adb0:	18bff404 	addi	r2,r3,-48
  80adb4:	30bff92e 	bgeu	r6,r2,80ad9c <__alt_data_end+0xff80ad9c>
  80adb8:	483da30e 	bge	r9,zero,80a448 <__alt_data_end+0xff80a448>
  80adbc:	027fffc4 	movi	r9,-1
  80adc0:	003da106 	br	80a448 <__alt_data_end+0xff80a448>
  80adc4:	a5001014 	ori	r20,r20,64
  80adc8:	80c00007 	ldb	r3,0(r16)
  80adcc:	003d9d06 	br	80a444 <__alt_data_end+0xff80a444>
  80add0:	da802217 	ldw	r10,136(sp)
  80add4:	d8001d85 	stb	zero,118(sp)
  80add8:	50c00204 	addi	r3,r10,8
  80addc:	54800017 	ldw	r18,0(r10)
  80ade0:	54c00117 	ldw	r19,4(r10)
  80ade4:	4801ca16 	blt	r9,zero,80b510 <___vfiprintf_internal_r+0x1248>
  80ade8:	013fdfc4 	movi	r4,-129
  80adec:	94c4b03a 	or	r2,r18,r19
  80adf0:	d8c02215 	stw	r3,136(sp)
  80adf4:	a128703a 	and	r20,r20,r4
  80adf8:	0039883a 	mov	fp,zero
  80adfc:	103f341e 	bne	r2,zero,80aad0 <__alt_data_end+0xff80aad0>
  80ae00:	483e2e26 	beq	r9,zero,80a6bc <__alt_data_end+0xff80a6bc>
  80ae04:	0025883a 	mov	r18,zero
  80ae08:	94800c04 	addi	r18,r18,48
  80ae0c:	dc8019c5 	stb	r18,103(sp)
  80ae10:	dcc02717 	ldw	r19,156(sp)
  80ae14:	dd4019c4 	addi	r21,sp,103
  80ae18:	003e2b06 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80ae1c:	21003fcc 	andi	r4,r4,255
  80ae20:	2002361e 	bne	r4,zero,80b6fc <___vfiprintf_internal_r+0x1434>
  80ae24:	1801c126 	beq	r3,zero,80b52c <___vfiprintf_internal_r+0x1264>
  80ae28:	04800044 	movi	r18,1
  80ae2c:	d8c01005 	stb	r3,64(sp)
  80ae30:	d8001d85 	stb	zero,118(sp)
  80ae34:	9027883a 	mov	r19,r18
  80ae38:	dd401004 	addi	r21,sp,64
  80ae3c:	003f1106 	br	80aa84 <__alt_data_end+0xff80aa84>
  80ae40:	d9402117 	ldw	r5,132(sp)
  80ae44:	d9002017 	ldw	r4,128(sp)
  80ae48:	d9801a04 	addi	r6,sp,104
  80ae4c:	d9c02b15 	stw	r7,172(sp)
  80ae50:	dbc02a15 	stw	r15,168(sp)
  80ae54:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80ae58:	d9c02b17 	ldw	r7,172(sp)
  80ae5c:	dbc02a17 	ldw	r15,168(sp)
  80ae60:	10006d1e 	bne	r2,zero,80b018 <___vfiprintf_internal_r+0xd50>
  80ae64:	d9801b17 	ldw	r6,108(sp)
  80ae68:	d8801c17 	ldw	r2,112(sp)
  80ae6c:	d811883a 	mov	r8,sp
  80ae70:	31400044 	addi	r5,r6,1
  80ae74:	003e3306 	br	80a744 <__alt_data_end+0xff80a744>
  80ae78:	d9401b17 	ldw	r5,108(sp)
  80ae7c:	d8801c17 	ldw	r2,112(sp)
  80ae80:	29000044 	addi	r4,r5,1
  80ae84:	d8c01d87 	ldb	r3,118(sp)
  80ae88:	183e4d26 	beq	r3,zero,80a7c0 <__alt_data_end+0xff80a7c0>
  80ae8c:	00c00044 	movi	r3,1
  80ae90:	d9401d84 	addi	r5,sp,118
  80ae94:	10c5883a 	add	r2,r2,r3
  80ae98:	41400015 	stw	r5,0(r8)
  80ae9c:	40c00115 	stw	r3,4(r8)
  80aea0:	d8801c15 	stw	r2,112(sp)
  80aea4:	d9001b15 	stw	r4,108(sp)
  80aea8:	014001c4 	movi	r5,7
  80aeac:	2900a90e 	bge	r5,r4,80b154 <___vfiprintf_internal_r+0xe8c>
  80aeb0:	1000da1e 	bne	r2,zero,80b21c <___vfiprintf_internal_r+0xf54>
  80aeb4:	7000ab1e 	bne	r14,zero,80b164 <___vfiprintf_internal_r+0xe9c>
  80aeb8:	000b883a 	mov	r5,zero
  80aebc:	1809883a 	mov	r4,r3
  80aec0:	d811883a 	mov	r8,sp
  80aec4:	00c02004 	movi	r3,128
  80aec8:	e0fe4d26 	beq	fp,r3,80a800 <__alt_data_end+0xff80a800>
  80aecc:	4cf9c83a 	sub	fp,r9,r19
  80aed0:	073e7b0e 	bge	zero,fp,80a8c0 <__alt_data_end+0xff80a8c0>
  80aed4:	01c00404 	movi	r7,16
  80aed8:	3f01900e 	bge	r7,fp,80b51c <___vfiprintf_internal_r+0x1254>
  80aedc:	00c02074 	movhi	r3,129
  80aee0:	18c4a604 	addi	r3,r3,4760
  80aee4:	d8c02415 	stw	r3,144(sp)
  80aee8:	034001c4 	movi	r13,7
  80aeec:	00000506 	br	80af04 <___vfiprintf_internal_r+0xc3c>
  80aef0:	29000084 	addi	r4,r5,2
  80aef4:	42000204 	addi	r8,r8,8
  80aef8:	180b883a 	mov	r5,r3
  80aefc:	e73ffc04 	addi	fp,fp,-16
  80af00:	3f000d0e 	bge	r7,fp,80af38 <___vfiprintf_internal_r+0xc70>
  80af04:	10800404 	addi	r2,r2,16
  80af08:	28c00044 	addi	r3,r5,1
  80af0c:	45c00015 	stw	r23,0(r8)
  80af10:	41c00115 	stw	r7,4(r8)
  80af14:	d8801c15 	stw	r2,112(sp)
  80af18:	d8c01b15 	stw	r3,108(sp)
  80af1c:	68fff40e 	bge	r13,r3,80aef0 <__alt_data_end+0xff80aef0>
  80af20:	1000101e 	bne	r2,zero,80af64 <___vfiprintf_internal_r+0xc9c>
  80af24:	e73ffc04 	addi	fp,fp,-16
  80af28:	01000044 	movi	r4,1
  80af2c:	000b883a 	mov	r5,zero
  80af30:	d811883a 	mov	r8,sp
  80af34:	3f3ff316 	blt	r7,fp,80af04 <__alt_data_end+0xff80af04>
  80af38:	da802417 	ldw	r10,144(sp)
  80af3c:	1705883a 	add	r2,r2,fp
  80af40:	47000115 	stw	fp,4(r8)
  80af44:	42800015 	stw	r10,0(r8)
  80af48:	d8801c15 	stw	r2,112(sp)
  80af4c:	d9001b15 	stw	r4,108(sp)
  80af50:	00c001c4 	movi	r3,7
  80af54:	19003616 	blt	r3,r4,80b030 <___vfiprintf_internal_r+0xd68>
  80af58:	42000204 	addi	r8,r8,8
  80af5c:	21000044 	addi	r4,r4,1
  80af60:	003e5706 	br	80a8c0 <__alt_data_end+0xff80a8c0>
  80af64:	d9402117 	ldw	r5,132(sp)
  80af68:	d9002017 	ldw	r4,128(sp)
  80af6c:	d9801a04 	addi	r6,sp,104
  80af70:	d9c02b15 	stw	r7,172(sp)
  80af74:	db402a15 	stw	r13,168(sp)
  80af78:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80af7c:	d9c02b17 	ldw	r7,172(sp)
  80af80:	db402a17 	ldw	r13,168(sp)
  80af84:	1000241e 	bne	r2,zero,80b018 <___vfiprintf_internal_r+0xd50>
  80af88:	d9401b17 	ldw	r5,108(sp)
  80af8c:	d8801c17 	ldw	r2,112(sp)
  80af90:	d811883a 	mov	r8,sp
  80af94:	29000044 	addi	r4,r5,1
  80af98:	003fd806 	br	80aefc <__alt_data_end+0xff80aefc>
  80af9c:	d9401b17 	ldw	r5,108(sp)
  80afa0:	00c02074 	movhi	r3,129
  80afa4:	18c4aa04 	addi	r3,r3,4776
  80afa8:	d8c02415 	stw	r3,144(sp)
  80afac:	29400044 	addi	r5,r5,1
  80afb0:	d8c02417 	ldw	r3,144(sp)
  80afb4:	14c5883a 	add	r2,r2,r19
  80afb8:	44c00115 	stw	r19,4(r8)
  80afbc:	40c00015 	stw	r3,0(r8)
  80afc0:	d8801c15 	stw	r2,112(sp)
  80afc4:	d9401b15 	stw	r5,108(sp)
  80afc8:	00c001c4 	movi	r3,7
  80afcc:	1940070e 	bge	r3,r5,80afec <___vfiprintf_internal_r+0xd24>
  80afd0:	103e4826 	beq	r2,zero,80a8f4 <__alt_data_end+0xff80a8f4>
  80afd4:	d9402117 	ldw	r5,132(sp)
  80afd8:	d9002017 	ldw	r4,128(sp)
  80afdc:	d9801a04 	addi	r6,sp,104
  80afe0:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80afe4:	10000c1e 	bne	r2,zero,80b018 <___vfiprintf_internal_r+0xd50>
  80afe8:	d8801c17 	ldw	r2,112(sp)
  80afec:	8c80010e 	bge	r17,r18,80aff4 <___vfiprintf_internal_r+0xd2c>
  80aff0:	9023883a 	mov	r17,r18
  80aff4:	da802317 	ldw	r10,140(sp)
  80aff8:	5455883a 	add	r10,r10,r17
  80affc:	da802315 	stw	r10,140(sp)
  80b000:	103e4126 	beq	r2,zero,80a908 <__alt_data_end+0xff80a908>
  80b004:	d9402117 	ldw	r5,132(sp)
  80b008:	d9002017 	ldw	r4,128(sp)
  80b00c:	d9801a04 	addi	r6,sp,104
  80b010:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b014:	103e3c26 	beq	r2,zero,80a908 <__alt_data_end+0xff80a908>
  80b018:	dd002117 	ldw	r20,132(sp)
  80b01c:	a080030b 	ldhu	r2,12(r20)
  80b020:	1080100c 	andi	r2,r2,64
  80b024:	1001231e 	bne	r2,zero,80b4b4 <___vfiprintf_internal_r+0x11ec>
  80b028:	d8802317 	ldw	r2,140(sp)
  80b02c:	003d7b06 	br	80a61c <__alt_data_end+0xff80a61c>
  80b030:	1000991e 	bne	r2,zero,80b298 <___vfiprintf_internal_r+0xfd0>
  80b034:	00c00044 	movi	r3,1
  80b038:	9805883a 	mov	r2,r19
  80b03c:	dd400015 	stw	r21,0(sp)
  80b040:	dcc00115 	stw	r19,4(sp)
  80b044:	dcc01c15 	stw	r19,112(sp)
  80b048:	d8c01b15 	stw	r3,108(sp)
  80b04c:	d811883a 	mov	r8,sp
  80b050:	42000204 	addi	r8,r8,8
  80b054:	a2c0010c 	andi	r11,r20,4
  80b058:	583fe426 	beq	r11,zero,80afec <__alt_data_end+0xff80afec>
  80b05c:	8ca7c83a 	sub	r19,r17,r18
  80b060:	04ffe20e 	bge	zero,r19,80afec <__alt_data_end+0xff80afec>
  80b064:	01c00404 	movi	r7,16
  80b068:	3cffcc0e 	bge	r7,r19,80af9c <__alt_data_end+0xff80af9c>
  80b06c:	02802074 	movhi	r10,129
  80b070:	5284aa04 	addi	r10,r10,4776
  80b074:	d9001b17 	ldw	r4,108(sp)
  80b078:	da802415 	stw	r10,144(sp)
  80b07c:	382b883a 	mov	r21,r7
  80b080:	050001c4 	movi	r20,7
  80b084:	df002017 	ldw	fp,128(sp)
  80b088:	00000506 	br	80b0a0 <___vfiprintf_internal_r+0xdd8>
  80b08c:	21400084 	addi	r5,r4,2
  80b090:	42000204 	addi	r8,r8,8
  80b094:	1809883a 	mov	r4,r3
  80b098:	9cfffc04 	addi	r19,r19,-16
  80b09c:	acffc40e 	bge	r21,r19,80afb0 <__alt_data_end+0xff80afb0>
  80b0a0:	10800404 	addi	r2,r2,16
  80b0a4:	20c00044 	addi	r3,r4,1
  80b0a8:	45800015 	stw	r22,0(r8)
  80b0ac:	45400115 	stw	r21,4(r8)
  80b0b0:	d8801c15 	stw	r2,112(sp)
  80b0b4:	d8c01b15 	stw	r3,108(sp)
  80b0b8:	a0fff40e 	bge	r20,r3,80b08c <__alt_data_end+0xff80b08c>
  80b0bc:	1000041e 	bne	r2,zero,80b0d0 <___vfiprintf_internal_r+0xe08>
  80b0c0:	01400044 	movi	r5,1
  80b0c4:	0009883a 	mov	r4,zero
  80b0c8:	d811883a 	mov	r8,sp
  80b0cc:	003ff206 	br	80b098 <__alt_data_end+0xff80b098>
  80b0d0:	d9402117 	ldw	r5,132(sp)
  80b0d4:	d9801a04 	addi	r6,sp,104
  80b0d8:	e009883a 	mov	r4,fp
  80b0dc:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b0e0:	103fcd1e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b0e4:	d9001b17 	ldw	r4,108(sp)
  80b0e8:	d8801c17 	ldw	r2,112(sp)
  80b0ec:	d811883a 	mov	r8,sp
  80b0f0:	21400044 	addi	r5,r4,1
  80b0f4:	003fe806 	br	80b098 <__alt_data_end+0xff80b098>
  80b0f8:	d9402117 	ldw	r5,132(sp)
  80b0fc:	d9002017 	ldw	r4,128(sp)
  80b100:	d9801a04 	addi	r6,sp,104
  80b104:	d9c02b15 	stw	r7,172(sp)
  80b108:	db402a15 	stw	r13,168(sp)
  80b10c:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b110:	d9c02b17 	ldw	r7,172(sp)
  80b114:	db402a17 	ldw	r13,168(sp)
  80b118:	103fbf1e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b11c:	d9401b17 	ldw	r5,108(sp)
  80b120:	d8801c17 	ldw	r2,112(sp)
  80b124:	d811883a 	mov	r8,sp
  80b128:	29800044 	addi	r6,r5,1
  80b12c:	003dc406 	br	80a840 <__alt_data_end+0xff80a840>
  80b130:	1000d21e 	bne	r2,zero,80b47c <___vfiprintf_internal_r+0x11b4>
  80b134:	d8c01d87 	ldb	r3,118(sp)
  80b138:	18009526 	beq	r3,zero,80b390 <___vfiprintf_internal_r+0x10c8>
  80b13c:	00800044 	movi	r2,1
  80b140:	d8c01d84 	addi	r3,sp,118
  80b144:	1009883a 	mov	r4,r2
  80b148:	d8c00015 	stw	r3,0(sp)
  80b14c:	d8800115 	stw	r2,4(sp)
  80b150:	d811883a 	mov	r8,sp
  80b154:	200b883a 	mov	r5,r4
  80b158:	42000204 	addi	r8,r8,8
  80b15c:	21000044 	addi	r4,r4,1
  80b160:	003d9706 	br	80a7c0 <__alt_data_end+0xff80a7c0>
  80b164:	d9001d04 	addi	r4,sp,116
  80b168:	00800084 	movi	r2,2
  80b16c:	d9000015 	stw	r4,0(sp)
  80b170:	d8800115 	stw	r2,4(sp)
  80b174:	1809883a 	mov	r4,r3
  80b178:	d811883a 	mov	r8,sp
  80b17c:	200b883a 	mov	r5,r4
  80b180:	42000204 	addi	r8,r8,8
  80b184:	21000044 	addi	r4,r4,1
  80b188:	003f4e06 	br	80aec4 <__alt_data_end+0xff80aec4>
  80b18c:	d8001d85 	stb	zero,118(sp)
  80b190:	48005016 	blt	r9,zero,80b2d4 <___vfiprintf_internal_r+0x100c>
  80b194:	00ffdfc4 	movi	r3,-129
  80b198:	94c4b03a 	or	r2,r18,r19
  80b19c:	a0e8703a 	and	r20,r20,r3
  80b1a0:	103d4426 	beq	r2,zero,80a6b4 <__alt_data_end+0xff80a6b4>
  80b1a4:	0039883a 	mov	fp,zero
  80b1a8:	d9002617 	ldw	r4,152(sp)
  80b1ac:	dd401a04 	addi	r21,sp,104
  80b1b0:	908003cc 	andi	r2,r18,15
  80b1b4:	9806973a 	slli	r3,r19,28
  80b1b8:	2085883a 	add	r2,r4,r2
  80b1bc:	9024d13a 	srli	r18,r18,4
  80b1c0:	10800003 	ldbu	r2,0(r2)
  80b1c4:	9826d13a 	srli	r19,r19,4
  80b1c8:	ad7fffc4 	addi	r21,r21,-1
  80b1cc:	1ca4b03a 	or	r18,r3,r18
  80b1d0:	a8800005 	stb	r2,0(r21)
  80b1d4:	94c4b03a 	or	r2,r18,r19
  80b1d8:	103ff51e 	bne	r2,zero,80b1b0 <__alt_data_end+0xff80b1b0>
  80b1dc:	003e5906 	br	80ab44 <__alt_data_end+0xff80ab44>
  80b1e0:	d9402117 	ldw	r5,132(sp)
  80b1e4:	d9002017 	ldw	r4,128(sp)
  80b1e8:	d9801a04 	addi	r6,sp,104
  80b1ec:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b1f0:	103f891e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b1f4:	d8801c17 	ldw	r2,112(sp)
  80b1f8:	d811883a 	mov	r8,sp
  80b1fc:	003f9506 	br	80b054 <__alt_data_end+0xff80b054>
  80b200:	d9402117 	ldw	r5,132(sp)
  80b204:	d9002017 	ldw	r4,128(sp)
  80b208:	d9801a04 	addi	r6,sp,104
  80b20c:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b210:	103f811e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b214:	d811883a 	mov	r8,sp
  80b218:	003ced06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80b21c:	d9402117 	ldw	r5,132(sp)
  80b220:	d9002017 	ldw	r4,128(sp)
  80b224:	d9801a04 	addi	r6,sp,104
  80b228:	da402c15 	stw	r9,176(sp)
  80b22c:	db802a15 	stw	r14,168(sp)
  80b230:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b234:	da402c17 	ldw	r9,176(sp)
  80b238:	db802a17 	ldw	r14,168(sp)
  80b23c:	103f761e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b240:	d9401b17 	ldw	r5,108(sp)
  80b244:	d8801c17 	ldw	r2,112(sp)
  80b248:	d811883a 	mov	r8,sp
  80b24c:	29000044 	addi	r4,r5,1
  80b250:	003d5b06 	br	80a7c0 <__alt_data_end+0xff80a7c0>
  80b254:	d9402117 	ldw	r5,132(sp)
  80b258:	d9002017 	ldw	r4,128(sp)
  80b25c:	d9801a04 	addi	r6,sp,104
  80b260:	da402c15 	stw	r9,176(sp)
  80b264:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b268:	da402c17 	ldw	r9,176(sp)
  80b26c:	103f6a1e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b270:	d9401b17 	ldw	r5,108(sp)
  80b274:	d8801c17 	ldw	r2,112(sp)
  80b278:	d811883a 	mov	r8,sp
  80b27c:	29000044 	addi	r4,r5,1
  80b280:	003f1006 	br	80aec4 <__alt_data_end+0xff80aec4>
  80b284:	1000c31e 	bne	r2,zero,80b594 <___vfiprintf_internal_r+0x12cc>
  80b288:	01000044 	movi	r4,1
  80b28c:	000b883a 	mov	r5,zero
  80b290:	d811883a 	mov	r8,sp
  80b294:	003f0d06 	br	80aecc <__alt_data_end+0xff80aecc>
  80b298:	d9402117 	ldw	r5,132(sp)
  80b29c:	d9002017 	ldw	r4,128(sp)
  80b2a0:	d9801a04 	addi	r6,sp,104
  80b2a4:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b2a8:	103f5b1e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b2ac:	d9001b17 	ldw	r4,108(sp)
  80b2b0:	d8801c17 	ldw	r2,112(sp)
  80b2b4:	d811883a 	mov	r8,sp
  80b2b8:	21000044 	addi	r4,r4,1
  80b2bc:	003d8006 	br	80a8c0 <__alt_data_end+0xff80a8c0>
  80b2c0:	01002074 	movhi	r4,129
  80b2c4:	21044504 	addi	r4,r4,4372
  80b2c8:	d9002615 	stw	r4,152(sp)
  80b2cc:	d8c02215 	stw	r3,136(sp)
  80b2d0:	1029883a 	mov	r20,r2
  80b2d4:	94c4b03a 	or	r2,r18,r19
  80b2d8:	103fb21e 	bne	r2,zero,80b1a4 <__alt_data_end+0xff80b1a4>
  80b2dc:	0039883a 	mov	fp,zero
  80b2e0:	00800084 	movi	r2,2
  80b2e4:	003e6b06 	br	80ac94 <__alt_data_end+0xff80ac94>
  80b2e8:	da802217 	ldw	r10,136(sp)
  80b2ec:	d8001d85 	stb	zero,118(sp)
  80b2f0:	0027883a 	mov	r19,zero
  80b2f4:	50800104 	addi	r2,r10,4
  80b2f8:	54800017 	ldw	r18,0(r10)
  80b2fc:	483e6016 	blt	r9,zero,80ac80 <__alt_data_end+0xff80ac80>
  80b300:	00ffdfc4 	movi	r3,-129
  80b304:	d8802215 	stw	r2,136(sp)
  80b308:	a0e8703a 	and	r20,r20,r3
  80b30c:	0039883a 	mov	fp,zero
  80b310:	903ebb26 	beq	r18,zero,80ae00 <__alt_data_end+0xff80ae00>
  80b314:	00800244 	movi	r2,9
  80b318:	14bdee36 	bltu	r2,r18,80aad4 <__alt_data_end+0xff80aad4>
  80b31c:	003eba06 	br	80ae08 <__alt_data_end+0xff80ae08>
  80b320:	00800c04 	movi	r2,48
  80b324:	d8c01d45 	stb	r3,117(sp)
  80b328:	d8801d05 	stb	r2,116(sp)
  80b32c:	d8001d85 	stb	zero,118(sp)
  80b330:	a0c00094 	ori	r3,r20,2
  80b334:	4800a916 	blt	r9,zero,80b5dc <___vfiprintf_internal_r+0x1314>
  80b338:	00bfdfc4 	movi	r2,-129
  80b33c:	a096703a 	and	r11,r20,r2
  80b340:	5d000094 	ori	r20,r11,2
  80b344:	0039883a 	mov	fp,zero
  80b348:	003f9706 	br	80b1a8 <__alt_data_end+0xff80b1a8>
  80b34c:	8025883a 	mov	r18,r16
  80b350:	003c2e06 	br	80a40c <__alt_data_end+0xff80a40c>
  80b354:	00802074 	movhi	r2,129
  80b358:	10844504 	addi	r2,r2,4372
  80b35c:	0039883a 	mov	fp,zero
  80b360:	d8802615 	stw	r2,152(sp)
  80b364:	003f9006 	br	80b1a8 <__alt_data_end+0xff80b1a8>
  80b368:	04a5c83a 	sub	r18,zero,r18
  80b36c:	07000b44 	movi	fp,45
  80b370:	9004c03a 	cmpne	r2,r18,zero
  80b374:	04e7c83a 	sub	r19,zero,r19
  80b378:	df001d85 	stb	fp,118(sp)
  80b37c:	98a7c83a 	sub	r19,r19,r2
  80b380:	48009f16 	blt	r9,zero,80b600 <___vfiprintf_internal_r+0x1338>
  80b384:	00bfdfc4 	movi	r2,-129
  80b388:	a0a8703a 	and	r20,r20,r2
  80b38c:	003dd006 	br	80aad0 <__alt_data_end+0xff80aad0>
  80b390:	70004c26 	beq	r14,zero,80b4c4 <___vfiprintf_internal_r+0x11fc>
  80b394:	00800084 	movi	r2,2
  80b398:	d8c01d04 	addi	r3,sp,116
  80b39c:	d8c00015 	stw	r3,0(sp)
  80b3a0:	d8800115 	stw	r2,4(sp)
  80b3a4:	01000044 	movi	r4,1
  80b3a8:	d811883a 	mov	r8,sp
  80b3ac:	003f7306 	br	80b17c <__alt_data_end+0xff80b17c>
  80b3b0:	a080100c 	andi	r2,r20,64
  80b3b4:	da802217 	ldw	r10,136(sp)
  80b3b8:	103e0626 	beq	r2,zero,80abd4 <__alt_data_end+0xff80abd4>
  80b3bc:	5480000f 	ldh	r18,0(r10)
  80b3c0:	52800104 	addi	r10,r10,4
  80b3c4:	da802215 	stw	r10,136(sp)
  80b3c8:	9027d7fa 	srai	r19,r18,31
  80b3cc:	9805883a 	mov	r2,r19
  80b3d0:	003db806 	br	80aab4 <__alt_data_end+0xff80aab4>
  80b3d4:	a080040c 	andi	r2,r20,16
  80b3d8:	1000091e 	bne	r2,zero,80b400 <___vfiprintf_internal_r+0x1138>
  80b3dc:	a2c0100c 	andi	r11,r20,64
  80b3e0:	58000726 	beq	r11,zero,80b400 <___vfiprintf_internal_r+0x1138>
  80b3e4:	da802217 	ldw	r10,136(sp)
  80b3e8:	50800017 	ldw	r2,0(r10)
  80b3ec:	52800104 	addi	r10,r10,4
  80b3f0:	da802215 	stw	r10,136(sp)
  80b3f4:	da802317 	ldw	r10,140(sp)
  80b3f8:	1280000d 	sth	r10,0(r2)
  80b3fc:	003be706 	br	80a39c <__alt_data_end+0xff80a39c>
  80b400:	da802217 	ldw	r10,136(sp)
  80b404:	50800017 	ldw	r2,0(r10)
  80b408:	52800104 	addi	r10,r10,4
  80b40c:	da802215 	stw	r10,136(sp)
  80b410:	da802317 	ldw	r10,140(sp)
  80b414:	12800015 	stw	r10,0(r2)
  80b418:	003be006 	br	80a39c <__alt_data_end+0xff80a39c>
  80b41c:	a080100c 	andi	r2,r20,64
  80b420:	da802217 	ldw	r10,136(sp)
  80b424:	10003026 	beq	r2,zero,80b4e8 <___vfiprintf_internal_r+0x1220>
  80b428:	5480000b 	ldhu	r18,0(r10)
  80b42c:	52800104 	addi	r10,r10,4
  80b430:	0027883a 	mov	r19,zero
  80b434:	da802215 	stw	r10,136(sp)
  80b438:	003d8006 	br	80aa3c <__alt_data_end+0xff80aa3c>
  80b43c:	80c00007 	ldb	r3,0(r16)
  80b440:	003c0006 	br	80a444 <__alt_data_end+0xff80a444>
  80b444:	a080100c 	andi	r2,r20,64
  80b448:	d8001d85 	stb	zero,118(sp)
  80b44c:	da802217 	ldw	r10,136(sp)
  80b450:	1000201e 	bne	r2,zero,80b4d4 <___vfiprintf_internal_r+0x120c>
  80b454:	50800104 	addi	r2,r10,4
  80b458:	54800017 	ldw	r18,0(r10)
  80b45c:	0027883a 	mov	r19,zero
  80b460:	483def0e 	bge	r9,zero,80ac20 <__alt_data_end+0xff80ac20>
  80b464:	94c6b03a 	or	r3,r18,r19
  80b468:	d8802215 	stw	r2,136(sp)
  80b46c:	183d4e1e 	bne	r3,zero,80a9a8 <__alt_data_end+0xff80a9a8>
  80b470:	0039883a 	mov	fp,zero
  80b474:	0005883a 	mov	r2,zero
  80b478:	003e0606 	br	80ac94 <__alt_data_end+0xff80ac94>
  80b47c:	d9402117 	ldw	r5,132(sp)
  80b480:	d9002017 	ldw	r4,128(sp)
  80b484:	d9801a04 	addi	r6,sp,104
  80b488:	da402c15 	stw	r9,176(sp)
  80b48c:	db802a15 	stw	r14,168(sp)
  80b490:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b494:	da402c17 	ldw	r9,176(sp)
  80b498:	db802a17 	ldw	r14,168(sp)
  80b49c:	103ede1e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b4a0:	d9401b17 	ldw	r5,108(sp)
  80b4a4:	d8801c17 	ldw	r2,112(sp)
  80b4a8:	d811883a 	mov	r8,sp
  80b4ac:	29000044 	addi	r4,r5,1
  80b4b0:	003e7406 	br	80ae84 <__alt_data_end+0xff80ae84>
  80b4b4:	00bfffc4 	movi	r2,-1
  80b4b8:	003c5806 	br	80a61c <__alt_data_end+0xff80a61c>
  80b4bc:	d811883a 	mov	r8,sp
  80b4c0:	003ee806 	br	80b064 <__alt_data_end+0xff80b064>
  80b4c4:	000b883a 	mov	r5,zero
  80b4c8:	01000044 	movi	r4,1
  80b4cc:	d811883a 	mov	r8,sp
  80b4d0:	003e7c06 	br	80aec4 <__alt_data_end+0xff80aec4>
  80b4d4:	50800104 	addi	r2,r10,4
  80b4d8:	5480000b 	ldhu	r18,0(r10)
  80b4dc:	0027883a 	mov	r19,zero
  80b4e0:	483dcf0e 	bge	r9,zero,80ac20 <__alt_data_end+0xff80ac20>
  80b4e4:	003fdf06 	br	80b464 <__alt_data_end+0xff80b464>
  80b4e8:	54800017 	ldw	r18,0(r10)
  80b4ec:	52800104 	addi	r10,r10,4
  80b4f0:	0027883a 	mov	r19,zero
  80b4f4:	da802215 	stw	r10,136(sp)
  80b4f8:	003d5006 	br	80aa3c <__alt_data_end+0xff80aa3c>
  80b4fc:	50800104 	addi	r2,r10,4
  80b500:	5480000b 	ldhu	r18,0(r10)
  80b504:	0027883a 	mov	r19,zero
  80b508:	483f7d0e 	bge	r9,zero,80b300 <__alt_data_end+0xff80b300>
  80b50c:	003ddc06 	br	80ac80 <__alt_data_end+0xff80ac80>
  80b510:	d8c02215 	stw	r3,136(sp)
  80b514:	0039883a 	mov	fp,zero
  80b518:	003ddb06 	br	80ac88 <__alt_data_end+0xff80ac88>
  80b51c:	02802074 	movhi	r10,129
  80b520:	5284a604 	addi	r10,r10,4760
  80b524:	da802415 	stw	r10,144(sp)
  80b528:	003e8306 	br	80af38 <__alt_data_end+0xff80af38>
  80b52c:	d8801c17 	ldw	r2,112(sp)
  80b530:	dd002117 	ldw	r20,132(sp)
  80b534:	103eb926 	beq	r2,zero,80b01c <__alt_data_end+0xff80b01c>
  80b538:	d9002017 	ldw	r4,128(sp)
  80b53c:	d9801a04 	addi	r6,sp,104
  80b540:	a00b883a 	mov	r5,r20
  80b544:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b548:	003eb406 	br	80b01c <__alt_data_end+0xff80b01c>
  80b54c:	80c00043 	ldbu	r3,1(r16)
  80b550:	a5000814 	ori	r20,r20,32
  80b554:	84000044 	addi	r16,r16,1
  80b558:	18c03fcc 	andi	r3,r3,255
  80b55c:	18c0201c 	xori	r3,r3,128
  80b560:	18ffe004 	addi	r3,r3,-128
  80b564:	003bb706 	br	80a444 <__alt_data_end+0xff80a444>
  80b568:	a809883a 	mov	r4,r21
  80b56c:	d8c02a15 	stw	r3,168(sp)
  80b570:	da002b15 	stw	r8,172(sp)
  80b574:	080a11c0 	call	80a11c <strlen>
  80b578:	d8c02a17 	ldw	r3,168(sp)
  80b57c:	1027883a 	mov	r19,r2
  80b580:	df001d83 	ldbu	fp,118(sp)
  80b584:	d8c02215 	stw	r3,136(sp)
  80b588:	0013883a 	mov	r9,zero
  80b58c:	da002b17 	ldw	r8,172(sp)
  80b590:	003c4d06 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80b594:	d9402117 	ldw	r5,132(sp)
  80b598:	d9002017 	ldw	r4,128(sp)
  80b59c:	d9801a04 	addi	r6,sp,104
  80b5a0:	da402c15 	stw	r9,176(sp)
  80b5a4:	080a1b40 	call	80a1b4 <__sprint_r.part.0>
  80b5a8:	da402c17 	ldw	r9,176(sp)
  80b5ac:	103e9a1e 	bne	r2,zero,80b018 <__alt_data_end+0xff80b018>
  80b5b0:	d9401b17 	ldw	r5,108(sp)
  80b5b4:	d8801c17 	ldw	r2,112(sp)
  80b5b8:	d811883a 	mov	r8,sp
  80b5bc:	29000044 	addi	r4,r5,1
  80b5c0:	003e4206 	br	80aecc <__alt_data_end+0xff80aecc>
  80b5c4:	d9401b17 	ldw	r5,108(sp)
  80b5c8:	01002074 	movhi	r4,129
  80b5cc:	2104aa04 	addi	r4,r4,4776
  80b5d0:	d9002415 	stw	r4,144(sp)
  80b5d4:	29400044 	addi	r5,r5,1
  80b5d8:	003c6d06 	br	80a790 <__alt_data_end+0xff80a790>
  80b5dc:	0039883a 	mov	fp,zero
  80b5e0:	00800084 	movi	r2,2
  80b5e4:	10803fcc 	andi	r2,r2,255
  80b5e8:	01000044 	movi	r4,1
  80b5ec:	11001e26 	beq	r2,r4,80b668 <___vfiprintf_internal_r+0x13a0>
  80b5f0:	01000084 	movi	r4,2
  80b5f4:	11001e1e 	bne	r2,r4,80b670 <___vfiprintf_internal_r+0x13a8>
  80b5f8:	1829883a 	mov	r20,r3
  80b5fc:	003eea06 	br	80b1a8 <__alt_data_end+0xff80b1a8>
  80b600:	a007883a 	mov	r3,r20
  80b604:	00800044 	movi	r2,1
  80b608:	003ff606 	br	80b5e4 <__alt_data_end+0xff80b5e4>
  80b60c:	00800184 	movi	r2,6
  80b610:	1240012e 	bgeu	r2,r9,80b618 <___vfiprintf_internal_r+0x1350>
  80b614:	1013883a 	mov	r9,r2
  80b618:	4827883a 	mov	r19,r9
  80b61c:	4825883a 	mov	r18,r9
  80b620:	48001516 	blt	r9,zero,80b678 <___vfiprintf_internal_r+0x13b0>
  80b624:	05402074 	movhi	r21,129
  80b628:	d8c02215 	stw	r3,136(sp)
  80b62c:	ad444a04 	addi	r21,r21,4392
  80b630:	003d1406 	br	80aa84 <__alt_data_end+0xff80aa84>
  80b634:	02802074 	movhi	r10,129
  80b638:	5284a604 	addi	r10,r10,4760
  80b63c:	da802415 	stw	r10,144(sp)
  80b640:	200d883a 	mov	r6,r4
  80b644:	003c9106 	br	80a88c <__alt_data_end+0xff80a88c>
  80b648:	5021883a 	mov	r16,r10
  80b64c:	0013883a 	mov	r9,zero
  80b650:	003b7d06 	br	80a448 <__alt_data_end+0xff80a448>
  80b654:	4827883a 	mov	r19,r9
  80b658:	df001d83 	ldbu	fp,118(sp)
  80b65c:	d8c02215 	stw	r3,136(sp)
  80b660:	0013883a 	mov	r9,zero
  80b664:	003c1806 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80b668:	1829883a 	mov	r20,r3
  80b66c:	003d1806 	br	80aad0 <__alt_data_end+0xff80aad0>
  80b670:	1829883a 	mov	r20,r3
  80b674:	003ccd06 	br	80a9ac <__alt_data_end+0xff80a9ac>
  80b678:	0025883a 	mov	r18,zero
  80b67c:	003fe906 	br	80b624 <__alt_data_end+0xff80b624>
  80b680:	d8802217 	ldw	r2,136(sp)
  80b684:	80c00043 	ldbu	r3,1(r16)
  80b688:	5021883a 	mov	r16,r10
  80b68c:	12400017 	ldw	r9,0(r2)
  80b690:	10800104 	addi	r2,r2,4
  80b694:	d8802215 	stw	r2,136(sp)
  80b698:	483faf0e 	bge	r9,zero,80b558 <__alt_data_end+0xff80b558>
  80b69c:	18c03fcc 	andi	r3,r3,255
  80b6a0:	18c0201c 	xori	r3,r3,128
  80b6a4:	027fffc4 	movi	r9,-1
  80b6a8:	18ffe004 	addi	r3,r3,-128
  80b6ac:	003b6506 	br	80a444 <__alt_data_end+0xff80a444>
  80b6b0:	d9c01d85 	stb	r7,118(sp)
  80b6b4:	003ca006 	br	80a938 <__alt_data_end+0xff80a938>
  80b6b8:	d9c01d85 	stb	r7,118(sp)
  80b6bc:	003cad06 	br	80a974 <__alt_data_end+0xff80a974>
  80b6c0:	d9c01d85 	stb	r7,118(sp)
  80b6c4:	003d7d06 	br	80acbc <__alt_data_end+0xff80acbc>
  80b6c8:	d9c01d85 	stb	r7,118(sp)
  80b6cc:	003d5f06 	br	80ac4c <__alt_data_end+0xff80ac4c>
  80b6d0:	a080004c 	andi	r2,r20,1
  80b6d4:	0039883a 	mov	fp,zero
  80b6d8:	10000526 	beq	r2,zero,80b6f0 <___vfiprintf_internal_r+0x1428>
  80b6dc:	00800c04 	movi	r2,48
  80b6e0:	d88019c5 	stb	r2,103(sp)
  80b6e4:	dcc02717 	ldw	r19,156(sp)
  80b6e8:	dd4019c4 	addi	r21,sp,103
  80b6ec:	003bf606 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80b6f0:	0027883a 	mov	r19,zero
  80b6f4:	dd401a04 	addi	r21,sp,104
  80b6f8:	003bf306 	br	80a6c8 <__alt_data_end+0xff80a6c8>
  80b6fc:	d9c01d85 	stb	r7,118(sp)
  80b700:	003dc806 	br	80ae24 <__alt_data_end+0xff80ae24>
  80b704:	d9c01d85 	stb	r7,118(sp)
  80b708:	003d3a06 	br	80abf4 <__alt_data_end+0xff80abf4>
  80b70c:	d9c01d85 	stb	r7,118(sp)
  80b710:	003d2a06 	br	80abbc <__alt_data_end+0xff80abbc>
  80b714:	d9c01d85 	stb	r7,118(sp)
  80b718:	003cde06 	br	80aa94 <__alt_data_end+0xff80aa94>
  80b71c:	d9c01d85 	stb	r7,118(sp)
  80b720:	003cbc06 	br	80aa14 <__alt_data_end+0xff80aa14>

0080b724 <__vfiprintf_internal>:
  80b724:	00802074 	movhi	r2,129
  80b728:	108b6504 	addi	r2,r2,11668
  80b72c:	300f883a 	mov	r7,r6
  80b730:	280d883a 	mov	r6,r5
  80b734:	200b883a 	mov	r5,r4
  80b738:	11000017 	ldw	r4,0(r2)
  80b73c:	080a2c81 	jmpi	80a2c8 <___vfiprintf_internal_r>

0080b740 <__sbprintf>:
  80b740:	2880030b 	ldhu	r2,12(r5)
  80b744:	2ac01917 	ldw	r11,100(r5)
  80b748:	2a80038b 	ldhu	r10,14(r5)
  80b74c:	2a400717 	ldw	r9,28(r5)
  80b750:	2a000917 	ldw	r8,36(r5)
  80b754:	defee204 	addi	sp,sp,-1144
  80b758:	00c10004 	movi	r3,1024
  80b75c:	dc011a15 	stw	r16,1128(sp)
  80b760:	10bfff4c 	andi	r2,r2,65533
  80b764:	2821883a 	mov	r16,r5
  80b768:	d8cb883a 	add	r5,sp,r3
  80b76c:	dc811c15 	stw	r18,1136(sp)
  80b770:	dc411b15 	stw	r17,1132(sp)
  80b774:	dfc11d15 	stw	ra,1140(sp)
  80b778:	2025883a 	mov	r18,r4
  80b77c:	d881030d 	sth	r2,1036(sp)
  80b780:	dac11915 	stw	r11,1124(sp)
  80b784:	da81038d 	sth	r10,1038(sp)
  80b788:	da410715 	stw	r9,1052(sp)
  80b78c:	da010915 	stw	r8,1060(sp)
  80b790:	dec10015 	stw	sp,1024(sp)
  80b794:	dec10415 	stw	sp,1040(sp)
  80b798:	d8c10215 	stw	r3,1032(sp)
  80b79c:	d8c10515 	stw	r3,1044(sp)
  80b7a0:	d8010615 	stw	zero,1048(sp)
  80b7a4:	080a2c80 	call	80a2c8 <___vfiprintf_internal_r>
  80b7a8:	1023883a 	mov	r17,r2
  80b7ac:	10000416 	blt	r2,zero,80b7c0 <__sbprintf+0x80>
  80b7b0:	d9410004 	addi	r5,sp,1024
  80b7b4:	9009883a 	mov	r4,r18
  80b7b8:	08076600 	call	807660 <_fflush_r>
  80b7bc:	10000d1e 	bne	r2,zero,80b7f4 <__sbprintf+0xb4>
  80b7c0:	d881030b 	ldhu	r2,1036(sp)
  80b7c4:	1080100c 	andi	r2,r2,64
  80b7c8:	10000326 	beq	r2,zero,80b7d8 <__sbprintf+0x98>
  80b7cc:	8080030b 	ldhu	r2,12(r16)
  80b7d0:	10801014 	ori	r2,r2,64
  80b7d4:	8080030d 	sth	r2,12(r16)
  80b7d8:	8805883a 	mov	r2,r17
  80b7dc:	dfc11d17 	ldw	ra,1140(sp)
  80b7e0:	dc811c17 	ldw	r18,1136(sp)
  80b7e4:	dc411b17 	ldw	r17,1132(sp)
  80b7e8:	dc011a17 	ldw	r16,1128(sp)
  80b7ec:	dec11e04 	addi	sp,sp,1144
  80b7f0:	f800283a 	ret
  80b7f4:	047fffc4 	movi	r17,-1
  80b7f8:	003ff106 	br	80b7c0 <__alt_data_end+0xff80b7c0>

0080b7fc <_write_r>:
  80b7fc:	defffd04 	addi	sp,sp,-12
  80b800:	2805883a 	mov	r2,r5
  80b804:	dc000015 	stw	r16,0(sp)
  80b808:	04002074 	movhi	r16,129
  80b80c:	dc400115 	stw	r17,4(sp)
  80b810:	300b883a 	mov	r5,r6
  80b814:	84123504 	addi	r16,r16,18644
  80b818:	2023883a 	mov	r17,r4
  80b81c:	380d883a 	mov	r6,r7
  80b820:	1009883a 	mov	r4,r2
  80b824:	dfc00215 	stw	ra,8(sp)
  80b828:	80000015 	stw	zero,0(r16)
  80b82c:	080ef900 	call	80ef90 <write>
  80b830:	00ffffc4 	movi	r3,-1
  80b834:	10c00526 	beq	r2,r3,80b84c <_write_r+0x50>
  80b838:	dfc00217 	ldw	ra,8(sp)
  80b83c:	dc400117 	ldw	r17,4(sp)
  80b840:	dc000017 	ldw	r16,0(sp)
  80b844:	dec00304 	addi	sp,sp,12
  80b848:	f800283a 	ret
  80b84c:	80c00017 	ldw	r3,0(r16)
  80b850:	183ff926 	beq	r3,zero,80b838 <__alt_data_end+0xff80b838>
  80b854:	88c00015 	stw	r3,0(r17)
  80b858:	003ff706 	br	80b838 <__alt_data_end+0xff80b838>

0080b85c <_close_r>:
  80b85c:	defffd04 	addi	sp,sp,-12
  80b860:	dc000015 	stw	r16,0(sp)
  80b864:	04002074 	movhi	r16,129
  80b868:	dc400115 	stw	r17,4(sp)
  80b86c:	84123504 	addi	r16,r16,18644
  80b870:	2023883a 	mov	r17,r4
  80b874:	2809883a 	mov	r4,r5
  80b878:	dfc00215 	stw	ra,8(sp)
  80b87c:	80000015 	stw	zero,0(r16)
  80b880:	080e6900 	call	80e690 <close>
  80b884:	00ffffc4 	movi	r3,-1
  80b888:	10c00526 	beq	r2,r3,80b8a0 <_close_r+0x44>
  80b88c:	dfc00217 	ldw	ra,8(sp)
  80b890:	dc400117 	ldw	r17,4(sp)
  80b894:	dc000017 	ldw	r16,0(sp)
  80b898:	dec00304 	addi	sp,sp,12
  80b89c:	f800283a 	ret
  80b8a0:	80c00017 	ldw	r3,0(r16)
  80b8a4:	183ff926 	beq	r3,zero,80b88c <__alt_data_end+0xff80b88c>
  80b8a8:	88c00015 	stw	r3,0(r17)
  80b8ac:	003ff706 	br	80b88c <__alt_data_end+0xff80b88c>

0080b8b0 <_calloc_r>:
  80b8b0:	298b383a 	mul	r5,r5,r6
  80b8b4:	defffe04 	addi	sp,sp,-8
  80b8b8:	dfc00115 	stw	ra,4(sp)
  80b8bc:	dc000015 	stw	r16,0(sp)
  80b8c0:	08082e00 	call	8082e0 <_malloc_r>
  80b8c4:	10002926 	beq	r2,zero,80b96c <_calloc_r+0xbc>
  80b8c8:	11bfff17 	ldw	r6,-4(r2)
  80b8cc:	1021883a 	mov	r16,r2
  80b8d0:	00bfff04 	movi	r2,-4
  80b8d4:	308c703a 	and	r6,r6,r2
  80b8d8:	00c00904 	movi	r3,36
  80b8dc:	308d883a 	add	r6,r6,r2
  80b8e0:	19801636 	bltu	r3,r6,80b93c <_calloc_r+0x8c>
  80b8e4:	008004c4 	movi	r2,19
  80b8e8:	11800b2e 	bgeu	r2,r6,80b918 <_calloc_r+0x68>
  80b8ec:	80000015 	stw	zero,0(r16)
  80b8f0:	80000115 	stw	zero,4(r16)
  80b8f4:	008006c4 	movi	r2,27
  80b8f8:	11801a2e 	bgeu	r2,r6,80b964 <_calloc_r+0xb4>
  80b8fc:	80000215 	stw	zero,8(r16)
  80b900:	80000315 	stw	zero,12(r16)
  80b904:	30c0151e 	bne	r6,r3,80b95c <_calloc_r+0xac>
  80b908:	80000415 	stw	zero,16(r16)
  80b90c:	80800604 	addi	r2,r16,24
  80b910:	80000515 	stw	zero,20(r16)
  80b914:	00000106 	br	80b91c <_calloc_r+0x6c>
  80b918:	8005883a 	mov	r2,r16
  80b91c:	10000015 	stw	zero,0(r2)
  80b920:	10000115 	stw	zero,4(r2)
  80b924:	10000215 	stw	zero,8(r2)
  80b928:	8005883a 	mov	r2,r16
  80b92c:	dfc00117 	ldw	ra,4(sp)
  80b930:	dc000017 	ldw	r16,0(sp)
  80b934:	dec00204 	addi	sp,sp,8
  80b938:	f800283a 	ret
  80b93c:	000b883a 	mov	r5,zero
  80b940:	8009883a 	mov	r4,r16
  80b944:	0808d180 	call	808d18 <memset>
  80b948:	8005883a 	mov	r2,r16
  80b94c:	dfc00117 	ldw	ra,4(sp)
  80b950:	dc000017 	ldw	r16,0(sp)
  80b954:	dec00204 	addi	sp,sp,8
  80b958:	f800283a 	ret
  80b95c:	80800404 	addi	r2,r16,16
  80b960:	003fee06 	br	80b91c <__alt_data_end+0xff80b91c>
  80b964:	80800204 	addi	r2,r16,8
  80b968:	003fec06 	br	80b91c <__alt_data_end+0xff80b91c>
  80b96c:	0005883a 	mov	r2,zero
  80b970:	003fee06 	br	80b92c <__alt_data_end+0xff80b92c>

0080b974 <_fclose_r>:
  80b974:	28003926 	beq	r5,zero,80ba5c <_fclose_r+0xe8>
  80b978:	defffc04 	addi	sp,sp,-16
  80b97c:	dc400115 	stw	r17,4(sp)
  80b980:	dc000015 	stw	r16,0(sp)
  80b984:	dfc00315 	stw	ra,12(sp)
  80b988:	dc800215 	stw	r18,8(sp)
  80b98c:	2023883a 	mov	r17,r4
  80b990:	2821883a 	mov	r16,r5
  80b994:	20000226 	beq	r4,zero,80b9a0 <_fclose_r+0x2c>
  80b998:	20800e17 	ldw	r2,56(r4)
  80b99c:	10002726 	beq	r2,zero,80ba3c <_fclose_r+0xc8>
  80b9a0:	8080030f 	ldh	r2,12(r16)
  80b9a4:	1000071e 	bne	r2,zero,80b9c4 <_fclose_r+0x50>
  80b9a8:	0005883a 	mov	r2,zero
  80b9ac:	dfc00317 	ldw	ra,12(sp)
  80b9b0:	dc800217 	ldw	r18,8(sp)
  80b9b4:	dc400117 	ldw	r17,4(sp)
  80b9b8:	dc000017 	ldw	r16,0(sp)
  80b9bc:	dec00404 	addi	sp,sp,16
  80b9c0:	f800283a 	ret
  80b9c4:	800b883a 	mov	r5,r16
  80b9c8:	8809883a 	mov	r4,r17
  80b9cc:	08074440 	call	807444 <__sflush_r>
  80b9d0:	1025883a 	mov	r18,r2
  80b9d4:	80800b17 	ldw	r2,44(r16)
  80b9d8:	10000426 	beq	r2,zero,80b9ec <_fclose_r+0x78>
  80b9dc:	81400717 	ldw	r5,28(r16)
  80b9e0:	8809883a 	mov	r4,r17
  80b9e4:	103ee83a 	callr	r2
  80b9e8:	10001616 	blt	r2,zero,80ba44 <_fclose_r+0xd0>
  80b9ec:	8080030b 	ldhu	r2,12(r16)
  80b9f0:	1080200c 	andi	r2,r2,128
  80b9f4:	1000151e 	bne	r2,zero,80ba4c <_fclose_r+0xd8>
  80b9f8:	81400c17 	ldw	r5,48(r16)
  80b9fc:	28000526 	beq	r5,zero,80ba14 <_fclose_r+0xa0>
  80ba00:	80801004 	addi	r2,r16,64
  80ba04:	28800226 	beq	r5,r2,80ba10 <_fclose_r+0x9c>
  80ba08:	8809883a 	mov	r4,r17
  80ba0c:	0807bb00 	call	807bb0 <_free_r>
  80ba10:	80000c15 	stw	zero,48(r16)
  80ba14:	81401117 	ldw	r5,68(r16)
  80ba18:	28000326 	beq	r5,zero,80ba28 <_fclose_r+0xb4>
  80ba1c:	8809883a 	mov	r4,r17
  80ba20:	0807bb00 	call	807bb0 <_free_r>
  80ba24:	80001115 	stw	zero,68(r16)
  80ba28:	0807a4c0 	call	807a4c <__sfp_lock_acquire>
  80ba2c:	8000030d 	sth	zero,12(r16)
  80ba30:	0807a500 	call	807a50 <__sfp_lock_release>
  80ba34:	9005883a 	mov	r2,r18
  80ba38:	003fdc06 	br	80b9ac <__alt_data_end+0xff80b9ac>
  80ba3c:	0807a3c0 	call	807a3c <__sinit>
  80ba40:	003fd706 	br	80b9a0 <__alt_data_end+0xff80b9a0>
  80ba44:	04bfffc4 	movi	r18,-1
  80ba48:	003fe806 	br	80b9ec <__alt_data_end+0xff80b9ec>
  80ba4c:	81400417 	ldw	r5,16(r16)
  80ba50:	8809883a 	mov	r4,r17
  80ba54:	0807bb00 	call	807bb0 <_free_r>
  80ba58:	003fe706 	br	80b9f8 <__alt_data_end+0xff80b9f8>
  80ba5c:	0005883a 	mov	r2,zero
  80ba60:	f800283a 	ret

0080ba64 <fclose>:
  80ba64:	00802074 	movhi	r2,129
  80ba68:	108b6504 	addi	r2,r2,11668
  80ba6c:	200b883a 	mov	r5,r4
  80ba70:	11000017 	ldw	r4,0(r2)
  80ba74:	080b9741 	jmpi	80b974 <_fclose_r>

0080ba78 <__fputwc>:
  80ba78:	defff804 	addi	sp,sp,-32
  80ba7c:	dcc00415 	stw	r19,16(sp)
  80ba80:	dc800315 	stw	r18,12(sp)
  80ba84:	dc000115 	stw	r16,4(sp)
  80ba88:	dfc00715 	stw	ra,28(sp)
  80ba8c:	dd400615 	stw	r21,24(sp)
  80ba90:	dd000515 	stw	r20,20(sp)
  80ba94:	dc400215 	stw	r17,8(sp)
  80ba98:	2027883a 	mov	r19,r4
  80ba9c:	2825883a 	mov	r18,r5
  80baa0:	3021883a 	mov	r16,r6
  80baa4:	08080d00 	call	8080d0 <__locale_mb_cur_max>
  80baa8:	00c00044 	movi	r3,1
  80baac:	10c03e26 	beq	r2,r3,80bba8 <__fputwc+0x130>
  80bab0:	81c01704 	addi	r7,r16,92
  80bab4:	900d883a 	mov	r6,r18
  80bab8:	d80b883a 	mov	r5,sp
  80babc:	9809883a 	mov	r4,r19
  80bac0:	080cac40 	call	80cac4 <_wcrtomb_r>
  80bac4:	1029883a 	mov	r20,r2
  80bac8:	00bfffc4 	movi	r2,-1
  80bacc:	a0802026 	beq	r20,r2,80bb50 <__fputwc+0xd8>
  80bad0:	d9400003 	ldbu	r5,0(sp)
  80bad4:	a0001c26 	beq	r20,zero,80bb48 <__fputwc+0xd0>
  80bad8:	0023883a 	mov	r17,zero
  80badc:	05400284 	movi	r21,10
  80bae0:	00000906 	br	80bb08 <__fputwc+0x90>
  80bae4:	80800017 	ldw	r2,0(r16)
  80bae8:	11400005 	stb	r5,0(r2)
  80baec:	80c00017 	ldw	r3,0(r16)
  80baf0:	18c00044 	addi	r3,r3,1
  80baf4:	80c00015 	stw	r3,0(r16)
  80baf8:	8c400044 	addi	r17,r17,1
  80bafc:	dc45883a 	add	r2,sp,r17
  80bb00:	8d00112e 	bgeu	r17,r20,80bb48 <__fputwc+0xd0>
  80bb04:	11400003 	ldbu	r5,0(r2)
  80bb08:	80c00217 	ldw	r3,8(r16)
  80bb0c:	18ffffc4 	addi	r3,r3,-1
  80bb10:	80c00215 	stw	r3,8(r16)
  80bb14:	183ff30e 	bge	r3,zero,80bae4 <__alt_data_end+0xff80bae4>
  80bb18:	80800617 	ldw	r2,24(r16)
  80bb1c:	18801916 	blt	r3,r2,80bb84 <__fputwc+0x10c>
  80bb20:	80800017 	ldw	r2,0(r16)
  80bb24:	11400005 	stb	r5,0(r2)
  80bb28:	80800017 	ldw	r2,0(r16)
  80bb2c:	10c00003 	ldbu	r3,0(r2)
  80bb30:	10800044 	addi	r2,r2,1
  80bb34:	1d402326 	beq	r3,r21,80bbc4 <__fputwc+0x14c>
  80bb38:	80800015 	stw	r2,0(r16)
  80bb3c:	8c400044 	addi	r17,r17,1
  80bb40:	dc45883a 	add	r2,sp,r17
  80bb44:	8d3fef36 	bltu	r17,r20,80bb04 <__alt_data_end+0xff80bb04>
  80bb48:	9005883a 	mov	r2,r18
  80bb4c:	00000406 	br	80bb60 <__fputwc+0xe8>
  80bb50:	80c0030b 	ldhu	r3,12(r16)
  80bb54:	a005883a 	mov	r2,r20
  80bb58:	18c01014 	ori	r3,r3,64
  80bb5c:	80c0030d 	sth	r3,12(r16)
  80bb60:	dfc00717 	ldw	ra,28(sp)
  80bb64:	dd400617 	ldw	r21,24(sp)
  80bb68:	dd000517 	ldw	r20,20(sp)
  80bb6c:	dcc00417 	ldw	r19,16(sp)
  80bb70:	dc800317 	ldw	r18,12(sp)
  80bb74:	dc400217 	ldw	r17,8(sp)
  80bb78:	dc000117 	ldw	r16,4(sp)
  80bb7c:	dec00804 	addi	sp,sp,32
  80bb80:	f800283a 	ret
  80bb84:	800d883a 	mov	r6,r16
  80bb88:	29403fcc 	andi	r5,r5,255
  80bb8c:	9809883a 	mov	r4,r19
  80bb90:	080c96c0 	call	80c96c <__swbuf_r>
  80bb94:	10bfffe0 	cmpeqi	r2,r2,-1
  80bb98:	10803fcc 	andi	r2,r2,255
  80bb9c:	103fd626 	beq	r2,zero,80baf8 <__alt_data_end+0xff80baf8>
  80bba0:	00bfffc4 	movi	r2,-1
  80bba4:	003fee06 	br	80bb60 <__alt_data_end+0xff80bb60>
  80bba8:	90ffffc4 	addi	r3,r18,-1
  80bbac:	01003f84 	movi	r4,254
  80bbb0:	20ffbf36 	bltu	r4,r3,80bab0 <__alt_data_end+0xff80bab0>
  80bbb4:	900b883a 	mov	r5,r18
  80bbb8:	dc800005 	stb	r18,0(sp)
  80bbbc:	1029883a 	mov	r20,r2
  80bbc0:	003fc506 	br	80bad8 <__alt_data_end+0xff80bad8>
  80bbc4:	800d883a 	mov	r6,r16
  80bbc8:	a80b883a 	mov	r5,r21
  80bbcc:	9809883a 	mov	r4,r19
  80bbd0:	080c96c0 	call	80c96c <__swbuf_r>
  80bbd4:	10bfffe0 	cmpeqi	r2,r2,-1
  80bbd8:	003fef06 	br	80bb98 <__alt_data_end+0xff80bb98>

0080bbdc <_fputwc_r>:
  80bbdc:	3080030b 	ldhu	r2,12(r6)
  80bbe0:	10c8000c 	andi	r3,r2,8192
  80bbe4:	1800051e 	bne	r3,zero,80bbfc <_fputwc_r+0x20>
  80bbe8:	30c01917 	ldw	r3,100(r6)
  80bbec:	10880014 	ori	r2,r2,8192
  80bbf0:	3080030d 	sth	r2,12(r6)
  80bbf4:	18880014 	ori	r2,r3,8192
  80bbf8:	30801915 	stw	r2,100(r6)
  80bbfc:	080ba781 	jmpi	80ba78 <__fputwc>

0080bc00 <fputwc>:
  80bc00:	00802074 	movhi	r2,129
  80bc04:	defffc04 	addi	sp,sp,-16
  80bc08:	108b6504 	addi	r2,r2,11668
  80bc0c:	dc000115 	stw	r16,4(sp)
  80bc10:	14000017 	ldw	r16,0(r2)
  80bc14:	dc400215 	stw	r17,8(sp)
  80bc18:	dfc00315 	stw	ra,12(sp)
  80bc1c:	2023883a 	mov	r17,r4
  80bc20:	80000226 	beq	r16,zero,80bc2c <fputwc+0x2c>
  80bc24:	80800e17 	ldw	r2,56(r16)
  80bc28:	10001026 	beq	r2,zero,80bc6c <fputwc+0x6c>
  80bc2c:	2880030b 	ldhu	r2,12(r5)
  80bc30:	10c8000c 	andi	r3,r2,8192
  80bc34:	1800051e 	bne	r3,zero,80bc4c <fputwc+0x4c>
  80bc38:	28c01917 	ldw	r3,100(r5)
  80bc3c:	10880014 	ori	r2,r2,8192
  80bc40:	2880030d 	sth	r2,12(r5)
  80bc44:	18880014 	ori	r2,r3,8192
  80bc48:	28801915 	stw	r2,100(r5)
  80bc4c:	280d883a 	mov	r6,r5
  80bc50:	8009883a 	mov	r4,r16
  80bc54:	880b883a 	mov	r5,r17
  80bc58:	dfc00317 	ldw	ra,12(sp)
  80bc5c:	dc400217 	ldw	r17,8(sp)
  80bc60:	dc000117 	ldw	r16,4(sp)
  80bc64:	dec00404 	addi	sp,sp,16
  80bc68:	080ba781 	jmpi	80ba78 <__fputwc>
  80bc6c:	8009883a 	mov	r4,r16
  80bc70:	d9400015 	stw	r5,0(sp)
  80bc74:	0807a3c0 	call	807a3c <__sinit>
  80bc78:	d9400017 	ldw	r5,0(sp)
  80bc7c:	003feb06 	br	80bc2c <__alt_data_end+0xff80bc2c>

0080bc80 <_fstat_r>:
  80bc80:	defffd04 	addi	sp,sp,-12
  80bc84:	2805883a 	mov	r2,r5
  80bc88:	dc000015 	stw	r16,0(sp)
  80bc8c:	04002074 	movhi	r16,129
  80bc90:	dc400115 	stw	r17,4(sp)
  80bc94:	84123504 	addi	r16,r16,18644
  80bc98:	2023883a 	mov	r17,r4
  80bc9c:	300b883a 	mov	r5,r6
  80bca0:	1009883a 	mov	r4,r2
  80bca4:	dfc00215 	stw	ra,8(sp)
  80bca8:	80000015 	stw	zero,0(r16)
  80bcac:	080e7c80 	call	80e7c8 <fstat>
  80bcb0:	00ffffc4 	movi	r3,-1
  80bcb4:	10c00526 	beq	r2,r3,80bccc <_fstat_r+0x4c>
  80bcb8:	dfc00217 	ldw	ra,8(sp)
  80bcbc:	dc400117 	ldw	r17,4(sp)
  80bcc0:	dc000017 	ldw	r16,0(sp)
  80bcc4:	dec00304 	addi	sp,sp,12
  80bcc8:	f800283a 	ret
  80bccc:	80c00017 	ldw	r3,0(r16)
  80bcd0:	183ff926 	beq	r3,zero,80bcb8 <__alt_data_end+0xff80bcb8>
  80bcd4:	88c00015 	stw	r3,0(r17)
  80bcd8:	003ff706 	br	80bcb8 <__alt_data_end+0xff80bcb8>

0080bcdc <__sfvwrite_r>:
  80bcdc:	30800217 	ldw	r2,8(r6)
  80bce0:	10006726 	beq	r2,zero,80be80 <__sfvwrite_r+0x1a4>
  80bce4:	28c0030b 	ldhu	r3,12(r5)
  80bce8:	defff404 	addi	sp,sp,-48
  80bcec:	dd400715 	stw	r21,28(sp)
  80bcf0:	dd000615 	stw	r20,24(sp)
  80bcf4:	dc000215 	stw	r16,8(sp)
  80bcf8:	dfc00b15 	stw	ra,44(sp)
  80bcfc:	df000a15 	stw	fp,40(sp)
  80bd00:	ddc00915 	stw	r23,36(sp)
  80bd04:	dd800815 	stw	r22,32(sp)
  80bd08:	dcc00515 	stw	r19,20(sp)
  80bd0c:	dc800415 	stw	r18,16(sp)
  80bd10:	dc400315 	stw	r17,12(sp)
  80bd14:	1880020c 	andi	r2,r3,8
  80bd18:	2821883a 	mov	r16,r5
  80bd1c:	202b883a 	mov	r21,r4
  80bd20:	3029883a 	mov	r20,r6
  80bd24:	10002726 	beq	r2,zero,80bdc4 <__sfvwrite_r+0xe8>
  80bd28:	28800417 	ldw	r2,16(r5)
  80bd2c:	10002526 	beq	r2,zero,80bdc4 <__sfvwrite_r+0xe8>
  80bd30:	1880008c 	andi	r2,r3,2
  80bd34:	a4400017 	ldw	r17,0(r20)
  80bd38:	10002a26 	beq	r2,zero,80bde4 <__sfvwrite_r+0x108>
  80bd3c:	05a00034 	movhi	r22,32768
  80bd40:	0027883a 	mov	r19,zero
  80bd44:	0025883a 	mov	r18,zero
  80bd48:	b5bf0004 	addi	r22,r22,-1024
  80bd4c:	980d883a 	mov	r6,r19
  80bd50:	a809883a 	mov	r4,r21
  80bd54:	90004626 	beq	r18,zero,80be70 <__sfvwrite_r+0x194>
  80bd58:	900f883a 	mov	r7,r18
  80bd5c:	b480022e 	bgeu	r22,r18,80bd68 <__sfvwrite_r+0x8c>
  80bd60:	01e00034 	movhi	r7,32768
  80bd64:	39ff0004 	addi	r7,r7,-1024
  80bd68:	80800917 	ldw	r2,36(r16)
  80bd6c:	81400717 	ldw	r5,28(r16)
  80bd70:	103ee83a 	callr	r2
  80bd74:	0080570e 	bge	zero,r2,80bed4 <__sfvwrite_r+0x1f8>
  80bd78:	a0c00217 	ldw	r3,8(r20)
  80bd7c:	98a7883a 	add	r19,r19,r2
  80bd80:	90a5c83a 	sub	r18,r18,r2
  80bd84:	1885c83a 	sub	r2,r3,r2
  80bd88:	a0800215 	stw	r2,8(r20)
  80bd8c:	103fef1e 	bne	r2,zero,80bd4c <__alt_data_end+0xff80bd4c>
  80bd90:	0005883a 	mov	r2,zero
  80bd94:	dfc00b17 	ldw	ra,44(sp)
  80bd98:	df000a17 	ldw	fp,40(sp)
  80bd9c:	ddc00917 	ldw	r23,36(sp)
  80bda0:	dd800817 	ldw	r22,32(sp)
  80bda4:	dd400717 	ldw	r21,28(sp)
  80bda8:	dd000617 	ldw	r20,24(sp)
  80bdac:	dcc00517 	ldw	r19,20(sp)
  80bdb0:	dc800417 	ldw	r18,16(sp)
  80bdb4:	dc400317 	ldw	r17,12(sp)
  80bdb8:	dc000217 	ldw	r16,8(sp)
  80bdbc:	dec00c04 	addi	sp,sp,48
  80bdc0:	f800283a 	ret
  80bdc4:	800b883a 	mov	r5,r16
  80bdc8:	a809883a 	mov	r4,r21
  80bdcc:	0805a680 	call	805a68 <__swsetup_r>
  80bdd0:	1000eb1e 	bne	r2,zero,80c180 <__sfvwrite_r+0x4a4>
  80bdd4:	80c0030b 	ldhu	r3,12(r16)
  80bdd8:	a4400017 	ldw	r17,0(r20)
  80bddc:	1880008c 	andi	r2,r3,2
  80bde0:	103fd61e 	bne	r2,zero,80bd3c <__alt_data_end+0xff80bd3c>
  80bde4:	1880004c 	andi	r2,r3,1
  80bde8:	10003f1e 	bne	r2,zero,80bee8 <__sfvwrite_r+0x20c>
  80bdec:	0039883a 	mov	fp,zero
  80bdf0:	0025883a 	mov	r18,zero
  80bdf4:	90001a26 	beq	r18,zero,80be60 <__sfvwrite_r+0x184>
  80bdf8:	1880800c 	andi	r2,r3,512
  80bdfc:	84c00217 	ldw	r19,8(r16)
  80be00:	10002126 	beq	r2,zero,80be88 <__sfvwrite_r+0x1ac>
  80be04:	982f883a 	mov	r23,r19
  80be08:	94c09336 	bltu	r18,r19,80c058 <__sfvwrite_r+0x37c>
  80be0c:	1881200c 	andi	r2,r3,1152
  80be10:	10009e1e 	bne	r2,zero,80c08c <__sfvwrite_r+0x3b0>
  80be14:	81000017 	ldw	r4,0(r16)
  80be18:	b80d883a 	mov	r6,r23
  80be1c:	e00b883a 	mov	r5,fp
  80be20:	080c24c0 	call	80c24c <memmove>
  80be24:	80c00217 	ldw	r3,8(r16)
  80be28:	81000017 	ldw	r4,0(r16)
  80be2c:	9005883a 	mov	r2,r18
  80be30:	1ce7c83a 	sub	r19,r3,r19
  80be34:	25cf883a 	add	r7,r4,r23
  80be38:	84c00215 	stw	r19,8(r16)
  80be3c:	81c00015 	stw	r7,0(r16)
  80be40:	a0c00217 	ldw	r3,8(r20)
  80be44:	e0b9883a 	add	fp,fp,r2
  80be48:	90a5c83a 	sub	r18,r18,r2
  80be4c:	18a7c83a 	sub	r19,r3,r2
  80be50:	a4c00215 	stw	r19,8(r20)
  80be54:	983fce26 	beq	r19,zero,80bd90 <__alt_data_end+0xff80bd90>
  80be58:	80c0030b 	ldhu	r3,12(r16)
  80be5c:	903fe61e 	bne	r18,zero,80bdf8 <__alt_data_end+0xff80bdf8>
  80be60:	8f000017 	ldw	fp,0(r17)
  80be64:	8c800117 	ldw	r18,4(r17)
  80be68:	8c400204 	addi	r17,r17,8
  80be6c:	003fe106 	br	80bdf4 <__alt_data_end+0xff80bdf4>
  80be70:	8cc00017 	ldw	r19,0(r17)
  80be74:	8c800117 	ldw	r18,4(r17)
  80be78:	8c400204 	addi	r17,r17,8
  80be7c:	003fb306 	br	80bd4c <__alt_data_end+0xff80bd4c>
  80be80:	0005883a 	mov	r2,zero
  80be84:	f800283a 	ret
  80be88:	81000017 	ldw	r4,0(r16)
  80be8c:	80800417 	ldw	r2,16(r16)
  80be90:	11005736 	bltu	r2,r4,80bff0 <__sfvwrite_r+0x314>
  80be94:	85c00517 	ldw	r23,20(r16)
  80be98:	95c05536 	bltu	r18,r23,80bff0 <__sfvwrite_r+0x314>
  80be9c:	00a00034 	movhi	r2,32768
  80bea0:	10bfffc4 	addi	r2,r2,-1
  80bea4:	9009883a 	mov	r4,r18
  80bea8:	1480012e 	bgeu	r2,r18,80beb0 <__sfvwrite_r+0x1d4>
  80beac:	1009883a 	mov	r4,r2
  80beb0:	b80b883a 	mov	r5,r23
  80beb4:	080d75c0 	call	80d75c <__divsi3>
  80beb8:	15cf383a 	mul	r7,r2,r23
  80bebc:	81400717 	ldw	r5,28(r16)
  80bec0:	80800917 	ldw	r2,36(r16)
  80bec4:	e00d883a 	mov	r6,fp
  80bec8:	a809883a 	mov	r4,r21
  80becc:	103ee83a 	callr	r2
  80bed0:	00bfdb16 	blt	zero,r2,80be40 <__alt_data_end+0xff80be40>
  80bed4:	8080030b 	ldhu	r2,12(r16)
  80bed8:	10801014 	ori	r2,r2,64
  80bedc:	8080030d 	sth	r2,12(r16)
  80bee0:	00bfffc4 	movi	r2,-1
  80bee4:	003fab06 	br	80bd94 <__alt_data_end+0xff80bd94>
  80bee8:	0027883a 	mov	r19,zero
  80beec:	0011883a 	mov	r8,zero
  80bef0:	0039883a 	mov	fp,zero
  80bef4:	0025883a 	mov	r18,zero
  80bef8:	90001f26 	beq	r18,zero,80bf78 <__sfvwrite_r+0x29c>
  80befc:	40005a26 	beq	r8,zero,80c068 <__sfvwrite_r+0x38c>
  80bf00:	982d883a 	mov	r22,r19
  80bf04:	94c0012e 	bgeu	r18,r19,80bf0c <__sfvwrite_r+0x230>
  80bf08:	902d883a 	mov	r22,r18
  80bf0c:	81000017 	ldw	r4,0(r16)
  80bf10:	80800417 	ldw	r2,16(r16)
  80bf14:	b02f883a 	mov	r23,r22
  80bf18:	81c00517 	ldw	r7,20(r16)
  80bf1c:	1100032e 	bgeu	r2,r4,80bf2c <__sfvwrite_r+0x250>
  80bf20:	80c00217 	ldw	r3,8(r16)
  80bf24:	38c7883a 	add	r3,r7,r3
  80bf28:	1d801816 	blt	r3,r22,80bf8c <__sfvwrite_r+0x2b0>
  80bf2c:	b1c03e16 	blt	r22,r7,80c028 <__sfvwrite_r+0x34c>
  80bf30:	80800917 	ldw	r2,36(r16)
  80bf34:	81400717 	ldw	r5,28(r16)
  80bf38:	e00d883a 	mov	r6,fp
  80bf3c:	da000115 	stw	r8,4(sp)
  80bf40:	a809883a 	mov	r4,r21
  80bf44:	103ee83a 	callr	r2
  80bf48:	102f883a 	mov	r23,r2
  80bf4c:	da000117 	ldw	r8,4(sp)
  80bf50:	00bfe00e 	bge	zero,r2,80bed4 <__alt_data_end+0xff80bed4>
  80bf54:	9de7c83a 	sub	r19,r19,r23
  80bf58:	98001f26 	beq	r19,zero,80bfd8 <__sfvwrite_r+0x2fc>
  80bf5c:	a0800217 	ldw	r2,8(r20)
  80bf60:	e5f9883a 	add	fp,fp,r23
  80bf64:	95e5c83a 	sub	r18,r18,r23
  80bf68:	15efc83a 	sub	r23,r2,r23
  80bf6c:	a5c00215 	stw	r23,8(r20)
  80bf70:	b83f8726 	beq	r23,zero,80bd90 <__alt_data_end+0xff80bd90>
  80bf74:	903fe11e 	bne	r18,zero,80befc <__alt_data_end+0xff80befc>
  80bf78:	8f000017 	ldw	fp,0(r17)
  80bf7c:	8c800117 	ldw	r18,4(r17)
  80bf80:	0011883a 	mov	r8,zero
  80bf84:	8c400204 	addi	r17,r17,8
  80bf88:	003fdb06 	br	80bef8 <__alt_data_end+0xff80bef8>
  80bf8c:	180d883a 	mov	r6,r3
  80bf90:	e00b883a 	mov	r5,fp
  80bf94:	da000115 	stw	r8,4(sp)
  80bf98:	d8c00015 	stw	r3,0(sp)
  80bf9c:	080c24c0 	call	80c24c <memmove>
  80bfa0:	d8c00017 	ldw	r3,0(sp)
  80bfa4:	80800017 	ldw	r2,0(r16)
  80bfa8:	800b883a 	mov	r5,r16
  80bfac:	a809883a 	mov	r4,r21
  80bfb0:	10c5883a 	add	r2,r2,r3
  80bfb4:	80800015 	stw	r2,0(r16)
  80bfb8:	d8c00015 	stw	r3,0(sp)
  80bfbc:	08076600 	call	807660 <_fflush_r>
  80bfc0:	d8c00017 	ldw	r3,0(sp)
  80bfc4:	da000117 	ldw	r8,4(sp)
  80bfc8:	103fc21e 	bne	r2,zero,80bed4 <__alt_data_end+0xff80bed4>
  80bfcc:	182f883a 	mov	r23,r3
  80bfd0:	9de7c83a 	sub	r19,r19,r23
  80bfd4:	983fe11e 	bne	r19,zero,80bf5c <__alt_data_end+0xff80bf5c>
  80bfd8:	800b883a 	mov	r5,r16
  80bfdc:	a809883a 	mov	r4,r21
  80bfe0:	08076600 	call	807660 <_fflush_r>
  80bfe4:	103fbb1e 	bne	r2,zero,80bed4 <__alt_data_end+0xff80bed4>
  80bfe8:	0011883a 	mov	r8,zero
  80bfec:	003fdb06 	br	80bf5c <__alt_data_end+0xff80bf5c>
  80bff0:	94c0012e 	bgeu	r18,r19,80bff8 <__sfvwrite_r+0x31c>
  80bff4:	9027883a 	mov	r19,r18
  80bff8:	980d883a 	mov	r6,r19
  80bffc:	e00b883a 	mov	r5,fp
  80c000:	080c24c0 	call	80c24c <memmove>
  80c004:	80800217 	ldw	r2,8(r16)
  80c008:	80c00017 	ldw	r3,0(r16)
  80c00c:	14c5c83a 	sub	r2,r2,r19
  80c010:	1cc7883a 	add	r3,r3,r19
  80c014:	80800215 	stw	r2,8(r16)
  80c018:	80c00015 	stw	r3,0(r16)
  80c01c:	10004326 	beq	r2,zero,80c12c <__sfvwrite_r+0x450>
  80c020:	9805883a 	mov	r2,r19
  80c024:	003f8606 	br	80be40 <__alt_data_end+0xff80be40>
  80c028:	b00d883a 	mov	r6,r22
  80c02c:	e00b883a 	mov	r5,fp
  80c030:	da000115 	stw	r8,4(sp)
  80c034:	080c24c0 	call	80c24c <memmove>
  80c038:	80800217 	ldw	r2,8(r16)
  80c03c:	80c00017 	ldw	r3,0(r16)
  80c040:	da000117 	ldw	r8,4(sp)
  80c044:	1585c83a 	sub	r2,r2,r22
  80c048:	1dad883a 	add	r22,r3,r22
  80c04c:	80800215 	stw	r2,8(r16)
  80c050:	85800015 	stw	r22,0(r16)
  80c054:	003fbf06 	br	80bf54 <__alt_data_end+0xff80bf54>
  80c058:	81000017 	ldw	r4,0(r16)
  80c05c:	9027883a 	mov	r19,r18
  80c060:	902f883a 	mov	r23,r18
  80c064:	003f6c06 	br	80be18 <__alt_data_end+0xff80be18>
  80c068:	900d883a 	mov	r6,r18
  80c06c:	01400284 	movi	r5,10
  80c070:	e009883a 	mov	r4,fp
  80c074:	0808aec0 	call	808aec <memchr>
  80c078:	10003e26 	beq	r2,zero,80c174 <__sfvwrite_r+0x498>
  80c07c:	10800044 	addi	r2,r2,1
  80c080:	1727c83a 	sub	r19,r2,fp
  80c084:	02000044 	movi	r8,1
  80c088:	003f9d06 	br	80bf00 <__alt_data_end+0xff80bf00>
  80c08c:	80800517 	ldw	r2,20(r16)
  80c090:	81400417 	ldw	r5,16(r16)
  80c094:	81c00017 	ldw	r7,0(r16)
  80c098:	10a7883a 	add	r19,r2,r2
  80c09c:	9885883a 	add	r2,r19,r2
  80c0a0:	1026d7fa 	srli	r19,r2,31
  80c0a4:	396dc83a 	sub	r22,r7,r5
  80c0a8:	b1000044 	addi	r4,r22,1
  80c0ac:	9885883a 	add	r2,r19,r2
  80c0b0:	1027d07a 	srai	r19,r2,1
  80c0b4:	2485883a 	add	r2,r4,r18
  80c0b8:	980d883a 	mov	r6,r19
  80c0bc:	9880022e 	bgeu	r19,r2,80c0c8 <__sfvwrite_r+0x3ec>
  80c0c0:	1027883a 	mov	r19,r2
  80c0c4:	100d883a 	mov	r6,r2
  80c0c8:	18c1000c 	andi	r3,r3,1024
  80c0cc:	18001c26 	beq	r3,zero,80c140 <__sfvwrite_r+0x464>
  80c0d0:	300b883a 	mov	r5,r6
  80c0d4:	a809883a 	mov	r4,r21
  80c0d8:	08082e00 	call	8082e0 <_malloc_r>
  80c0dc:	102f883a 	mov	r23,r2
  80c0e0:	10002926 	beq	r2,zero,80c188 <__sfvwrite_r+0x4ac>
  80c0e4:	81400417 	ldw	r5,16(r16)
  80c0e8:	b00d883a 	mov	r6,r22
  80c0ec:	1009883a 	mov	r4,r2
  80c0f0:	0808bd00 	call	808bd0 <memcpy>
  80c0f4:	8080030b 	ldhu	r2,12(r16)
  80c0f8:	00fedfc4 	movi	r3,-1153
  80c0fc:	10c4703a 	and	r2,r2,r3
  80c100:	10802014 	ori	r2,r2,128
  80c104:	8080030d 	sth	r2,12(r16)
  80c108:	bd89883a 	add	r4,r23,r22
  80c10c:	9d8fc83a 	sub	r7,r19,r22
  80c110:	85c00415 	stw	r23,16(r16)
  80c114:	84c00515 	stw	r19,20(r16)
  80c118:	81000015 	stw	r4,0(r16)
  80c11c:	9027883a 	mov	r19,r18
  80c120:	81c00215 	stw	r7,8(r16)
  80c124:	902f883a 	mov	r23,r18
  80c128:	003f3b06 	br	80be18 <__alt_data_end+0xff80be18>
  80c12c:	800b883a 	mov	r5,r16
  80c130:	a809883a 	mov	r4,r21
  80c134:	08076600 	call	807660 <_fflush_r>
  80c138:	103fb926 	beq	r2,zero,80c020 <__alt_data_end+0xff80c020>
  80c13c:	003f6506 	br	80bed4 <__alt_data_end+0xff80bed4>
  80c140:	a809883a 	mov	r4,r21
  80c144:	080c4080 	call	80c408 <_realloc_r>
  80c148:	102f883a 	mov	r23,r2
  80c14c:	103fee1e 	bne	r2,zero,80c108 <__alt_data_end+0xff80c108>
  80c150:	81400417 	ldw	r5,16(r16)
  80c154:	a809883a 	mov	r4,r21
  80c158:	0807bb00 	call	807bb0 <_free_r>
  80c15c:	8080030b 	ldhu	r2,12(r16)
  80c160:	00ffdfc4 	movi	r3,-129
  80c164:	1884703a 	and	r2,r3,r2
  80c168:	00c00304 	movi	r3,12
  80c16c:	a8c00015 	stw	r3,0(r21)
  80c170:	003f5906 	br	80bed8 <__alt_data_end+0xff80bed8>
  80c174:	94c00044 	addi	r19,r18,1
  80c178:	02000044 	movi	r8,1
  80c17c:	003f6006 	br	80bf00 <__alt_data_end+0xff80bf00>
  80c180:	00bfffc4 	movi	r2,-1
  80c184:	003f0306 	br	80bd94 <__alt_data_end+0xff80bd94>
  80c188:	00800304 	movi	r2,12
  80c18c:	a8800015 	stw	r2,0(r21)
  80c190:	8080030b 	ldhu	r2,12(r16)
  80c194:	003f5006 	br	80bed8 <__alt_data_end+0xff80bed8>

0080c198 <_isatty_r>:
  80c198:	defffd04 	addi	sp,sp,-12
  80c19c:	dc000015 	stw	r16,0(sp)
  80c1a0:	04002074 	movhi	r16,129
  80c1a4:	dc400115 	stw	r17,4(sp)
  80c1a8:	84123504 	addi	r16,r16,18644
  80c1ac:	2023883a 	mov	r17,r4
  80c1b0:	2809883a 	mov	r4,r5
  80c1b4:	dfc00215 	stw	ra,8(sp)
  80c1b8:	80000015 	stw	zero,0(r16)
  80c1bc:	080e8b40 	call	80e8b4 <isatty>
  80c1c0:	00ffffc4 	movi	r3,-1
  80c1c4:	10c00526 	beq	r2,r3,80c1dc <_isatty_r+0x44>
  80c1c8:	dfc00217 	ldw	ra,8(sp)
  80c1cc:	dc400117 	ldw	r17,4(sp)
  80c1d0:	dc000017 	ldw	r16,0(sp)
  80c1d4:	dec00304 	addi	sp,sp,12
  80c1d8:	f800283a 	ret
  80c1dc:	80c00017 	ldw	r3,0(r16)
  80c1e0:	183ff926 	beq	r3,zero,80c1c8 <__alt_data_end+0xff80c1c8>
  80c1e4:	88c00015 	stw	r3,0(r17)
  80c1e8:	003ff706 	br	80c1c8 <__alt_data_end+0xff80c1c8>

0080c1ec <_lseek_r>:
  80c1ec:	defffd04 	addi	sp,sp,-12
  80c1f0:	2805883a 	mov	r2,r5
  80c1f4:	dc000015 	stw	r16,0(sp)
  80c1f8:	04002074 	movhi	r16,129
  80c1fc:	dc400115 	stw	r17,4(sp)
  80c200:	300b883a 	mov	r5,r6
  80c204:	84123504 	addi	r16,r16,18644
  80c208:	2023883a 	mov	r17,r4
  80c20c:	380d883a 	mov	r6,r7
  80c210:	1009883a 	mov	r4,r2
  80c214:	dfc00215 	stw	ra,8(sp)
  80c218:	80000015 	stw	zero,0(r16)
  80c21c:	080ea800 	call	80ea80 <lseek>
  80c220:	00ffffc4 	movi	r3,-1
  80c224:	10c00526 	beq	r2,r3,80c23c <_lseek_r+0x50>
  80c228:	dfc00217 	ldw	ra,8(sp)
  80c22c:	dc400117 	ldw	r17,4(sp)
  80c230:	dc000017 	ldw	r16,0(sp)
  80c234:	dec00304 	addi	sp,sp,12
  80c238:	f800283a 	ret
  80c23c:	80c00017 	ldw	r3,0(r16)
  80c240:	183ff926 	beq	r3,zero,80c228 <__alt_data_end+0xff80c228>
  80c244:	88c00015 	stw	r3,0(r17)
  80c248:	003ff706 	br	80c228 <__alt_data_end+0xff80c228>

0080c24c <memmove>:
  80c24c:	2005883a 	mov	r2,r4
  80c250:	29000b2e 	bgeu	r5,r4,80c280 <memmove+0x34>
  80c254:	298f883a 	add	r7,r5,r6
  80c258:	21c0092e 	bgeu	r4,r7,80c280 <memmove+0x34>
  80c25c:	2187883a 	add	r3,r4,r6
  80c260:	198bc83a 	sub	r5,r3,r6
  80c264:	30004826 	beq	r6,zero,80c388 <memmove+0x13c>
  80c268:	39ffffc4 	addi	r7,r7,-1
  80c26c:	39000003 	ldbu	r4,0(r7)
  80c270:	18ffffc4 	addi	r3,r3,-1
  80c274:	19000005 	stb	r4,0(r3)
  80c278:	28fffb1e 	bne	r5,r3,80c268 <__alt_data_end+0xff80c268>
  80c27c:	f800283a 	ret
  80c280:	00c003c4 	movi	r3,15
  80c284:	1980412e 	bgeu	r3,r6,80c38c <memmove+0x140>
  80c288:	2886b03a 	or	r3,r5,r2
  80c28c:	18c000cc 	andi	r3,r3,3
  80c290:	1800401e 	bne	r3,zero,80c394 <memmove+0x148>
  80c294:	33fffc04 	addi	r15,r6,-16
  80c298:	781ed13a 	srli	r15,r15,4
  80c29c:	28c00104 	addi	r3,r5,4
  80c2a0:	13400104 	addi	r13,r2,4
  80c2a4:	781c913a 	slli	r14,r15,4
  80c2a8:	2b000204 	addi	r12,r5,8
  80c2ac:	12c00204 	addi	r11,r2,8
  80c2b0:	73800504 	addi	r14,r14,20
  80c2b4:	2a800304 	addi	r10,r5,12
  80c2b8:	12400304 	addi	r9,r2,12
  80c2bc:	2b9d883a 	add	r14,r5,r14
  80c2c0:	2811883a 	mov	r8,r5
  80c2c4:	100f883a 	mov	r7,r2
  80c2c8:	41000017 	ldw	r4,0(r8)
  80c2cc:	39c00404 	addi	r7,r7,16
  80c2d0:	18c00404 	addi	r3,r3,16
  80c2d4:	393ffc15 	stw	r4,-16(r7)
  80c2d8:	193ffc17 	ldw	r4,-16(r3)
  80c2dc:	6b400404 	addi	r13,r13,16
  80c2e0:	5ac00404 	addi	r11,r11,16
  80c2e4:	693ffc15 	stw	r4,-16(r13)
  80c2e8:	61000017 	ldw	r4,0(r12)
  80c2ec:	4a400404 	addi	r9,r9,16
  80c2f0:	42000404 	addi	r8,r8,16
  80c2f4:	593ffc15 	stw	r4,-16(r11)
  80c2f8:	51000017 	ldw	r4,0(r10)
  80c2fc:	63000404 	addi	r12,r12,16
  80c300:	52800404 	addi	r10,r10,16
  80c304:	493ffc15 	stw	r4,-16(r9)
  80c308:	1bbfef1e 	bne	r3,r14,80c2c8 <__alt_data_end+0xff80c2c8>
  80c30c:	79000044 	addi	r4,r15,1
  80c310:	2008913a 	slli	r4,r4,4
  80c314:	328003cc 	andi	r10,r6,15
  80c318:	02c000c4 	movi	r11,3
  80c31c:	1107883a 	add	r3,r2,r4
  80c320:	290b883a 	add	r5,r5,r4
  80c324:	5a801e2e 	bgeu	r11,r10,80c3a0 <memmove+0x154>
  80c328:	1813883a 	mov	r9,r3
  80c32c:	2811883a 	mov	r8,r5
  80c330:	500f883a 	mov	r7,r10
  80c334:	41000017 	ldw	r4,0(r8)
  80c338:	4a400104 	addi	r9,r9,4
  80c33c:	39ffff04 	addi	r7,r7,-4
  80c340:	493fff15 	stw	r4,-4(r9)
  80c344:	42000104 	addi	r8,r8,4
  80c348:	59fffa36 	bltu	r11,r7,80c334 <__alt_data_end+0xff80c334>
  80c34c:	513fff04 	addi	r4,r10,-4
  80c350:	2008d0ba 	srli	r4,r4,2
  80c354:	318000cc 	andi	r6,r6,3
  80c358:	21000044 	addi	r4,r4,1
  80c35c:	2109883a 	add	r4,r4,r4
  80c360:	2109883a 	add	r4,r4,r4
  80c364:	1907883a 	add	r3,r3,r4
  80c368:	290b883a 	add	r5,r5,r4
  80c36c:	30000b26 	beq	r6,zero,80c39c <memmove+0x150>
  80c370:	198d883a 	add	r6,r3,r6
  80c374:	29c00003 	ldbu	r7,0(r5)
  80c378:	18c00044 	addi	r3,r3,1
  80c37c:	29400044 	addi	r5,r5,1
  80c380:	19ffffc5 	stb	r7,-1(r3)
  80c384:	19bffb1e 	bne	r3,r6,80c374 <__alt_data_end+0xff80c374>
  80c388:	f800283a 	ret
  80c38c:	1007883a 	mov	r3,r2
  80c390:	003ff606 	br	80c36c <__alt_data_end+0xff80c36c>
  80c394:	1007883a 	mov	r3,r2
  80c398:	003ff506 	br	80c370 <__alt_data_end+0xff80c370>
  80c39c:	f800283a 	ret
  80c3a0:	500d883a 	mov	r6,r10
  80c3a4:	003ff106 	br	80c36c <__alt_data_end+0xff80c36c>

0080c3a8 <_read_r>:
  80c3a8:	defffd04 	addi	sp,sp,-12
  80c3ac:	2805883a 	mov	r2,r5
  80c3b0:	dc000015 	stw	r16,0(sp)
  80c3b4:	04002074 	movhi	r16,129
  80c3b8:	dc400115 	stw	r17,4(sp)
  80c3bc:	300b883a 	mov	r5,r6
  80c3c0:	84123504 	addi	r16,r16,18644
  80c3c4:	2023883a 	mov	r17,r4
  80c3c8:	380d883a 	mov	r6,r7
  80c3cc:	1009883a 	mov	r4,r2
  80c3d0:	dfc00215 	stw	ra,8(sp)
  80c3d4:	80000015 	stw	zero,0(r16)
  80c3d8:	080ec900 	call	80ec90 <read>
  80c3dc:	00ffffc4 	movi	r3,-1
  80c3e0:	10c00526 	beq	r2,r3,80c3f8 <_read_r+0x50>
  80c3e4:	dfc00217 	ldw	ra,8(sp)
  80c3e8:	dc400117 	ldw	r17,4(sp)
  80c3ec:	dc000017 	ldw	r16,0(sp)
  80c3f0:	dec00304 	addi	sp,sp,12
  80c3f4:	f800283a 	ret
  80c3f8:	80c00017 	ldw	r3,0(r16)
  80c3fc:	183ff926 	beq	r3,zero,80c3e4 <__alt_data_end+0xff80c3e4>
  80c400:	88c00015 	stw	r3,0(r17)
  80c404:	003ff706 	br	80c3e4 <__alt_data_end+0xff80c3e4>

0080c408 <_realloc_r>:
  80c408:	defff604 	addi	sp,sp,-40
  80c40c:	dc800215 	stw	r18,8(sp)
  80c410:	dfc00915 	stw	ra,36(sp)
  80c414:	df000815 	stw	fp,32(sp)
  80c418:	ddc00715 	stw	r23,28(sp)
  80c41c:	dd800615 	stw	r22,24(sp)
  80c420:	dd400515 	stw	r21,20(sp)
  80c424:	dd000415 	stw	r20,16(sp)
  80c428:	dcc00315 	stw	r19,12(sp)
  80c42c:	dc400115 	stw	r17,4(sp)
  80c430:	dc000015 	stw	r16,0(sp)
  80c434:	3025883a 	mov	r18,r6
  80c438:	2800b726 	beq	r5,zero,80c718 <_realloc_r+0x310>
  80c43c:	282b883a 	mov	r21,r5
  80c440:	2029883a 	mov	r20,r4
  80c444:	080ebd00 	call	80ebd0 <__malloc_lock>
  80c448:	a8bfff17 	ldw	r2,-4(r21)
  80c44c:	043fff04 	movi	r16,-4
  80c450:	90c002c4 	addi	r3,r18,11
  80c454:	01000584 	movi	r4,22
  80c458:	acfffe04 	addi	r19,r21,-8
  80c45c:	1420703a 	and	r16,r2,r16
  80c460:	20c0332e 	bgeu	r4,r3,80c530 <_realloc_r+0x128>
  80c464:	047ffe04 	movi	r17,-8
  80c468:	1c62703a 	and	r17,r3,r17
  80c46c:	8807883a 	mov	r3,r17
  80c470:	88005816 	blt	r17,zero,80c5d4 <_realloc_r+0x1cc>
  80c474:	8c805736 	bltu	r17,r18,80c5d4 <_realloc_r+0x1cc>
  80c478:	80c0300e 	bge	r16,r3,80c53c <_realloc_r+0x134>
  80c47c:	07002074 	movhi	fp,129
  80c480:	e705e004 	addi	fp,fp,6016
  80c484:	e1c00217 	ldw	r7,8(fp)
  80c488:	9c09883a 	add	r4,r19,r16
  80c48c:	22000117 	ldw	r8,4(r4)
  80c490:	21c06326 	beq	r4,r7,80c620 <_realloc_r+0x218>
  80c494:	017fff84 	movi	r5,-2
  80c498:	414a703a 	and	r5,r8,r5
  80c49c:	214b883a 	add	r5,r4,r5
  80c4a0:	29800117 	ldw	r6,4(r5)
  80c4a4:	3180004c 	andi	r6,r6,1
  80c4a8:	30003f26 	beq	r6,zero,80c5a8 <_realloc_r+0x1a0>
  80c4ac:	1080004c 	andi	r2,r2,1
  80c4b0:	10008326 	beq	r2,zero,80c6c0 <_realloc_r+0x2b8>
  80c4b4:	900b883a 	mov	r5,r18
  80c4b8:	a009883a 	mov	r4,r20
  80c4bc:	08082e00 	call	8082e0 <_malloc_r>
  80c4c0:	1025883a 	mov	r18,r2
  80c4c4:	10011e26 	beq	r2,zero,80c940 <_realloc_r+0x538>
  80c4c8:	a93fff17 	ldw	r4,-4(r21)
  80c4cc:	10fffe04 	addi	r3,r2,-8
  80c4d0:	00bfff84 	movi	r2,-2
  80c4d4:	2084703a 	and	r2,r4,r2
  80c4d8:	9885883a 	add	r2,r19,r2
  80c4dc:	1880ee26 	beq	r3,r2,80c898 <_realloc_r+0x490>
  80c4e0:	81bfff04 	addi	r6,r16,-4
  80c4e4:	00800904 	movi	r2,36
  80c4e8:	1180b836 	bltu	r2,r6,80c7cc <_realloc_r+0x3c4>
  80c4ec:	00c004c4 	movi	r3,19
  80c4f0:	19809636 	bltu	r3,r6,80c74c <_realloc_r+0x344>
  80c4f4:	9005883a 	mov	r2,r18
  80c4f8:	a807883a 	mov	r3,r21
  80c4fc:	19000017 	ldw	r4,0(r3)
  80c500:	11000015 	stw	r4,0(r2)
  80c504:	19000117 	ldw	r4,4(r3)
  80c508:	11000115 	stw	r4,4(r2)
  80c50c:	18c00217 	ldw	r3,8(r3)
  80c510:	10c00215 	stw	r3,8(r2)
  80c514:	a80b883a 	mov	r5,r21
  80c518:	a009883a 	mov	r4,r20
  80c51c:	0807bb00 	call	807bb0 <_free_r>
  80c520:	a009883a 	mov	r4,r20
  80c524:	080ebf40 	call	80ebf4 <__malloc_unlock>
  80c528:	9005883a 	mov	r2,r18
  80c52c:	00001206 	br	80c578 <_realloc_r+0x170>
  80c530:	00c00404 	movi	r3,16
  80c534:	1823883a 	mov	r17,r3
  80c538:	003fce06 	br	80c474 <__alt_data_end+0xff80c474>
  80c53c:	a825883a 	mov	r18,r21
  80c540:	8445c83a 	sub	r2,r16,r17
  80c544:	00c003c4 	movi	r3,15
  80c548:	18802636 	bltu	r3,r2,80c5e4 <_realloc_r+0x1dc>
  80c54c:	99800117 	ldw	r6,4(r19)
  80c550:	9c07883a 	add	r3,r19,r16
  80c554:	3180004c 	andi	r6,r6,1
  80c558:	3420b03a 	or	r16,r6,r16
  80c55c:	9c000115 	stw	r16,4(r19)
  80c560:	18800117 	ldw	r2,4(r3)
  80c564:	10800054 	ori	r2,r2,1
  80c568:	18800115 	stw	r2,4(r3)
  80c56c:	a009883a 	mov	r4,r20
  80c570:	080ebf40 	call	80ebf4 <__malloc_unlock>
  80c574:	9005883a 	mov	r2,r18
  80c578:	dfc00917 	ldw	ra,36(sp)
  80c57c:	df000817 	ldw	fp,32(sp)
  80c580:	ddc00717 	ldw	r23,28(sp)
  80c584:	dd800617 	ldw	r22,24(sp)
  80c588:	dd400517 	ldw	r21,20(sp)
  80c58c:	dd000417 	ldw	r20,16(sp)
  80c590:	dcc00317 	ldw	r19,12(sp)
  80c594:	dc800217 	ldw	r18,8(sp)
  80c598:	dc400117 	ldw	r17,4(sp)
  80c59c:	dc000017 	ldw	r16,0(sp)
  80c5a0:	dec00a04 	addi	sp,sp,40
  80c5a4:	f800283a 	ret
  80c5a8:	017fff04 	movi	r5,-4
  80c5ac:	414a703a 	and	r5,r8,r5
  80c5b0:	814d883a 	add	r6,r16,r5
  80c5b4:	30c01f16 	blt	r6,r3,80c634 <_realloc_r+0x22c>
  80c5b8:	20800317 	ldw	r2,12(r4)
  80c5bc:	20c00217 	ldw	r3,8(r4)
  80c5c0:	a825883a 	mov	r18,r21
  80c5c4:	3021883a 	mov	r16,r6
  80c5c8:	18800315 	stw	r2,12(r3)
  80c5cc:	10c00215 	stw	r3,8(r2)
  80c5d0:	003fdb06 	br	80c540 <__alt_data_end+0xff80c540>
  80c5d4:	00800304 	movi	r2,12
  80c5d8:	a0800015 	stw	r2,0(r20)
  80c5dc:	0005883a 	mov	r2,zero
  80c5e0:	003fe506 	br	80c578 <__alt_data_end+0xff80c578>
  80c5e4:	98c00117 	ldw	r3,4(r19)
  80c5e8:	9c4b883a 	add	r5,r19,r17
  80c5ec:	11000054 	ori	r4,r2,1
  80c5f0:	18c0004c 	andi	r3,r3,1
  80c5f4:	1c62b03a 	or	r17,r3,r17
  80c5f8:	9c400115 	stw	r17,4(r19)
  80c5fc:	29000115 	stw	r4,4(r5)
  80c600:	2885883a 	add	r2,r5,r2
  80c604:	10c00117 	ldw	r3,4(r2)
  80c608:	29400204 	addi	r5,r5,8
  80c60c:	a009883a 	mov	r4,r20
  80c610:	18c00054 	ori	r3,r3,1
  80c614:	10c00115 	stw	r3,4(r2)
  80c618:	0807bb00 	call	807bb0 <_free_r>
  80c61c:	003fd306 	br	80c56c <__alt_data_end+0xff80c56c>
  80c620:	017fff04 	movi	r5,-4
  80c624:	414a703a 	and	r5,r8,r5
  80c628:	89800404 	addi	r6,r17,16
  80c62c:	8151883a 	add	r8,r16,r5
  80c630:	4180590e 	bge	r8,r6,80c798 <_realloc_r+0x390>
  80c634:	1080004c 	andi	r2,r2,1
  80c638:	103f9e1e 	bne	r2,zero,80c4b4 <__alt_data_end+0xff80c4b4>
  80c63c:	adbffe17 	ldw	r22,-8(r21)
  80c640:	00bfff04 	movi	r2,-4
  80c644:	9dadc83a 	sub	r22,r19,r22
  80c648:	b1800117 	ldw	r6,4(r22)
  80c64c:	3084703a 	and	r2,r6,r2
  80c650:	20002026 	beq	r4,zero,80c6d4 <_realloc_r+0x2cc>
  80c654:	80af883a 	add	r23,r16,r2
  80c658:	b96f883a 	add	r23,r23,r5
  80c65c:	21c05f26 	beq	r4,r7,80c7dc <_realloc_r+0x3d4>
  80c660:	b8c01c16 	blt	r23,r3,80c6d4 <_realloc_r+0x2cc>
  80c664:	20800317 	ldw	r2,12(r4)
  80c668:	20c00217 	ldw	r3,8(r4)
  80c66c:	81bfff04 	addi	r6,r16,-4
  80c670:	01000904 	movi	r4,36
  80c674:	18800315 	stw	r2,12(r3)
  80c678:	10c00215 	stw	r3,8(r2)
  80c67c:	b0c00217 	ldw	r3,8(r22)
  80c680:	b0800317 	ldw	r2,12(r22)
  80c684:	b4800204 	addi	r18,r22,8
  80c688:	18800315 	stw	r2,12(r3)
  80c68c:	10c00215 	stw	r3,8(r2)
  80c690:	21801b36 	bltu	r4,r6,80c700 <_realloc_r+0x2f8>
  80c694:	008004c4 	movi	r2,19
  80c698:	1180352e 	bgeu	r2,r6,80c770 <_realloc_r+0x368>
  80c69c:	a8800017 	ldw	r2,0(r21)
  80c6a0:	b0800215 	stw	r2,8(r22)
  80c6a4:	a8800117 	ldw	r2,4(r21)
  80c6a8:	b0800315 	stw	r2,12(r22)
  80c6ac:	008006c4 	movi	r2,27
  80c6b0:	11807f36 	bltu	r2,r6,80c8b0 <_realloc_r+0x4a8>
  80c6b4:	b0800404 	addi	r2,r22,16
  80c6b8:	ad400204 	addi	r21,r21,8
  80c6bc:	00002d06 	br	80c774 <_realloc_r+0x36c>
  80c6c0:	adbffe17 	ldw	r22,-8(r21)
  80c6c4:	00bfff04 	movi	r2,-4
  80c6c8:	9dadc83a 	sub	r22,r19,r22
  80c6cc:	b1000117 	ldw	r4,4(r22)
  80c6d0:	2084703a 	and	r2,r4,r2
  80c6d4:	b03f7726 	beq	r22,zero,80c4b4 <__alt_data_end+0xff80c4b4>
  80c6d8:	80af883a 	add	r23,r16,r2
  80c6dc:	b8ff7516 	blt	r23,r3,80c4b4 <__alt_data_end+0xff80c4b4>
  80c6e0:	b0800317 	ldw	r2,12(r22)
  80c6e4:	b0c00217 	ldw	r3,8(r22)
  80c6e8:	81bfff04 	addi	r6,r16,-4
  80c6ec:	01000904 	movi	r4,36
  80c6f0:	18800315 	stw	r2,12(r3)
  80c6f4:	10c00215 	stw	r3,8(r2)
  80c6f8:	b4800204 	addi	r18,r22,8
  80c6fc:	21bfe52e 	bgeu	r4,r6,80c694 <__alt_data_end+0xff80c694>
  80c700:	a80b883a 	mov	r5,r21
  80c704:	9009883a 	mov	r4,r18
  80c708:	080c24c0 	call	80c24c <memmove>
  80c70c:	b821883a 	mov	r16,r23
  80c710:	b027883a 	mov	r19,r22
  80c714:	003f8a06 	br	80c540 <__alt_data_end+0xff80c540>
  80c718:	300b883a 	mov	r5,r6
  80c71c:	dfc00917 	ldw	ra,36(sp)
  80c720:	df000817 	ldw	fp,32(sp)
  80c724:	ddc00717 	ldw	r23,28(sp)
  80c728:	dd800617 	ldw	r22,24(sp)
  80c72c:	dd400517 	ldw	r21,20(sp)
  80c730:	dd000417 	ldw	r20,16(sp)
  80c734:	dcc00317 	ldw	r19,12(sp)
  80c738:	dc800217 	ldw	r18,8(sp)
  80c73c:	dc400117 	ldw	r17,4(sp)
  80c740:	dc000017 	ldw	r16,0(sp)
  80c744:	dec00a04 	addi	sp,sp,40
  80c748:	08082e01 	jmpi	8082e0 <_malloc_r>
  80c74c:	a8c00017 	ldw	r3,0(r21)
  80c750:	90c00015 	stw	r3,0(r18)
  80c754:	a8c00117 	ldw	r3,4(r21)
  80c758:	90c00115 	stw	r3,4(r18)
  80c75c:	00c006c4 	movi	r3,27
  80c760:	19804536 	bltu	r3,r6,80c878 <_realloc_r+0x470>
  80c764:	90800204 	addi	r2,r18,8
  80c768:	a8c00204 	addi	r3,r21,8
  80c76c:	003f6306 	br	80c4fc <__alt_data_end+0xff80c4fc>
  80c770:	9005883a 	mov	r2,r18
  80c774:	a8c00017 	ldw	r3,0(r21)
  80c778:	b821883a 	mov	r16,r23
  80c77c:	b027883a 	mov	r19,r22
  80c780:	10c00015 	stw	r3,0(r2)
  80c784:	a8c00117 	ldw	r3,4(r21)
  80c788:	10c00115 	stw	r3,4(r2)
  80c78c:	a8c00217 	ldw	r3,8(r21)
  80c790:	10c00215 	stw	r3,8(r2)
  80c794:	003f6a06 	br	80c540 <__alt_data_end+0xff80c540>
  80c798:	9c67883a 	add	r19,r19,r17
  80c79c:	4445c83a 	sub	r2,r8,r17
  80c7a0:	e4c00215 	stw	r19,8(fp)
  80c7a4:	10800054 	ori	r2,r2,1
  80c7a8:	98800115 	stw	r2,4(r19)
  80c7ac:	a8bfff17 	ldw	r2,-4(r21)
  80c7b0:	a009883a 	mov	r4,r20
  80c7b4:	1080004c 	andi	r2,r2,1
  80c7b8:	1462b03a 	or	r17,r2,r17
  80c7bc:	ac7fff15 	stw	r17,-4(r21)
  80c7c0:	080ebf40 	call	80ebf4 <__malloc_unlock>
  80c7c4:	a805883a 	mov	r2,r21
  80c7c8:	003f6b06 	br	80c578 <__alt_data_end+0xff80c578>
  80c7cc:	a80b883a 	mov	r5,r21
  80c7d0:	9009883a 	mov	r4,r18
  80c7d4:	080c24c0 	call	80c24c <memmove>
  80c7d8:	003f4e06 	br	80c514 <__alt_data_end+0xff80c514>
  80c7dc:	89000404 	addi	r4,r17,16
  80c7e0:	b93fbc16 	blt	r23,r4,80c6d4 <__alt_data_end+0xff80c6d4>
  80c7e4:	b0800317 	ldw	r2,12(r22)
  80c7e8:	b0c00217 	ldw	r3,8(r22)
  80c7ec:	81bfff04 	addi	r6,r16,-4
  80c7f0:	01000904 	movi	r4,36
  80c7f4:	18800315 	stw	r2,12(r3)
  80c7f8:	10c00215 	stw	r3,8(r2)
  80c7fc:	b4800204 	addi	r18,r22,8
  80c800:	21804336 	bltu	r4,r6,80c910 <_realloc_r+0x508>
  80c804:	008004c4 	movi	r2,19
  80c808:	11803f2e 	bgeu	r2,r6,80c908 <_realloc_r+0x500>
  80c80c:	a8800017 	ldw	r2,0(r21)
  80c810:	b0800215 	stw	r2,8(r22)
  80c814:	a8800117 	ldw	r2,4(r21)
  80c818:	b0800315 	stw	r2,12(r22)
  80c81c:	008006c4 	movi	r2,27
  80c820:	11803f36 	bltu	r2,r6,80c920 <_realloc_r+0x518>
  80c824:	b0800404 	addi	r2,r22,16
  80c828:	ad400204 	addi	r21,r21,8
  80c82c:	a8c00017 	ldw	r3,0(r21)
  80c830:	10c00015 	stw	r3,0(r2)
  80c834:	a8c00117 	ldw	r3,4(r21)
  80c838:	10c00115 	stw	r3,4(r2)
  80c83c:	a8c00217 	ldw	r3,8(r21)
  80c840:	10c00215 	stw	r3,8(r2)
  80c844:	b447883a 	add	r3,r22,r17
  80c848:	bc45c83a 	sub	r2,r23,r17
  80c84c:	e0c00215 	stw	r3,8(fp)
  80c850:	10800054 	ori	r2,r2,1
  80c854:	18800115 	stw	r2,4(r3)
  80c858:	b0800117 	ldw	r2,4(r22)
  80c85c:	a009883a 	mov	r4,r20
  80c860:	1080004c 	andi	r2,r2,1
  80c864:	1462b03a 	or	r17,r2,r17
  80c868:	b4400115 	stw	r17,4(r22)
  80c86c:	080ebf40 	call	80ebf4 <__malloc_unlock>
  80c870:	9005883a 	mov	r2,r18
  80c874:	003f4006 	br	80c578 <__alt_data_end+0xff80c578>
  80c878:	a8c00217 	ldw	r3,8(r21)
  80c87c:	90c00215 	stw	r3,8(r18)
  80c880:	a8c00317 	ldw	r3,12(r21)
  80c884:	90c00315 	stw	r3,12(r18)
  80c888:	30801126 	beq	r6,r2,80c8d0 <_realloc_r+0x4c8>
  80c88c:	90800404 	addi	r2,r18,16
  80c890:	a8c00404 	addi	r3,r21,16
  80c894:	003f1906 	br	80c4fc <__alt_data_end+0xff80c4fc>
  80c898:	90ffff17 	ldw	r3,-4(r18)
  80c89c:	00bfff04 	movi	r2,-4
  80c8a0:	a825883a 	mov	r18,r21
  80c8a4:	1884703a 	and	r2,r3,r2
  80c8a8:	80a1883a 	add	r16,r16,r2
  80c8ac:	003f2406 	br	80c540 <__alt_data_end+0xff80c540>
  80c8b0:	a8800217 	ldw	r2,8(r21)
  80c8b4:	b0800415 	stw	r2,16(r22)
  80c8b8:	a8800317 	ldw	r2,12(r21)
  80c8bc:	b0800515 	stw	r2,20(r22)
  80c8c0:	31000a26 	beq	r6,r4,80c8ec <_realloc_r+0x4e4>
  80c8c4:	b0800604 	addi	r2,r22,24
  80c8c8:	ad400404 	addi	r21,r21,16
  80c8cc:	003fa906 	br	80c774 <__alt_data_end+0xff80c774>
  80c8d0:	a9000417 	ldw	r4,16(r21)
  80c8d4:	90800604 	addi	r2,r18,24
  80c8d8:	a8c00604 	addi	r3,r21,24
  80c8dc:	91000415 	stw	r4,16(r18)
  80c8e0:	a9000517 	ldw	r4,20(r21)
  80c8e4:	91000515 	stw	r4,20(r18)
  80c8e8:	003f0406 	br	80c4fc <__alt_data_end+0xff80c4fc>
  80c8ec:	a8c00417 	ldw	r3,16(r21)
  80c8f0:	ad400604 	addi	r21,r21,24
  80c8f4:	b0800804 	addi	r2,r22,32
  80c8f8:	b0c00615 	stw	r3,24(r22)
  80c8fc:	a8ffff17 	ldw	r3,-4(r21)
  80c900:	b0c00715 	stw	r3,28(r22)
  80c904:	003f9b06 	br	80c774 <__alt_data_end+0xff80c774>
  80c908:	9005883a 	mov	r2,r18
  80c90c:	003fc706 	br	80c82c <__alt_data_end+0xff80c82c>
  80c910:	a80b883a 	mov	r5,r21
  80c914:	9009883a 	mov	r4,r18
  80c918:	080c24c0 	call	80c24c <memmove>
  80c91c:	003fc906 	br	80c844 <__alt_data_end+0xff80c844>
  80c920:	a8800217 	ldw	r2,8(r21)
  80c924:	b0800415 	stw	r2,16(r22)
  80c928:	a8800317 	ldw	r2,12(r21)
  80c92c:	b0800515 	stw	r2,20(r22)
  80c930:	31000726 	beq	r6,r4,80c950 <_realloc_r+0x548>
  80c934:	b0800604 	addi	r2,r22,24
  80c938:	ad400404 	addi	r21,r21,16
  80c93c:	003fbb06 	br	80c82c <__alt_data_end+0xff80c82c>
  80c940:	a009883a 	mov	r4,r20
  80c944:	080ebf40 	call	80ebf4 <__malloc_unlock>
  80c948:	0005883a 	mov	r2,zero
  80c94c:	003f0a06 	br	80c578 <__alt_data_end+0xff80c578>
  80c950:	a8c00417 	ldw	r3,16(r21)
  80c954:	ad400604 	addi	r21,r21,24
  80c958:	b0800804 	addi	r2,r22,32
  80c95c:	b0c00615 	stw	r3,24(r22)
  80c960:	a8ffff17 	ldw	r3,-4(r21)
  80c964:	b0c00715 	stw	r3,28(r22)
  80c968:	003fb006 	br	80c82c <__alt_data_end+0xff80c82c>

0080c96c <__swbuf_r>:
  80c96c:	defffb04 	addi	sp,sp,-20
  80c970:	dcc00315 	stw	r19,12(sp)
  80c974:	dc800215 	stw	r18,8(sp)
  80c978:	dc000015 	stw	r16,0(sp)
  80c97c:	dfc00415 	stw	ra,16(sp)
  80c980:	dc400115 	stw	r17,4(sp)
  80c984:	2025883a 	mov	r18,r4
  80c988:	2827883a 	mov	r19,r5
  80c98c:	3021883a 	mov	r16,r6
  80c990:	20000226 	beq	r4,zero,80c99c <__swbuf_r+0x30>
  80c994:	20800e17 	ldw	r2,56(r4)
  80c998:	10004226 	beq	r2,zero,80caa4 <__swbuf_r+0x138>
  80c99c:	80800617 	ldw	r2,24(r16)
  80c9a0:	8100030b 	ldhu	r4,12(r16)
  80c9a4:	80800215 	stw	r2,8(r16)
  80c9a8:	2080020c 	andi	r2,r4,8
  80c9ac:	10003626 	beq	r2,zero,80ca88 <__swbuf_r+0x11c>
  80c9b0:	80c00417 	ldw	r3,16(r16)
  80c9b4:	18003426 	beq	r3,zero,80ca88 <__swbuf_r+0x11c>
  80c9b8:	2088000c 	andi	r2,r4,8192
  80c9bc:	9c403fcc 	andi	r17,r19,255
  80c9c0:	10001a26 	beq	r2,zero,80ca2c <__swbuf_r+0xc0>
  80c9c4:	80800017 	ldw	r2,0(r16)
  80c9c8:	81000517 	ldw	r4,20(r16)
  80c9cc:	10c7c83a 	sub	r3,r2,r3
  80c9d0:	1900200e 	bge	r3,r4,80ca54 <__swbuf_r+0xe8>
  80c9d4:	18c00044 	addi	r3,r3,1
  80c9d8:	81000217 	ldw	r4,8(r16)
  80c9dc:	11400044 	addi	r5,r2,1
  80c9e0:	81400015 	stw	r5,0(r16)
  80c9e4:	213fffc4 	addi	r4,r4,-1
  80c9e8:	81000215 	stw	r4,8(r16)
  80c9ec:	14c00005 	stb	r19,0(r2)
  80c9f0:	80800517 	ldw	r2,20(r16)
  80c9f4:	10c01e26 	beq	r2,r3,80ca70 <__swbuf_r+0x104>
  80c9f8:	8080030b 	ldhu	r2,12(r16)
  80c9fc:	1080004c 	andi	r2,r2,1
  80ca00:	10000226 	beq	r2,zero,80ca0c <__swbuf_r+0xa0>
  80ca04:	00800284 	movi	r2,10
  80ca08:	88801926 	beq	r17,r2,80ca70 <__swbuf_r+0x104>
  80ca0c:	8805883a 	mov	r2,r17
  80ca10:	dfc00417 	ldw	ra,16(sp)
  80ca14:	dcc00317 	ldw	r19,12(sp)
  80ca18:	dc800217 	ldw	r18,8(sp)
  80ca1c:	dc400117 	ldw	r17,4(sp)
  80ca20:	dc000017 	ldw	r16,0(sp)
  80ca24:	dec00504 	addi	sp,sp,20
  80ca28:	f800283a 	ret
  80ca2c:	81401917 	ldw	r5,100(r16)
  80ca30:	00b7ffc4 	movi	r2,-8193
  80ca34:	21080014 	ori	r4,r4,8192
  80ca38:	2884703a 	and	r2,r5,r2
  80ca3c:	80801915 	stw	r2,100(r16)
  80ca40:	80800017 	ldw	r2,0(r16)
  80ca44:	8100030d 	sth	r4,12(r16)
  80ca48:	81000517 	ldw	r4,20(r16)
  80ca4c:	10c7c83a 	sub	r3,r2,r3
  80ca50:	193fe016 	blt	r3,r4,80c9d4 <__alt_data_end+0xff80c9d4>
  80ca54:	800b883a 	mov	r5,r16
  80ca58:	9009883a 	mov	r4,r18
  80ca5c:	08076600 	call	807660 <_fflush_r>
  80ca60:	1000071e 	bne	r2,zero,80ca80 <__swbuf_r+0x114>
  80ca64:	80800017 	ldw	r2,0(r16)
  80ca68:	00c00044 	movi	r3,1
  80ca6c:	003fda06 	br	80c9d8 <__alt_data_end+0xff80c9d8>
  80ca70:	800b883a 	mov	r5,r16
  80ca74:	9009883a 	mov	r4,r18
  80ca78:	08076600 	call	807660 <_fflush_r>
  80ca7c:	103fe326 	beq	r2,zero,80ca0c <__alt_data_end+0xff80ca0c>
  80ca80:	00bfffc4 	movi	r2,-1
  80ca84:	003fe206 	br	80ca10 <__alt_data_end+0xff80ca10>
  80ca88:	800b883a 	mov	r5,r16
  80ca8c:	9009883a 	mov	r4,r18
  80ca90:	0805a680 	call	805a68 <__swsetup_r>
  80ca94:	103ffa1e 	bne	r2,zero,80ca80 <__alt_data_end+0xff80ca80>
  80ca98:	8100030b 	ldhu	r4,12(r16)
  80ca9c:	80c00417 	ldw	r3,16(r16)
  80caa0:	003fc506 	br	80c9b8 <__alt_data_end+0xff80c9b8>
  80caa4:	0807a3c0 	call	807a3c <__sinit>
  80caa8:	003fbc06 	br	80c99c <__alt_data_end+0xff80c99c>

0080caac <__swbuf>:
  80caac:	00802074 	movhi	r2,129
  80cab0:	108b6504 	addi	r2,r2,11668
  80cab4:	280d883a 	mov	r6,r5
  80cab8:	200b883a 	mov	r5,r4
  80cabc:	11000017 	ldw	r4,0(r2)
  80cac0:	080c96c1 	jmpi	80c96c <__swbuf_r>

0080cac4 <_wcrtomb_r>:
  80cac4:	defff604 	addi	sp,sp,-40
  80cac8:	00802074 	movhi	r2,129
  80cacc:	dc800815 	stw	r18,32(sp)
  80cad0:	dc400715 	stw	r17,28(sp)
  80cad4:	dc000615 	stw	r16,24(sp)
  80cad8:	108b6904 	addi	r2,r2,11684
  80cadc:	dfc00915 	stw	ra,36(sp)
  80cae0:	2021883a 	mov	r16,r4
  80cae4:	3823883a 	mov	r17,r7
  80cae8:	14800017 	ldw	r18,0(r2)
  80caec:	28001426 	beq	r5,zero,80cb40 <_wcrtomb_r+0x7c>
  80caf0:	d9400415 	stw	r5,16(sp)
  80caf4:	d9800515 	stw	r6,20(sp)
  80caf8:	08080c40 	call	8080c4 <__locale_charset>
  80cafc:	d9800517 	ldw	r6,20(sp)
  80cb00:	d9400417 	ldw	r5,16(sp)
  80cb04:	100f883a 	mov	r7,r2
  80cb08:	dc400015 	stw	r17,0(sp)
  80cb0c:	8009883a 	mov	r4,r16
  80cb10:	903ee83a 	callr	r18
  80cb14:	00ffffc4 	movi	r3,-1
  80cb18:	10c0031e 	bne	r2,r3,80cb28 <_wcrtomb_r+0x64>
  80cb1c:	88000015 	stw	zero,0(r17)
  80cb20:	00c02284 	movi	r3,138
  80cb24:	80c00015 	stw	r3,0(r16)
  80cb28:	dfc00917 	ldw	ra,36(sp)
  80cb2c:	dc800817 	ldw	r18,32(sp)
  80cb30:	dc400717 	ldw	r17,28(sp)
  80cb34:	dc000617 	ldw	r16,24(sp)
  80cb38:	dec00a04 	addi	sp,sp,40
  80cb3c:	f800283a 	ret
  80cb40:	08080c40 	call	8080c4 <__locale_charset>
  80cb44:	100f883a 	mov	r7,r2
  80cb48:	dc400015 	stw	r17,0(sp)
  80cb4c:	000d883a 	mov	r6,zero
  80cb50:	d9400104 	addi	r5,sp,4
  80cb54:	8009883a 	mov	r4,r16
  80cb58:	903ee83a 	callr	r18
  80cb5c:	003fed06 	br	80cb14 <__alt_data_end+0xff80cb14>

0080cb60 <wcrtomb>:
  80cb60:	defff604 	addi	sp,sp,-40
  80cb64:	00802074 	movhi	r2,129
  80cb68:	dc800615 	stw	r18,24(sp)
  80cb6c:	dc400515 	stw	r17,20(sp)
  80cb70:	108b6504 	addi	r2,r2,11668
  80cb74:	dfc00915 	stw	ra,36(sp)
  80cb78:	dd000815 	stw	r20,32(sp)
  80cb7c:	dcc00715 	stw	r19,28(sp)
  80cb80:	dc000415 	stw	r16,16(sp)
  80cb84:	3025883a 	mov	r18,r6
  80cb88:	14400017 	ldw	r17,0(r2)
  80cb8c:	20001926 	beq	r4,zero,80cbf4 <wcrtomb+0x94>
  80cb90:	00802074 	movhi	r2,129
  80cb94:	108b6904 	addi	r2,r2,11684
  80cb98:	15000017 	ldw	r20,0(r2)
  80cb9c:	2021883a 	mov	r16,r4
  80cba0:	2827883a 	mov	r19,r5
  80cba4:	08080c40 	call	8080c4 <__locale_charset>
  80cba8:	100f883a 	mov	r7,r2
  80cbac:	dc800015 	stw	r18,0(sp)
  80cbb0:	980d883a 	mov	r6,r19
  80cbb4:	800b883a 	mov	r5,r16
  80cbb8:	8809883a 	mov	r4,r17
  80cbbc:	a03ee83a 	callr	r20
  80cbc0:	00ffffc4 	movi	r3,-1
  80cbc4:	10c0031e 	bne	r2,r3,80cbd4 <wcrtomb+0x74>
  80cbc8:	90000015 	stw	zero,0(r18)
  80cbcc:	00c02284 	movi	r3,138
  80cbd0:	88c00015 	stw	r3,0(r17)
  80cbd4:	dfc00917 	ldw	ra,36(sp)
  80cbd8:	dd000817 	ldw	r20,32(sp)
  80cbdc:	dcc00717 	ldw	r19,28(sp)
  80cbe0:	dc800617 	ldw	r18,24(sp)
  80cbe4:	dc400517 	ldw	r17,20(sp)
  80cbe8:	dc000417 	ldw	r16,16(sp)
  80cbec:	dec00a04 	addi	sp,sp,40
  80cbf0:	f800283a 	ret
  80cbf4:	00802074 	movhi	r2,129
  80cbf8:	108b6904 	addi	r2,r2,11684
  80cbfc:	14000017 	ldw	r16,0(r2)
  80cc00:	08080c40 	call	8080c4 <__locale_charset>
  80cc04:	100f883a 	mov	r7,r2
  80cc08:	dc800015 	stw	r18,0(sp)
  80cc0c:	000d883a 	mov	r6,zero
  80cc10:	d9400104 	addi	r5,sp,4
  80cc14:	8809883a 	mov	r4,r17
  80cc18:	803ee83a 	callr	r16
  80cc1c:	003fe806 	br	80cbc0 <__alt_data_end+0xff80cbc0>

0080cc20 <__ascii_wctomb>:
  80cc20:	28000526 	beq	r5,zero,80cc38 <__ascii_wctomb+0x18>
  80cc24:	00803fc4 	movi	r2,255
  80cc28:	11800536 	bltu	r2,r6,80cc40 <__ascii_wctomb+0x20>
  80cc2c:	29800005 	stb	r6,0(r5)
  80cc30:	00800044 	movi	r2,1
  80cc34:	f800283a 	ret
  80cc38:	0005883a 	mov	r2,zero
  80cc3c:	f800283a 	ret
  80cc40:	00802284 	movi	r2,138
  80cc44:	20800015 	stw	r2,0(r4)
  80cc48:	00bfffc4 	movi	r2,-1
  80cc4c:	f800283a 	ret

0080cc50 <_wctomb_r>:
  80cc50:	00802074 	movhi	r2,129
  80cc54:	defff904 	addi	sp,sp,-28
  80cc58:	108b6904 	addi	r2,r2,11684
  80cc5c:	dfc00615 	stw	ra,24(sp)
  80cc60:	dc400515 	stw	r17,20(sp)
  80cc64:	dc000415 	stw	r16,16(sp)
  80cc68:	3823883a 	mov	r17,r7
  80cc6c:	14000017 	ldw	r16,0(r2)
  80cc70:	d9000115 	stw	r4,4(sp)
  80cc74:	d9400215 	stw	r5,8(sp)
  80cc78:	d9800315 	stw	r6,12(sp)
  80cc7c:	08080c40 	call	8080c4 <__locale_charset>
  80cc80:	d9800317 	ldw	r6,12(sp)
  80cc84:	d9400217 	ldw	r5,8(sp)
  80cc88:	d9000117 	ldw	r4,4(sp)
  80cc8c:	100f883a 	mov	r7,r2
  80cc90:	dc400015 	stw	r17,0(sp)
  80cc94:	803ee83a 	callr	r16
  80cc98:	dfc00617 	ldw	ra,24(sp)
  80cc9c:	dc400517 	ldw	r17,20(sp)
  80cca0:	dc000417 	ldw	r16,16(sp)
  80cca4:	dec00704 	addi	sp,sp,28
  80cca8:	f800283a 	ret

0080ccac <__udivdi3>:
  80ccac:	defff504 	addi	sp,sp,-44
  80ccb0:	dcc00415 	stw	r19,16(sp)
  80ccb4:	dc000115 	stw	r16,4(sp)
  80ccb8:	dfc00a15 	stw	ra,40(sp)
  80ccbc:	df000915 	stw	fp,36(sp)
  80ccc0:	ddc00815 	stw	r23,32(sp)
  80ccc4:	dd800715 	stw	r22,28(sp)
  80ccc8:	dd400615 	stw	r21,24(sp)
  80cccc:	dd000515 	stw	r20,20(sp)
  80ccd0:	dc800315 	stw	r18,12(sp)
  80ccd4:	dc400215 	stw	r17,8(sp)
  80ccd8:	2027883a 	mov	r19,r4
  80ccdc:	2821883a 	mov	r16,r5
  80cce0:	3800411e 	bne	r7,zero,80cde8 <__udivdi3+0x13c>
  80cce4:	3023883a 	mov	r17,r6
  80cce8:	2025883a 	mov	r18,r4
  80ccec:	2980522e 	bgeu	r5,r6,80ce38 <__udivdi3+0x18c>
  80ccf0:	00bfffd4 	movui	r2,65535
  80ccf4:	282d883a 	mov	r22,r5
  80ccf8:	1180a836 	bltu	r2,r6,80cf9c <__udivdi3+0x2f0>
  80ccfc:	00803fc4 	movi	r2,255
  80cd00:	1185803a 	cmpltu	r2,r2,r6
  80cd04:	100490fa 	slli	r2,r2,3
  80cd08:	3086d83a 	srl	r3,r6,r2
  80cd0c:	01002074 	movhi	r4,129
  80cd10:	2103fb44 	addi	r4,r4,4077
  80cd14:	20c7883a 	add	r3,r4,r3
  80cd18:	18c00003 	ldbu	r3,0(r3)
  80cd1c:	1885883a 	add	r2,r3,r2
  80cd20:	00c00804 	movi	r3,32
  80cd24:	1887c83a 	sub	r3,r3,r2
  80cd28:	18000526 	beq	r3,zero,80cd40 <__udivdi3+0x94>
  80cd2c:	80e0983a 	sll	r16,r16,r3
  80cd30:	9884d83a 	srl	r2,r19,r2
  80cd34:	30e2983a 	sll	r17,r6,r3
  80cd38:	98e4983a 	sll	r18,r19,r3
  80cd3c:	142cb03a 	or	r22,r2,r16
  80cd40:	882ad43a 	srli	r21,r17,16
  80cd44:	b009883a 	mov	r4,r22
  80cd48:	8d3fffcc 	andi	r20,r17,65535
  80cd4c:	a80b883a 	mov	r5,r21
  80cd50:	080d8b80 	call	80d8b8 <__umodsi3>
  80cd54:	b009883a 	mov	r4,r22
  80cd58:	a80b883a 	mov	r5,r21
  80cd5c:	1027883a 	mov	r19,r2
  80cd60:	080d8540 	call	80d854 <__udivsi3>
  80cd64:	102d883a 	mov	r22,r2
  80cd68:	9826943a 	slli	r19,r19,16
  80cd6c:	9004d43a 	srli	r2,r18,16
  80cd70:	a5a1383a 	mul	r16,r20,r22
  80cd74:	14c4b03a 	or	r2,r2,r19
  80cd78:	1400052e 	bgeu	r2,r16,80cd90 <__udivdi3+0xe4>
  80cd7c:	1445883a 	add	r2,r2,r17
  80cd80:	b0ffffc4 	addi	r3,r22,-1
  80cd84:	14400136 	bltu	r2,r17,80cd8c <__udivdi3+0xe0>
  80cd88:	14012336 	bltu	r2,r16,80d218 <__udivdi3+0x56c>
  80cd8c:	182d883a 	mov	r22,r3
  80cd90:	1421c83a 	sub	r16,r2,r16
  80cd94:	a80b883a 	mov	r5,r21
  80cd98:	8009883a 	mov	r4,r16
  80cd9c:	080d8b80 	call	80d8b8 <__umodsi3>
  80cda0:	1027883a 	mov	r19,r2
  80cda4:	a80b883a 	mov	r5,r21
  80cda8:	8009883a 	mov	r4,r16
  80cdac:	080d8540 	call	80d854 <__udivsi3>
  80cdb0:	9826943a 	slli	r19,r19,16
  80cdb4:	a0a9383a 	mul	r20,r20,r2
  80cdb8:	94bfffcc 	andi	r18,r18,65535
  80cdbc:	94e4b03a 	or	r18,r18,r19
  80cdc0:	9500052e 	bgeu	r18,r20,80cdd8 <__udivdi3+0x12c>
  80cdc4:	8ca5883a 	add	r18,r17,r18
  80cdc8:	10ffffc4 	addi	r3,r2,-1
  80cdcc:	9440f136 	bltu	r18,r17,80d194 <__udivdi3+0x4e8>
  80cdd0:	9500f02e 	bgeu	r18,r20,80d194 <__udivdi3+0x4e8>
  80cdd4:	10bfff84 	addi	r2,r2,-2
  80cdd8:	b00c943a 	slli	r6,r22,16
  80cddc:	0007883a 	mov	r3,zero
  80cde0:	3084b03a 	or	r2,r6,r2
  80cde4:	00005906 	br	80cf4c <__udivdi3+0x2a0>
  80cde8:	29c05636 	bltu	r5,r7,80cf44 <__udivdi3+0x298>
  80cdec:	00bfffd4 	movui	r2,65535
  80cdf0:	11c0622e 	bgeu	r2,r7,80cf7c <__udivdi3+0x2d0>
  80cdf4:	00804034 	movhi	r2,256
  80cdf8:	10bfffc4 	addi	r2,r2,-1
  80cdfc:	11c0ee36 	bltu	r2,r7,80d1b8 <__udivdi3+0x50c>
  80ce00:	00800404 	movi	r2,16
  80ce04:	3886d83a 	srl	r3,r7,r2
  80ce08:	01002074 	movhi	r4,129
  80ce0c:	2103fb44 	addi	r4,r4,4077
  80ce10:	20c7883a 	add	r3,r4,r3
  80ce14:	18c00003 	ldbu	r3,0(r3)
  80ce18:	05400804 	movi	r21,32
  80ce1c:	1885883a 	add	r2,r3,r2
  80ce20:	a8abc83a 	sub	r21,r21,r2
  80ce24:	a800621e 	bne	r21,zero,80cfb0 <__udivdi3+0x304>
  80ce28:	3c00e936 	bltu	r7,r16,80d1d0 <__udivdi3+0x524>
  80ce2c:	9985403a 	cmpgeu	r2,r19,r6
  80ce30:	0007883a 	mov	r3,zero
  80ce34:	00004506 	br	80cf4c <__udivdi3+0x2a0>
  80ce38:	3000041e 	bne	r6,zero,80ce4c <__udivdi3+0x1a0>
  80ce3c:	000b883a 	mov	r5,zero
  80ce40:	01000044 	movi	r4,1
  80ce44:	080d8540 	call	80d854 <__udivsi3>
  80ce48:	1023883a 	mov	r17,r2
  80ce4c:	00bfffd4 	movui	r2,65535
  80ce50:	14404e2e 	bgeu	r2,r17,80cf8c <__udivdi3+0x2e0>
  80ce54:	00804034 	movhi	r2,256
  80ce58:	10bfffc4 	addi	r2,r2,-1
  80ce5c:	1440d836 	bltu	r2,r17,80d1c0 <__udivdi3+0x514>
  80ce60:	00800404 	movi	r2,16
  80ce64:	8886d83a 	srl	r3,r17,r2
  80ce68:	01002074 	movhi	r4,129
  80ce6c:	2103fb44 	addi	r4,r4,4077
  80ce70:	20c7883a 	add	r3,r4,r3
  80ce74:	18c00003 	ldbu	r3,0(r3)
  80ce78:	1885883a 	add	r2,r3,r2
  80ce7c:	00c00804 	movi	r3,32
  80ce80:	1887c83a 	sub	r3,r3,r2
  80ce84:	18008f1e 	bne	r3,zero,80d0c4 <__udivdi3+0x418>
  80ce88:	882ad43a 	srli	r21,r17,16
  80ce8c:	8461c83a 	sub	r16,r16,r17
  80ce90:	8d3fffcc 	andi	r20,r17,65535
  80ce94:	00c00044 	movi	r3,1
  80ce98:	8009883a 	mov	r4,r16
  80ce9c:	a80b883a 	mov	r5,r21
  80cea0:	d8c00015 	stw	r3,0(sp)
  80cea4:	080d8b80 	call	80d8b8 <__umodsi3>
  80cea8:	8009883a 	mov	r4,r16
  80ceac:	a80b883a 	mov	r5,r21
  80ceb0:	1027883a 	mov	r19,r2
  80ceb4:	080d8540 	call	80d854 <__udivsi3>
  80ceb8:	9826943a 	slli	r19,r19,16
  80cebc:	9008d43a 	srli	r4,r18,16
  80cec0:	1521383a 	mul	r16,r2,r20
  80cec4:	102d883a 	mov	r22,r2
  80cec8:	24c8b03a 	or	r4,r4,r19
  80cecc:	d8c00017 	ldw	r3,0(sp)
  80ced0:	2400052e 	bgeu	r4,r16,80cee8 <__udivdi3+0x23c>
  80ced4:	2449883a 	add	r4,r4,r17
  80ced8:	b0bfffc4 	addi	r2,r22,-1
  80cedc:	24400136 	bltu	r4,r17,80cee4 <__udivdi3+0x238>
  80cee0:	2400ca36 	bltu	r4,r16,80d20c <__udivdi3+0x560>
  80cee4:	102d883a 	mov	r22,r2
  80cee8:	2421c83a 	sub	r16,r4,r16
  80ceec:	a80b883a 	mov	r5,r21
  80cef0:	8009883a 	mov	r4,r16
  80cef4:	d8c00015 	stw	r3,0(sp)
  80cef8:	080d8b80 	call	80d8b8 <__umodsi3>
  80cefc:	1027883a 	mov	r19,r2
  80cf00:	a80b883a 	mov	r5,r21
  80cf04:	8009883a 	mov	r4,r16
  80cf08:	080d8540 	call	80d854 <__udivsi3>
  80cf0c:	9826943a 	slli	r19,r19,16
  80cf10:	1529383a 	mul	r20,r2,r20
  80cf14:	94bfffcc 	andi	r18,r18,65535
  80cf18:	94e4b03a 	or	r18,r18,r19
  80cf1c:	d8c00017 	ldw	r3,0(sp)
  80cf20:	9500052e 	bgeu	r18,r20,80cf38 <__udivdi3+0x28c>
  80cf24:	8ca5883a 	add	r18,r17,r18
  80cf28:	113fffc4 	addi	r4,r2,-1
  80cf2c:	94409736 	bltu	r18,r17,80d18c <__udivdi3+0x4e0>
  80cf30:	9500962e 	bgeu	r18,r20,80d18c <__udivdi3+0x4e0>
  80cf34:	10bfff84 	addi	r2,r2,-2
  80cf38:	b00c943a 	slli	r6,r22,16
  80cf3c:	3084b03a 	or	r2,r6,r2
  80cf40:	00000206 	br	80cf4c <__udivdi3+0x2a0>
  80cf44:	0007883a 	mov	r3,zero
  80cf48:	0005883a 	mov	r2,zero
  80cf4c:	dfc00a17 	ldw	ra,40(sp)
  80cf50:	df000917 	ldw	fp,36(sp)
  80cf54:	ddc00817 	ldw	r23,32(sp)
  80cf58:	dd800717 	ldw	r22,28(sp)
  80cf5c:	dd400617 	ldw	r21,24(sp)
  80cf60:	dd000517 	ldw	r20,20(sp)
  80cf64:	dcc00417 	ldw	r19,16(sp)
  80cf68:	dc800317 	ldw	r18,12(sp)
  80cf6c:	dc400217 	ldw	r17,8(sp)
  80cf70:	dc000117 	ldw	r16,4(sp)
  80cf74:	dec00b04 	addi	sp,sp,44
  80cf78:	f800283a 	ret
  80cf7c:	00803fc4 	movi	r2,255
  80cf80:	11c5803a 	cmpltu	r2,r2,r7
  80cf84:	100490fa 	slli	r2,r2,3
  80cf88:	003f9e06 	br	80ce04 <__alt_data_end+0xff80ce04>
  80cf8c:	00803fc4 	movi	r2,255
  80cf90:	1445803a 	cmpltu	r2,r2,r17
  80cf94:	100490fa 	slli	r2,r2,3
  80cf98:	003fb206 	br	80ce64 <__alt_data_end+0xff80ce64>
  80cf9c:	00804034 	movhi	r2,256
  80cfa0:	10bfffc4 	addi	r2,r2,-1
  80cfa4:	11808836 	bltu	r2,r6,80d1c8 <__udivdi3+0x51c>
  80cfa8:	00800404 	movi	r2,16
  80cfac:	003f5606 	br	80cd08 <__alt_data_end+0xff80cd08>
  80cfb0:	30aed83a 	srl	r23,r6,r2
  80cfb4:	3d4e983a 	sll	r7,r7,r21
  80cfb8:	80acd83a 	srl	r22,r16,r2
  80cfbc:	9884d83a 	srl	r2,r19,r2
  80cfc0:	3deeb03a 	or	r23,r7,r23
  80cfc4:	b824d43a 	srli	r18,r23,16
  80cfc8:	8560983a 	sll	r16,r16,r21
  80cfcc:	b009883a 	mov	r4,r22
  80cfd0:	900b883a 	mov	r5,r18
  80cfd4:	3568983a 	sll	r20,r6,r21
  80cfd8:	1420b03a 	or	r16,r2,r16
  80cfdc:	080d8b80 	call	80d8b8 <__umodsi3>
  80cfe0:	b009883a 	mov	r4,r22
  80cfe4:	900b883a 	mov	r5,r18
  80cfe8:	1023883a 	mov	r17,r2
  80cfec:	080d8540 	call	80d854 <__udivsi3>
  80cff0:	8808943a 	slli	r4,r17,16
  80cff4:	bf3fffcc 	andi	fp,r23,65535
  80cff8:	8006d43a 	srli	r3,r16,16
  80cffc:	e0a3383a 	mul	r17,fp,r2
  80d000:	100d883a 	mov	r6,r2
  80d004:	1906b03a 	or	r3,r3,r4
  80d008:	1c40042e 	bgeu	r3,r17,80d01c <__udivdi3+0x370>
  80d00c:	1dc7883a 	add	r3,r3,r23
  80d010:	10bfffc4 	addi	r2,r2,-1
  80d014:	1dc0752e 	bgeu	r3,r23,80d1ec <__udivdi3+0x540>
  80d018:	100d883a 	mov	r6,r2
  80d01c:	1c63c83a 	sub	r17,r3,r17
  80d020:	900b883a 	mov	r5,r18
  80d024:	8809883a 	mov	r4,r17
  80d028:	d9800015 	stw	r6,0(sp)
  80d02c:	080d8b80 	call	80d8b8 <__umodsi3>
  80d030:	102d883a 	mov	r22,r2
  80d034:	8809883a 	mov	r4,r17
  80d038:	900b883a 	mov	r5,r18
  80d03c:	080d8540 	call	80d854 <__udivsi3>
  80d040:	b02c943a 	slli	r22,r22,16
  80d044:	e089383a 	mul	r4,fp,r2
  80d048:	843fffcc 	andi	r16,r16,65535
  80d04c:	85a0b03a 	or	r16,r16,r22
  80d050:	d9800017 	ldw	r6,0(sp)
  80d054:	8100042e 	bgeu	r16,r4,80d068 <__udivdi3+0x3bc>
  80d058:	85e1883a 	add	r16,r16,r23
  80d05c:	10ffffc4 	addi	r3,r2,-1
  80d060:	85c05e2e 	bgeu	r16,r23,80d1dc <__udivdi3+0x530>
  80d064:	1805883a 	mov	r2,r3
  80d068:	300c943a 	slli	r6,r6,16
  80d06c:	a17fffcc 	andi	r5,r20,65535
  80d070:	a028d43a 	srli	r20,r20,16
  80d074:	3084b03a 	or	r2,r6,r2
  80d078:	10ffffcc 	andi	r3,r2,65535
  80d07c:	100cd43a 	srli	r6,r2,16
  80d080:	194f383a 	mul	r7,r3,r5
  80d084:	1d07383a 	mul	r3,r3,r20
  80d088:	314b383a 	mul	r5,r6,r5
  80d08c:	3810d43a 	srli	r8,r7,16
  80d090:	8121c83a 	sub	r16,r16,r4
  80d094:	1947883a 	add	r3,r3,r5
  80d098:	40c7883a 	add	r3,r8,r3
  80d09c:	350d383a 	mul	r6,r6,r20
  80d0a0:	1940022e 	bgeu	r3,r5,80d0ac <__udivdi3+0x400>
  80d0a4:	01000074 	movhi	r4,1
  80d0a8:	310d883a 	add	r6,r6,r4
  80d0ac:	1828d43a 	srli	r20,r3,16
  80d0b0:	a18d883a 	add	r6,r20,r6
  80d0b4:	81803e36 	bltu	r16,r6,80d1b0 <__udivdi3+0x504>
  80d0b8:	81803826 	beq	r16,r6,80d19c <__udivdi3+0x4f0>
  80d0bc:	0007883a 	mov	r3,zero
  80d0c0:	003fa206 	br	80cf4c <__alt_data_end+0xff80cf4c>
  80d0c4:	88e2983a 	sll	r17,r17,r3
  80d0c8:	80a8d83a 	srl	r20,r16,r2
  80d0cc:	80e0983a 	sll	r16,r16,r3
  80d0d0:	882ad43a 	srli	r21,r17,16
  80d0d4:	9884d83a 	srl	r2,r19,r2
  80d0d8:	a009883a 	mov	r4,r20
  80d0dc:	a80b883a 	mov	r5,r21
  80d0e0:	142eb03a 	or	r23,r2,r16
  80d0e4:	98e4983a 	sll	r18,r19,r3
  80d0e8:	080d8b80 	call	80d8b8 <__umodsi3>
  80d0ec:	a009883a 	mov	r4,r20
  80d0f0:	a80b883a 	mov	r5,r21
  80d0f4:	1021883a 	mov	r16,r2
  80d0f8:	080d8540 	call	80d854 <__udivsi3>
  80d0fc:	1039883a 	mov	fp,r2
  80d100:	8d3fffcc 	andi	r20,r17,65535
  80d104:	8020943a 	slli	r16,r16,16
  80d108:	b804d43a 	srli	r2,r23,16
  80d10c:	a72d383a 	mul	r22,r20,fp
  80d110:	1404b03a 	or	r2,r2,r16
  80d114:	1580062e 	bgeu	r2,r22,80d130 <__udivdi3+0x484>
  80d118:	1445883a 	add	r2,r2,r17
  80d11c:	e0ffffc4 	addi	r3,fp,-1
  80d120:	14403836 	bltu	r2,r17,80d204 <__udivdi3+0x558>
  80d124:	1580372e 	bgeu	r2,r22,80d204 <__udivdi3+0x558>
  80d128:	e73fff84 	addi	fp,fp,-2
  80d12c:	1445883a 	add	r2,r2,r17
  80d130:	15adc83a 	sub	r22,r2,r22
  80d134:	a80b883a 	mov	r5,r21
  80d138:	b009883a 	mov	r4,r22
  80d13c:	080d8b80 	call	80d8b8 <__umodsi3>
  80d140:	1027883a 	mov	r19,r2
  80d144:	b009883a 	mov	r4,r22
  80d148:	a80b883a 	mov	r5,r21
  80d14c:	080d8540 	call	80d854 <__udivsi3>
  80d150:	9826943a 	slli	r19,r19,16
  80d154:	a0a1383a 	mul	r16,r20,r2
  80d158:	b93fffcc 	andi	r4,r23,65535
  80d15c:	24c8b03a 	or	r4,r4,r19
  80d160:	2400062e 	bgeu	r4,r16,80d17c <__udivdi3+0x4d0>
  80d164:	2449883a 	add	r4,r4,r17
  80d168:	10ffffc4 	addi	r3,r2,-1
  80d16c:	24402336 	bltu	r4,r17,80d1fc <__udivdi3+0x550>
  80d170:	2400222e 	bgeu	r4,r16,80d1fc <__udivdi3+0x550>
  80d174:	10bfff84 	addi	r2,r2,-2
  80d178:	2449883a 	add	r4,r4,r17
  80d17c:	e038943a 	slli	fp,fp,16
  80d180:	2421c83a 	sub	r16,r4,r16
  80d184:	e086b03a 	or	r3,fp,r2
  80d188:	003f4306 	br	80ce98 <__alt_data_end+0xff80ce98>
  80d18c:	2005883a 	mov	r2,r4
  80d190:	003f6906 	br	80cf38 <__alt_data_end+0xff80cf38>
  80d194:	1805883a 	mov	r2,r3
  80d198:	003f0f06 	br	80cdd8 <__alt_data_end+0xff80cdd8>
  80d19c:	1806943a 	slli	r3,r3,16
  80d1a0:	9d66983a 	sll	r19,r19,r21
  80d1a4:	39ffffcc 	andi	r7,r7,65535
  80d1a8:	19c7883a 	add	r3,r3,r7
  80d1ac:	98ffc32e 	bgeu	r19,r3,80d0bc <__alt_data_end+0xff80d0bc>
  80d1b0:	10bfffc4 	addi	r2,r2,-1
  80d1b4:	003fc106 	br	80d0bc <__alt_data_end+0xff80d0bc>
  80d1b8:	00800604 	movi	r2,24
  80d1bc:	003f1106 	br	80ce04 <__alt_data_end+0xff80ce04>
  80d1c0:	00800604 	movi	r2,24
  80d1c4:	003f2706 	br	80ce64 <__alt_data_end+0xff80ce64>
  80d1c8:	00800604 	movi	r2,24
  80d1cc:	003ece06 	br	80cd08 <__alt_data_end+0xff80cd08>
  80d1d0:	0007883a 	mov	r3,zero
  80d1d4:	00800044 	movi	r2,1
  80d1d8:	003f5c06 	br	80cf4c <__alt_data_end+0xff80cf4c>
  80d1dc:	813fa12e 	bgeu	r16,r4,80d064 <__alt_data_end+0xff80d064>
  80d1e0:	10bfff84 	addi	r2,r2,-2
  80d1e4:	85e1883a 	add	r16,r16,r23
  80d1e8:	003f9f06 	br	80d068 <__alt_data_end+0xff80d068>
  80d1ec:	1c7f8a2e 	bgeu	r3,r17,80d018 <__alt_data_end+0xff80d018>
  80d1f0:	31bfff84 	addi	r6,r6,-2
  80d1f4:	1dc7883a 	add	r3,r3,r23
  80d1f8:	003f8806 	br	80d01c <__alt_data_end+0xff80d01c>
  80d1fc:	1805883a 	mov	r2,r3
  80d200:	003fde06 	br	80d17c <__alt_data_end+0xff80d17c>
  80d204:	1839883a 	mov	fp,r3
  80d208:	003fc906 	br	80d130 <__alt_data_end+0xff80d130>
  80d20c:	b5bfff84 	addi	r22,r22,-2
  80d210:	2449883a 	add	r4,r4,r17
  80d214:	003f3406 	br	80cee8 <__alt_data_end+0xff80cee8>
  80d218:	b5bfff84 	addi	r22,r22,-2
  80d21c:	1445883a 	add	r2,r2,r17
  80d220:	003edb06 	br	80cd90 <__alt_data_end+0xff80cd90>

0080d224 <__umoddi3>:
  80d224:	defff404 	addi	sp,sp,-48
  80d228:	df000a15 	stw	fp,40(sp)
  80d22c:	dc400315 	stw	r17,12(sp)
  80d230:	dc000215 	stw	r16,8(sp)
  80d234:	dfc00b15 	stw	ra,44(sp)
  80d238:	ddc00915 	stw	r23,36(sp)
  80d23c:	dd800815 	stw	r22,32(sp)
  80d240:	dd400715 	stw	r21,28(sp)
  80d244:	dd000615 	stw	r20,24(sp)
  80d248:	dcc00515 	stw	r19,20(sp)
  80d24c:	dc800415 	stw	r18,16(sp)
  80d250:	2021883a 	mov	r16,r4
  80d254:	2823883a 	mov	r17,r5
  80d258:	2839883a 	mov	fp,r5
  80d25c:	38003c1e 	bne	r7,zero,80d350 <__umoddi3+0x12c>
  80d260:	3027883a 	mov	r19,r6
  80d264:	2029883a 	mov	r20,r4
  80d268:	2980512e 	bgeu	r5,r6,80d3b0 <__umoddi3+0x18c>
  80d26c:	00bfffd4 	movui	r2,65535
  80d270:	11809a36 	bltu	r2,r6,80d4dc <__umoddi3+0x2b8>
  80d274:	01003fc4 	movi	r4,255
  80d278:	2189803a 	cmpltu	r4,r4,r6
  80d27c:	200890fa 	slli	r4,r4,3
  80d280:	3104d83a 	srl	r2,r6,r4
  80d284:	00c02074 	movhi	r3,129
  80d288:	18c3fb44 	addi	r3,r3,4077
  80d28c:	1885883a 	add	r2,r3,r2
  80d290:	10c00003 	ldbu	r3,0(r2)
  80d294:	00800804 	movi	r2,32
  80d298:	1909883a 	add	r4,r3,r4
  80d29c:	1125c83a 	sub	r18,r2,r4
  80d2a0:	90000526 	beq	r18,zero,80d2b8 <__umoddi3+0x94>
  80d2a4:	8ca2983a 	sll	r17,r17,r18
  80d2a8:	8108d83a 	srl	r4,r16,r4
  80d2ac:	34a6983a 	sll	r19,r6,r18
  80d2b0:	84a8983a 	sll	r20,r16,r18
  80d2b4:	2478b03a 	or	fp,r4,r17
  80d2b8:	982ed43a 	srli	r23,r19,16
  80d2bc:	e009883a 	mov	r4,fp
  80d2c0:	9dbfffcc 	andi	r22,r19,65535
  80d2c4:	b80b883a 	mov	r5,r23
  80d2c8:	080d8b80 	call	80d8b8 <__umodsi3>
  80d2cc:	e009883a 	mov	r4,fp
  80d2d0:	b80b883a 	mov	r5,r23
  80d2d4:	102b883a 	mov	r21,r2
  80d2d8:	080d8540 	call	80d854 <__udivsi3>
  80d2dc:	a806943a 	slli	r3,r21,16
  80d2e0:	a008d43a 	srli	r4,r20,16
  80d2e4:	b085383a 	mul	r2,r22,r2
  80d2e8:	20c8b03a 	or	r4,r4,r3
  80d2ec:	2080032e 	bgeu	r4,r2,80d2fc <__umoddi3+0xd8>
  80d2f0:	24c9883a 	add	r4,r4,r19
  80d2f4:	24c00136 	bltu	r4,r19,80d2fc <__umoddi3+0xd8>
  80d2f8:	20811036 	bltu	r4,r2,80d73c <__umoddi3+0x518>
  80d2fc:	20abc83a 	sub	r21,r4,r2
  80d300:	b80b883a 	mov	r5,r23
  80d304:	a809883a 	mov	r4,r21
  80d308:	080d8b80 	call	80d8b8 <__umodsi3>
  80d30c:	1023883a 	mov	r17,r2
  80d310:	b80b883a 	mov	r5,r23
  80d314:	a809883a 	mov	r4,r21
  80d318:	080d8540 	call	80d854 <__udivsi3>
  80d31c:	8822943a 	slli	r17,r17,16
  80d320:	b085383a 	mul	r2,r22,r2
  80d324:	a0ffffcc 	andi	r3,r20,65535
  80d328:	1c46b03a 	or	r3,r3,r17
  80d32c:	1880042e 	bgeu	r3,r2,80d340 <__umoddi3+0x11c>
  80d330:	1cc7883a 	add	r3,r3,r19
  80d334:	1cc00236 	bltu	r3,r19,80d340 <__umoddi3+0x11c>
  80d338:	1880012e 	bgeu	r3,r2,80d340 <__umoddi3+0x11c>
  80d33c:	1cc7883a 	add	r3,r3,r19
  80d340:	1885c83a 	sub	r2,r3,r2
  80d344:	1484d83a 	srl	r2,r2,r18
  80d348:	0007883a 	mov	r3,zero
  80d34c:	00004f06 	br	80d48c <__umoddi3+0x268>
  80d350:	29c04c36 	bltu	r5,r7,80d484 <__umoddi3+0x260>
  80d354:	00bfffd4 	movui	r2,65535
  80d358:	11c0582e 	bgeu	r2,r7,80d4bc <__umoddi3+0x298>
  80d35c:	00804034 	movhi	r2,256
  80d360:	10bfffc4 	addi	r2,r2,-1
  80d364:	11c0e736 	bltu	r2,r7,80d704 <__umoddi3+0x4e0>
  80d368:	01000404 	movi	r4,16
  80d36c:	3904d83a 	srl	r2,r7,r4
  80d370:	00c02074 	movhi	r3,129
  80d374:	18c3fb44 	addi	r3,r3,4077
  80d378:	1885883a 	add	r2,r3,r2
  80d37c:	14c00003 	ldbu	r19,0(r2)
  80d380:	00c00804 	movi	r3,32
  80d384:	9927883a 	add	r19,r19,r4
  80d388:	1ce9c83a 	sub	r20,r3,r19
  80d38c:	a000581e 	bne	r20,zero,80d4f0 <__umoddi3+0x2cc>
  80d390:	3c400136 	bltu	r7,r17,80d398 <__umoddi3+0x174>
  80d394:	8180eb36 	bltu	r16,r6,80d744 <__umoddi3+0x520>
  80d398:	8185c83a 	sub	r2,r16,r6
  80d39c:	89e3c83a 	sub	r17,r17,r7
  80d3a0:	8089803a 	cmpltu	r4,r16,r2
  80d3a4:	8939c83a 	sub	fp,r17,r4
  80d3a8:	e007883a 	mov	r3,fp
  80d3ac:	00003706 	br	80d48c <__umoddi3+0x268>
  80d3b0:	3000041e 	bne	r6,zero,80d3c4 <__umoddi3+0x1a0>
  80d3b4:	000b883a 	mov	r5,zero
  80d3b8:	01000044 	movi	r4,1
  80d3bc:	080d8540 	call	80d854 <__udivsi3>
  80d3c0:	1027883a 	mov	r19,r2
  80d3c4:	00bfffd4 	movui	r2,65535
  80d3c8:	14c0402e 	bgeu	r2,r19,80d4cc <__umoddi3+0x2a8>
  80d3cc:	00804034 	movhi	r2,256
  80d3d0:	10bfffc4 	addi	r2,r2,-1
  80d3d4:	14c0cd36 	bltu	r2,r19,80d70c <__umoddi3+0x4e8>
  80d3d8:	00800404 	movi	r2,16
  80d3dc:	9886d83a 	srl	r3,r19,r2
  80d3e0:	01002074 	movhi	r4,129
  80d3e4:	2103fb44 	addi	r4,r4,4077
  80d3e8:	20c7883a 	add	r3,r4,r3
  80d3ec:	18c00003 	ldbu	r3,0(r3)
  80d3f0:	1887883a 	add	r3,r3,r2
  80d3f4:	00800804 	movi	r2,32
  80d3f8:	10e5c83a 	sub	r18,r2,r3
  80d3fc:	9000901e 	bne	r18,zero,80d640 <__umoddi3+0x41c>
  80d400:	982cd43a 	srli	r22,r19,16
  80d404:	8ce3c83a 	sub	r17,r17,r19
  80d408:	9d7fffcc 	andi	r21,r19,65535
  80d40c:	b00b883a 	mov	r5,r22
  80d410:	8809883a 	mov	r4,r17
  80d414:	080d8b80 	call	80d8b8 <__umodsi3>
  80d418:	8809883a 	mov	r4,r17
  80d41c:	b00b883a 	mov	r5,r22
  80d420:	1021883a 	mov	r16,r2
  80d424:	080d8540 	call	80d854 <__udivsi3>
  80d428:	8006943a 	slli	r3,r16,16
  80d42c:	a008d43a 	srli	r4,r20,16
  80d430:	1545383a 	mul	r2,r2,r21
  80d434:	20c8b03a 	or	r4,r4,r3
  80d438:	2080042e 	bgeu	r4,r2,80d44c <__umoddi3+0x228>
  80d43c:	24c9883a 	add	r4,r4,r19
  80d440:	24c00236 	bltu	r4,r19,80d44c <__umoddi3+0x228>
  80d444:	2080012e 	bgeu	r4,r2,80d44c <__umoddi3+0x228>
  80d448:	24c9883a 	add	r4,r4,r19
  80d44c:	20a1c83a 	sub	r16,r4,r2
  80d450:	b00b883a 	mov	r5,r22
  80d454:	8009883a 	mov	r4,r16
  80d458:	080d8b80 	call	80d8b8 <__umodsi3>
  80d45c:	1023883a 	mov	r17,r2
  80d460:	b00b883a 	mov	r5,r22
  80d464:	8009883a 	mov	r4,r16
  80d468:	080d8540 	call	80d854 <__udivsi3>
  80d46c:	8822943a 	slli	r17,r17,16
  80d470:	1545383a 	mul	r2,r2,r21
  80d474:	a53fffcc 	andi	r20,r20,65535
  80d478:	a446b03a 	or	r3,r20,r17
  80d47c:	18bfb02e 	bgeu	r3,r2,80d340 <__alt_data_end+0xff80d340>
  80d480:	003fab06 	br	80d330 <__alt_data_end+0xff80d330>
  80d484:	2005883a 	mov	r2,r4
  80d488:	2807883a 	mov	r3,r5
  80d48c:	dfc00b17 	ldw	ra,44(sp)
  80d490:	df000a17 	ldw	fp,40(sp)
  80d494:	ddc00917 	ldw	r23,36(sp)
  80d498:	dd800817 	ldw	r22,32(sp)
  80d49c:	dd400717 	ldw	r21,28(sp)
  80d4a0:	dd000617 	ldw	r20,24(sp)
  80d4a4:	dcc00517 	ldw	r19,20(sp)
  80d4a8:	dc800417 	ldw	r18,16(sp)
  80d4ac:	dc400317 	ldw	r17,12(sp)
  80d4b0:	dc000217 	ldw	r16,8(sp)
  80d4b4:	dec00c04 	addi	sp,sp,48
  80d4b8:	f800283a 	ret
  80d4bc:	04c03fc4 	movi	r19,255
  80d4c0:	99c9803a 	cmpltu	r4,r19,r7
  80d4c4:	200890fa 	slli	r4,r4,3
  80d4c8:	003fa806 	br	80d36c <__alt_data_end+0xff80d36c>
  80d4cc:	00803fc4 	movi	r2,255
  80d4d0:	14c5803a 	cmpltu	r2,r2,r19
  80d4d4:	100490fa 	slli	r2,r2,3
  80d4d8:	003fc006 	br	80d3dc <__alt_data_end+0xff80d3dc>
  80d4dc:	00804034 	movhi	r2,256
  80d4e0:	10bfffc4 	addi	r2,r2,-1
  80d4e4:	11808b36 	bltu	r2,r6,80d714 <__umoddi3+0x4f0>
  80d4e8:	01000404 	movi	r4,16
  80d4ec:	003f6406 	br	80d280 <__alt_data_end+0xff80d280>
  80d4f0:	34c4d83a 	srl	r2,r6,r19
  80d4f4:	3d0e983a 	sll	r7,r7,r20
  80d4f8:	8cf8d83a 	srl	fp,r17,r19
  80d4fc:	8d10983a 	sll	r8,r17,r20
  80d500:	38aab03a 	or	r21,r7,r2
  80d504:	a82cd43a 	srli	r22,r21,16
  80d508:	84e2d83a 	srl	r17,r16,r19
  80d50c:	e009883a 	mov	r4,fp
  80d510:	b00b883a 	mov	r5,r22
  80d514:	8a22b03a 	or	r17,r17,r8
  80d518:	3524983a 	sll	r18,r6,r20
  80d51c:	080d8b80 	call	80d8b8 <__umodsi3>
  80d520:	e009883a 	mov	r4,fp
  80d524:	b00b883a 	mov	r5,r22
  80d528:	102f883a 	mov	r23,r2
  80d52c:	080d8540 	call	80d854 <__udivsi3>
  80d530:	100d883a 	mov	r6,r2
  80d534:	b808943a 	slli	r4,r23,16
  80d538:	aa3fffcc 	andi	r8,r21,65535
  80d53c:	8804d43a 	srli	r2,r17,16
  80d540:	41af383a 	mul	r23,r8,r6
  80d544:	8520983a 	sll	r16,r16,r20
  80d548:	1104b03a 	or	r2,r2,r4
  80d54c:	15c0042e 	bgeu	r2,r23,80d560 <__umoddi3+0x33c>
  80d550:	1545883a 	add	r2,r2,r21
  80d554:	30ffffc4 	addi	r3,r6,-1
  80d558:	1540742e 	bgeu	r2,r21,80d72c <__umoddi3+0x508>
  80d55c:	180d883a 	mov	r6,r3
  80d560:	15efc83a 	sub	r23,r2,r23
  80d564:	b00b883a 	mov	r5,r22
  80d568:	b809883a 	mov	r4,r23
  80d56c:	d9800115 	stw	r6,4(sp)
  80d570:	da000015 	stw	r8,0(sp)
  80d574:	080d8b80 	call	80d8b8 <__umodsi3>
  80d578:	b00b883a 	mov	r5,r22
  80d57c:	b809883a 	mov	r4,r23
  80d580:	1039883a 	mov	fp,r2
  80d584:	080d8540 	call	80d854 <__udivsi3>
  80d588:	da000017 	ldw	r8,0(sp)
  80d58c:	e038943a 	slli	fp,fp,16
  80d590:	100b883a 	mov	r5,r2
  80d594:	4089383a 	mul	r4,r8,r2
  80d598:	8a3fffcc 	andi	r8,r17,65535
  80d59c:	4710b03a 	or	r8,r8,fp
  80d5a0:	d9800117 	ldw	r6,4(sp)
  80d5a4:	4100042e 	bgeu	r8,r4,80d5b8 <__umoddi3+0x394>
  80d5a8:	4551883a 	add	r8,r8,r21
  80d5ac:	10bfffc4 	addi	r2,r2,-1
  80d5b0:	45405a2e 	bgeu	r8,r21,80d71c <__umoddi3+0x4f8>
  80d5b4:	100b883a 	mov	r5,r2
  80d5b8:	300c943a 	slli	r6,r6,16
  80d5bc:	91ffffcc 	andi	r7,r18,65535
  80d5c0:	9004d43a 	srli	r2,r18,16
  80d5c4:	314cb03a 	or	r6,r6,r5
  80d5c8:	317fffcc 	andi	r5,r6,65535
  80d5cc:	300cd43a 	srli	r6,r6,16
  80d5d0:	29d3383a 	mul	r9,r5,r7
  80d5d4:	288b383a 	mul	r5,r5,r2
  80d5d8:	31cf383a 	mul	r7,r6,r7
  80d5dc:	4806d43a 	srli	r3,r9,16
  80d5e0:	4111c83a 	sub	r8,r8,r4
  80d5e4:	29cb883a 	add	r5,r5,r7
  80d5e8:	194b883a 	add	r5,r3,r5
  80d5ec:	3085383a 	mul	r2,r6,r2
  80d5f0:	29c0022e 	bgeu	r5,r7,80d5fc <__umoddi3+0x3d8>
  80d5f4:	00c00074 	movhi	r3,1
  80d5f8:	10c5883a 	add	r2,r2,r3
  80d5fc:	2808d43a 	srli	r4,r5,16
  80d600:	280a943a 	slli	r5,r5,16
  80d604:	4a7fffcc 	andi	r9,r9,65535
  80d608:	2085883a 	add	r2,r4,r2
  80d60c:	2a4b883a 	add	r5,r5,r9
  80d610:	40803636 	bltu	r8,r2,80d6ec <__umoddi3+0x4c8>
  80d614:	40804d26 	beq	r8,r2,80d74c <__umoddi3+0x528>
  80d618:	4089c83a 	sub	r4,r8,r2
  80d61c:	280f883a 	mov	r7,r5
  80d620:	81cfc83a 	sub	r7,r16,r7
  80d624:	81c7803a 	cmpltu	r3,r16,r7
  80d628:	20c7c83a 	sub	r3,r4,r3
  80d62c:	1cc4983a 	sll	r2,r3,r19
  80d630:	3d0ed83a 	srl	r7,r7,r20
  80d634:	1d06d83a 	srl	r3,r3,r20
  80d638:	11c4b03a 	or	r2,r2,r7
  80d63c:	003f9306 	br	80d48c <__alt_data_end+0xff80d48c>
  80d640:	9ca6983a 	sll	r19,r19,r18
  80d644:	88e8d83a 	srl	r20,r17,r3
  80d648:	80c4d83a 	srl	r2,r16,r3
  80d64c:	982cd43a 	srli	r22,r19,16
  80d650:	8ca2983a 	sll	r17,r17,r18
  80d654:	a009883a 	mov	r4,r20
  80d658:	b00b883a 	mov	r5,r22
  80d65c:	1478b03a 	or	fp,r2,r17
  80d660:	080d8b80 	call	80d8b8 <__umodsi3>
  80d664:	a009883a 	mov	r4,r20
  80d668:	b00b883a 	mov	r5,r22
  80d66c:	1023883a 	mov	r17,r2
  80d670:	080d8540 	call	80d854 <__udivsi3>
  80d674:	9d7fffcc 	andi	r21,r19,65535
  80d678:	880a943a 	slli	r5,r17,16
  80d67c:	e008d43a 	srli	r4,fp,16
  80d680:	a885383a 	mul	r2,r21,r2
  80d684:	84a8983a 	sll	r20,r16,r18
  80d688:	2148b03a 	or	r4,r4,r5
  80d68c:	2080042e 	bgeu	r4,r2,80d6a0 <__umoddi3+0x47c>
  80d690:	24c9883a 	add	r4,r4,r19
  80d694:	24c00236 	bltu	r4,r19,80d6a0 <__umoddi3+0x47c>
  80d698:	2080012e 	bgeu	r4,r2,80d6a0 <__umoddi3+0x47c>
  80d69c:	24c9883a 	add	r4,r4,r19
  80d6a0:	20a3c83a 	sub	r17,r4,r2
  80d6a4:	b00b883a 	mov	r5,r22
  80d6a8:	8809883a 	mov	r4,r17
  80d6ac:	080d8b80 	call	80d8b8 <__umodsi3>
  80d6b0:	102f883a 	mov	r23,r2
  80d6b4:	8809883a 	mov	r4,r17
  80d6b8:	b00b883a 	mov	r5,r22
  80d6bc:	080d8540 	call	80d854 <__udivsi3>
  80d6c0:	b82e943a 	slli	r23,r23,16
  80d6c4:	a885383a 	mul	r2,r21,r2
  80d6c8:	e13fffcc 	andi	r4,fp,65535
  80d6cc:	25c8b03a 	or	r4,r4,r23
  80d6d0:	2080042e 	bgeu	r4,r2,80d6e4 <__umoddi3+0x4c0>
  80d6d4:	24c9883a 	add	r4,r4,r19
  80d6d8:	24c00236 	bltu	r4,r19,80d6e4 <__umoddi3+0x4c0>
  80d6dc:	2080012e 	bgeu	r4,r2,80d6e4 <__umoddi3+0x4c0>
  80d6e0:	24c9883a 	add	r4,r4,r19
  80d6e4:	20a3c83a 	sub	r17,r4,r2
  80d6e8:	003f4806 	br	80d40c <__alt_data_end+0xff80d40c>
  80d6ec:	2c8fc83a 	sub	r7,r5,r18
  80d6f0:	1545c83a 	sub	r2,r2,r21
  80d6f4:	29cb803a 	cmpltu	r5,r5,r7
  80d6f8:	1145c83a 	sub	r2,r2,r5
  80d6fc:	4089c83a 	sub	r4,r8,r2
  80d700:	003fc706 	br	80d620 <__alt_data_end+0xff80d620>
  80d704:	01000604 	movi	r4,24
  80d708:	003f1806 	br	80d36c <__alt_data_end+0xff80d36c>
  80d70c:	00800604 	movi	r2,24
  80d710:	003f3206 	br	80d3dc <__alt_data_end+0xff80d3dc>
  80d714:	01000604 	movi	r4,24
  80d718:	003ed906 	br	80d280 <__alt_data_end+0xff80d280>
  80d71c:	413fa52e 	bgeu	r8,r4,80d5b4 <__alt_data_end+0xff80d5b4>
  80d720:	297fff84 	addi	r5,r5,-2
  80d724:	4551883a 	add	r8,r8,r21
  80d728:	003fa306 	br	80d5b8 <__alt_data_end+0xff80d5b8>
  80d72c:	15ff8b2e 	bgeu	r2,r23,80d55c <__alt_data_end+0xff80d55c>
  80d730:	31bfff84 	addi	r6,r6,-2
  80d734:	1545883a 	add	r2,r2,r21
  80d738:	003f8906 	br	80d560 <__alt_data_end+0xff80d560>
  80d73c:	24c9883a 	add	r4,r4,r19
  80d740:	003eee06 	br	80d2fc <__alt_data_end+0xff80d2fc>
  80d744:	8005883a 	mov	r2,r16
  80d748:	003f1706 	br	80d3a8 <__alt_data_end+0xff80d3a8>
  80d74c:	817fe736 	bltu	r16,r5,80d6ec <__alt_data_end+0xff80d6ec>
  80d750:	280f883a 	mov	r7,r5
  80d754:	0009883a 	mov	r4,zero
  80d758:	003fb106 	br	80d620 <__alt_data_end+0xff80d620>

0080d75c <__divsi3>:
  80d75c:	20001b16 	blt	r4,zero,80d7cc <__divsi3+0x70>
  80d760:	000f883a 	mov	r7,zero
  80d764:	28001616 	blt	r5,zero,80d7c0 <__divsi3+0x64>
  80d768:	200d883a 	mov	r6,r4
  80d76c:	29001a2e 	bgeu	r5,r4,80d7d8 <__divsi3+0x7c>
  80d770:	00800804 	movi	r2,32
  80d774:	00c00044 	movi	r3,1
  80d778:	00000106 	br	80d780 <__divsi3+0x24>
  80d77c:	10000d26 	beq	r2,zero,80d7b4 <__divsi3+0x58>
  80d780:	294b883a 	add	r5,r5,r5
  80d784:	10bfffc4 	addi	r2,r2,-1
  80d788:	18c7883a 	add	r3,r3,r3
  80d78c:	293ffb36 	bltu	r5,r4,80d77c <__alt_data_end+0xff80d77c>
  80d790:	0005883a 	mov	r2,zero
  80d794:	18000726 	beq	r3,zero,80d7b4 <__divsi3+0x58>
  80d798:	0005883a 	mov	r2,zero
  80d79c:	31400236 	bltu	r6,r5,80d7a8 <__divsi3+0x4c>
  80d7a0:	314dc83a 	sub	r6,r6,r5
  80d7a4:	10c4b03a 	or	r2,r2,r3
  80d7a8:	1806d07a 	srli	r3,r3,1
  80d7ac:	280ad07a 	srli	r5,r5,1
  80d7b0:	183ffa1e 	bne	r3,zero,80d79c <__alt_data_end+0xff80d79c>
  80d7b4:	38000126 	beq	r7,zero,80d7bc <__divsi3+0x60>
  80d7b8:	0085c83a 	sub	r2,zero,r2
  80d7bc:	f800283a 	ret
  80d7c0:	014bc83a 	sub	r5,zero,r5
  80d7c4:	39c0005c 	xori	r7,r7,1
  80d7c8:	003fe706 	br	80d768 <__alt_data_end+0xff80d768>
  80d7cc:	0109c83a 	sub	r4,zero,r4
  80d7d0:	01c00044 	movi	r7,1
  80d7d4:	003fe306 	br	80d764 <__alt_data_end+0xff80d764>
  80d7d8:	00c00044 	movi	r3,1
  80d7dc:	003fee06 	br	80d798 <__alt_data_end+0xff80d798>

0080d7e0 <__modsi3>:
  80d7e0:	20001716 	blt	r4,zero,80d840 <__modsi3+0x60>
  80d7e4:	000f883a 	mov	r7,zero
  80d7e8:	2005883a 	mov	r2,r4
  80d7ec:	28001216 	blt	r5,zero,80d838 <__modsi3+0x58>
  80d7f0:	2900162e 	bgeu	r5,r4,80d84c <__modsi3+0x6c>
  80d7f4:	01800804 	movi	r6,32
  80d7f8:	00c00044 	movi	r3,1
  80d7fc:	00000106 	br	80d804 <__modsi3+0x24>
  80d800:	30000a26 	beq	r6,zero,80d82c <__modsi3+0x4c>
  80d804:	294b883a 	add	r5,r5,r5
  80d808:	31bfffc4 	addi	r6,r6,-1
  80d80c:	18c7883a 	add	r3,r3,r3
  80d810:	293ffb36 	bltu	r5,r4,80d800 <__alt_data_end+0xff80d800>
  80d814:	18000526 	beq	r3,zero,80d82c <__modsi3+0x4c>
  80d818:	1806d07a 	srli	r3,r3,1
  80d81c:	11400136 	bltu	r2,r5,80d824 <__modsi3+0x44>
  80d820:	1145c83a 	sub	r2,r2,r5
  80d824:	280ad07a 	srli	r5,r5,1
  80d828:	183ffb1e 	bne	r3,zero,80d818 <__alt_data_end+0xff80d818>
  80d82c:	38000126 	beq	r7,zero,80d834 <__modsi3+0x54>
  80d830:	0085c83a 	sub	r2,zero,r2
  80d834:	f800283a 	ret
  80d838:	014bc83a 	sub	r5,zero,r5
  80d83c:	003fec06 	br	80d7f0 <__alt_data_end+0xff80d7f0>
  80d840:	0109c83a 	sub	r4,zero,r4
  80d844:	01c00044 	movi	r7,1
  80d848:	003fe706 	br	80d7e8 <__alt_data_end+0xff80d7e8>
  80d84c:	00c00044 	movi	r3,1
  80d850:	003ff106 	br	80d818 <__alt_data_end+0xff80d818>

0080d854 <__udivsi3>:
  80d854:	200d883a 	mov	r6,r4
  80d858:	2900152e 	bgeu	r5,r4,80d8b0 <__udivsi3+0x5c>
  80d85c:	28001416 	blt	r5,zero,80d8b0 <__udivsi3+0x5c>
  80d860:	00800804 	movi	r2,32
  80d864:	00c00044 	movi	r3,1
  80d868:	00000206 	br	80d874 <__udivsi3+0x20>
  80d86c:	10000e26 	beq	r2,zero,80d8a8 <__udivsi3+0x54>
  80d870:	28000516 	blt	r5,zero,80d888 <__udivsi3+0x34>
  80d874:	294b883a 	add	r5,r5,r5
  80d878:	10bfffc4 	addi	r2,r2,-1
  80d87c:	18c7883a 	add	r3,r3,r3
  80d880:	293ffa36 	bltu	r5,r4,80d86c <__alt_data_end+0xff80d86c>
  80d884:	18000826 	beq	r3,zero,80d8a8 <__udivsi3+0x54>
  80d888:	0005883a 	mov	r2,zero
  80d88c:	31400236 	bltu	r6,r5,80d898 <__udivsi3+0x44>
  80d890:	314dc83a 	sub	r6,r6,r5
  80d894:	10c4b03a 	or	r2,r2,r3
  80d898:	1806d07a 	srli	r3,r3,1
  80d89c:	280ad07a 	srli	r5,r5,1
  80d8a0:	183ffa1e 	bne	r3,zero,80d88c <__alt_data_end+0xff80d88c>
  80d8a4:	f800283a 	ret
  80d8a8:	0005883a 	mov	r2,zero
  80d8ac:	f800283a 	ret
  80d8b0:	00c00044 	movi	r3,1
  80d8b4:	003ff406 	br	80d888 <__alt_data_end+0xff80d888>

0080d8b8 <__umodsi3>:
  80d8b8:	2005883a 	mov	r2,r4
  80d8bc:	2900122e 	bgeu	r5,r4,80d908 <__umodsi3+0x50>
  80d8c0:	28001116 	blt	r5,zero,80d908 <__umodsi3+0x50>
  80d8c4:	01800804 	movi	r6,32
  80d8c8:	00c00044 	movi	r3,1
  80d8cc:	00000206 	br	80d8d8 <__umodsi3+0x20>
  80d8d0:	30000c26 	beq	r6,zero,80d904 <__umodsi3+0x4c>
  80d8d4:	28000516 	blt	r5,zero,80d8ec <__umodsi3+0x34>
  80d8d8:	294b883a 	add	r5,r5,r5
  80d8dc:	31bfffc4 	addi	r6,r6,-1
  80d8e0:	18c7883a 	add	r3,r3,r3
  80d8e4:	293ffa36 	bltu	r5,r4,80d8d0 <__alt_data_end+0xff80d8d0>
  80d8e8:	18000626 	beq	r3,zero,80d904 <__umodsi3+0x4c>
  80d8ec:	1806d07a 	srli	r3,r3,1
  80d8f0:	11400136 	bltu	r2,r5,80d8f8 <__umodsi3+0x40>
  80d8f4:	1145c83a 	sub	r2,r2,r5
  80d8f8:	280ad07a 	srli	r5,r5,1
  80d8fc:	183ffb1e 	bne	r3,zero,80d8ec <__alt_data_end+0xff80d8ec>
  80d900:	f800283a 	ret
  80d904:	f800283a 	ret
  80d908:	00c00044 	movi	r3,1
  80d90c:	003ff706 	br	80d8ec <__alt_data_end+0xff80d8ec>

0080d910 <__divdf3>:
  80d910:	defff204 	addi	sp,sp,-56
  80d914:	dd400915 	stw	r21,36(sp)
  80d918:	282ad53a 	srli	r21,r5,20
  80d91c:	dd000815 	stw	r20,32(sp)
  80d920:	2828d7fa 	srli	r20,r5,31
  80d924:	dc000415 	stw	r16,16(sp)
  80d928:	04000434 	movhi	r16,16
  80d92c:	df000c15 	stw	fp,48(sp)
  80d930:	843fffc4 	addi	r16,r16,-1
  80d934:	dfc00d15 	stw	ra,52(sp)
  80d938:	ddc00b15 	stw	r23,44(sp)
  80d93c:	dd800a15 	stw	r22,40(sp)
  80d940:	dcc00715 	stw	r19,28(sp)
  80d944:	dc800615 	stw	r18,24(sp)
  80d948:	dc400515 	stw	r17,20(sp)
  80d94c:	ad41ffcc 	andi	r21,r21,2047
  80d950:	2c20703a 	and	r16,r5,r16
  80d954:	a7003fcc 	andi	fp,r20,255
  80d958:	a8006126 	beq	r21,zero,80dae0 <__divdf3+0x1d0>
  80d95c:	0081ffc4 	movi	r2,2047
  80d960:	2025883a 	mov	r18,r4
  80d964:	a8803726 	beq	r21,r2,80da44 <__divdf3+0x134>
  80d968:	80800434 	orhi	r2,r16,16
  80d96c:	100490fa 	slli	r2,r2,3
  80d970:	2020d77a 	srli	r16,r4,29
  80d974:	202490fa 	slli	r18,r4,3
  80d978:	ad7f0044 	addi	r21,r21,-1023
  80d97c:	80a0b03a 	or	r16,r16,r2
  80d980:	0027883a 	mov	r19,zero
  80d984:	0013883a 	mov	r9,zero
  80d988:	3804d53a 	srli	r2,r7,20
  80d98c:	382cd7fa 	srli	r22,r7,31
  80d990:	04400434 	movhi	r17,16
  80d994:	8c7fffc4 	addi	r17,r17,-1
  80d998:	1081ffcc 	andi	r2,r2,2047
  80d99c:	3011883a 	mov	r8,r6
  80d9a0:	3c62703a 	and	r17,r7,r17
  80d9a4:	b5c03fcc 	andi	r23,r22,255
  80d9a8:	10006c26 	beq	r2,zero,80db5c <__divdf3+0x24c>
  80d9ac:	00c1ffc4 	movi	r3,2047
  80d9b0:	10c06426 	beq	r2,r3,80db44 <__divdf3+0x234>
  80d9b4:	88c00434 	orhi	r3,r17,16
  80d9b8:	180690fa 	slli	r3,r3,3
  80d9bc:	3022d77a 	srli	r17,r6,29
  80d9c0:	301090fa 	slli	r8,r6,3
  80d9c4:	10bf0044 	addi	r2,r2,-1023
  80d9c8:	88e2b03a 	or	r17,r17,r3
  80d9cc:	000f883a 	mov	r7,zero
  80d9d0:	a58cf03a 	xor	r6,r20,r22
  80d9d4:	3cc8b03a 	or	r4,r7,r19
  80d9d8:	a8abc83a 	sub	r21,r21,r2
  80d9dc:	008003c4 	movi	r2,15
  80d9e0:	3007883a 	mov	r3,r6
  80d9e4:	34c03fcc 	andi	r19,r6,255
  80d9e8:	11009036 	bltu	r2,r4,80dc2c <__divdf3+0x31c>
  80d9ec:	200890ba 	slli	r4,r4,2
  80d9f0:	00802074 	movhi	r2,129
  80d9f4:	10b68104 	addi	r2,r2,-9724
  80d9f8:	2089883a 	add	r4,r4,r2
  80d9fc:	20800017 	ldw	r2,0(r4)
  80da00:	1000683a 	jmp	r2
  80da04:	0080dc2c 	andhi	r2,zero,880
  80da08:	0080da7c 	xorhi	r2,zero,873
  80da0c:	0080dc1c 	xori	r2,zero,880
  80da10:	0080da70 	cmpltui	r2,zero,873
  80da14:	0080dc1c 	xori	r2,zero,880
  80da18:	0080dbf0 	cmpltui	r2,zero,879
  80da1c:	0080dc1c 	xori	r2,zero,880
  80da20:	0080da70 	cmpltui	r2,zero,873
  80da24:	0080da7c 	xorhi	r2,zero,873
  80da28:	0080da7c 	xorhi	r2,zero,873
  80da2c:	0080dbf0 	cmpltui	r2,zero,879
  80da30:	0080da70 	cmpltui	r2,zero,873
  80da34:	0080da60 	cmpeqi	r2,zero,873
  80da38:	0080da60 	cmpeqi	r2,zero,873
  80da3c:	0080da60 	cmpeqi	r2,zero,873
  80da40:	0080df10 	cmplti	r2,zero,892
  80da44:	2404b03a 	or	r2,r4,r16
  80da48:	1000661e 	bne	r2,zero,80dbe4 <__divdf3+0x2d4>
  80da4c:	04c00204 	movi	r19,8
  80da50:	0021883a 	mov	r16,zero
  80da54:	0025883a 	mov	r18,zero
  80da58:	02400084 	movi	r9,2
  80da5c:	003fca06 	br	80d988 <__alt_data_end+0xff80d988>
  80da60:	8023883a 	mov	r17,r16
  80da64:	9011883a 	mov	r8,r18
  80da68:	e02f883a 	mov	r23,fp
  80da6c:	480f883a 	mov	r7,r9
  80da70:	00800084 	movi	r2,2
  80da74:	3881311e 	bne	r7,r2,80df3c <__divdf3+0x62c>
  80da78:	b827883a 	mov	r19,r23
  80da7c:	98c0004c 	andi	r3,r19,1
  80da80:	0081ffc4 	movi	r2,2047
  80da84:	000b883a 	mov	r5,zero
  80da88:	0025883a 	mov	r18,zero
  80da8c:	1004953a 	slli	r2,r2,20
  80da90:	18c03fcc 	andi	r3,r3,255
  80da94:	04400434 	movhi	r17,16
  80da98:	8c7fffc4 	addi	r17,r17,-1
  80da9c:	180697fa 	slli	r3,r3,31
  80daa0:	2c4a703a 	and	r5,r5,r17
  80daa4:	288ab03a 	or	r5,r5,r2
  80daa8:	28c6b03a 	or	r3,r5,r3
  80daac:	9005883a 	mov	r2,r18
  80dab0:	dfc00d17 	ldw	ra,52(sp)
  80dab4:	df000c17 	ldw	fp,48(sp)
  80dab8:	ddc00b17 	ldw	r23,44(sp)
  80dabc:	dd800a17 	ldw	r22,40(sp)
  80dac0:	dd400917 	ldw	r21,36(sp)
  80dac4:	dd000817 	ldw	r20,32(sp)
  80dac8:	dcc00717 	ldw	r19,28(sp)
  80dacc:	dc800617 	ldw	r18,24(sp)
  80dad0:	dc400517 	ldw	r17,20(sp)
  80dad4:	dc000417 	ldw	r16,16(sp)
  80dad8:	dec00e04 	addi	sp,sp,56
  80dadc:	f800283a 	ret
  80dae0:	2404b03a 	or	r2,r4,r16
  80dae4:	2027883a 	mov	r19,r4
  80dae8:	10003926 	beq	r2,zero,80dbd0 <__divdf3+0x2c0>
  80daec:	80012e26 	beq	r16,zero,80dfa8 <__divdf3+0x698>
  80daf0:	8009883a 	mov	r4,r16
  80daf4:	d9800315 	stw	r6,12(sp)
  80daf8:	d9c00215 	stw	r7,8(sp)
  80dafc:	08036c80 	call	8036c8 <__clzsi2>
  80db00:	d9800317 	ldw	r6,12(sp)
  80db04:	d9c00217 	ldw	r7,8(sp)
  80db08:	113ffd44 	addi	r4,r2,-11
  80db0c:	00c00704 	movi	r3,28
  80db10:	19012116 	blt	r3,r4,80df98 <__divdf3+0x688>
  80db14:	00c00744 	movi	r3,29
  80db18:	147ffe04 	addi	r17,r2,-8
  80db1c:	1907c83a 	sub	r3,r3,r4
  80db20:	8460983a 	sll	r16,r16,r17
  80db24:	98c6d83a 	srl	r3,r19,r3
  80db28:	9c64983a 	sll	r18,r19,r17
  80db2c:	1c20b03a 	or	r16,r3,r16
  80db30:	1080fcc4 	addi	r2,r2,1011
  80db34:	00abc83a 	sub	r21,zero,r2
  80db38:	0027883a 	mov	r19,zero
  80db3c:	0013883a 	mov	r9,zero
  80db40:	003f9106 	br	80d988 <__alt_data_end+0xff80d988>
  80db44:	3446b03a 	or	r3,r6,r17
  80db48:	18001f1e 	bne	r3,zero,80dbc8 <__divdf3+0x2b8>
  80db4c:	0023883a 	mov	r17,zero
  80db50:	0011883a 	mov	r8,zero
  80db54:	01c00084 	movi	r7,2
  80db58:	003f9d06 	br	80d9d0 <__alt_data_end+0xff80d9d0>
  80db5c:	3446b03a 	or	r3,r6,r17
  80db60:	18001526 	beq	r3,zero,80dbb8 <__divdf3+0x2a8>
  80db64:	88011b26 	beq	r17,zero,80dfd4 <__divdf3+0x6c4>
  80db68:	8809883a 	mov	r4,r17
  80db6c:	d9800315 	stw	r6,12(sp)
  80db70:	da400115 	stw	r9,4(sp)
  80db74:	08036c80 	call	8036c8 <__clzsi2>
  80db78:	d9800317 	ldw	r6,12(sp)
  80db7c:	da400117 	ldw	r9,4(sp)
  80db80:	113ffd44 	addi	r4,r2,-11
  80db84:	00c00704 	movi	r3,28
  80db88:	19010e16 	blt	r3,r4,80dfc4 <__divdf3+0x6b4>
  80db8c:	00c00744 	movi	r3,29
  80db90:	123ffe04 	addi	r8,r2,-8
  80db94:	1907c83a 	sub	r3,r3,r4
  80db98:	8a22983a 	sll	r17,r17,r8
  80db9c:	30c6d83a 	srl	r3,r6,r3
  80dba0:	3210983a 	sll	r8,r6,r8
  80dba4:	1c62b03a 	or	r17,r3,r17
  80dba8:	1080fcc4 	addi	r2,r2,1011
  80dbac:	0085c83a 	sub	r2,zero,r2
  80dbb0:	000f883a 	mov	r7,zero
  80dbb4:	003f8606 	br	80d9d0 <__alt_data_end+0xff80d9d0>
  80dbb8:	0023883a 	mov	r17,zero
  80dbbc:	0011883a 	mov	r8,zero
  80dbc0:	01c00044 	movi	r7,1
  80dbc4:	003f8206 	br	80d9d0 <__alt_data_end+0xff80d9d0>
  80dbc8:	01c000c4 	movi	r7,3
  80dbcc:	003f8006 	br	80d9d0 <__alt_data_end+0xff80d9d0>
  80dbd0:	04c00104 	movi	r19,4
  80dbd4:	0021883a 	mov	r16,zero
  80dbd8:	0025883a 	mov	r18,zero
  80dbdc:	02400044 	movi	r9,1
  80dbe0:	003f6906 	br	80d988 <__alt_data_end+0xff80d988>
  80dbe4:	04c00304 	movi	r19,12
  80dbe8:	024000c4 	movi	r9,3
  80dbec:	003f6606 	br	80d988 <__alt_data_end+0xff80d988>
  80dbf0:	01400434 	movhi	r5,16
  80dbf4:	0007883a 	mov	r3,zero
  80dbf8:	297fffc4 	addi	r5,r5,-1
  80dbfc:	04bfffc4 	movi	r18,-1
  80dc00:	0081ffc4 	movi	r2,2047
  80dc04:	003fa106 	br	80da8c <__alt_data_end+0xff80da8c>
  80dc08:	00c00044 	movi	r3,1
  80dc0c:	1887c83a 	sub	r3,r3,r2
  80dc10:	01000e04 	movi	r4,56
  80dc14:	20c1210e 	bge	r4,r3,80e09c <__divdf3+0x78c>
  80dc18:	98c0004c 	andi	r3,r19,1
  80dc1c:	0005883a 	mov	r2,zero
  80dc20:	000b883a 	mov	r5,zero
  80dc24:	0025883a 	mov	r18,zero
  80dc28:	003f9806 	br	80da8c <__alt_data_end+0xff80da8c>
  80dc2c:	8c00fd36 	bltu	r17,r16,80e024 <__divdf3+0x714>
  80dc30:	8440fb26 	beq	r16,r17,80e020 <__divdf3+0x710>
  80dc34:	8007883a 	mov	r3,r16
  80dc38:	ad7fffc4 	addi	r21,r21,-1
  80dc3c:	0021883a 	mov	r16,zero
  80dc40:	4004d63a 	srli	r2,r8,24
  80dc44:	8822923a 	slli	r17,r17,8
  80dc48:	1809883a 	mov	r4,r3
  80dc4c:	402c923a 	slli	r22,r8,8
  80dc50:	88b8b03a 	or	fp,r17,r2
  80dc54:	e028d43a 	srli	r20,fp,16
  80dc58:	d8c00015 	stw	r3,0(sp)
  80dc5c:	e5ffffcc 	andi	r23,fp,65535
  80dc60:	a00b883a 	mov	r5,r20
  80dc64:	080d8540 	call	80d854 <__udivsi3>
  80dc68:	d8c00017 	ldw	r3,0(sp)
  80dc6c:	a00b883a 	mov	r5,r20
  80dc70:	d8800315 	stw	r2,12(sp)
  80dc74:	1809883a 	mov	r4,r3
  80dc78:	080d8b80 	call	80d8b8 <__umodsi3>
  80dc7c:	d9800317 	ldw	r6,12(sp)
  80dc80:	1006943a 	slli	r3,r2,16
  80dc84:	9004d43a 	srli	r2,r18,16
  80dc88:	b9a3383a 	mul	r17,r23,r6
  80dc8c:	10c4b03a 	or	r2,r2,r3
  80dc90:	1440062e 	bgeu	r2,r17,80dcac <__divdf3+0x39c>
  80dc94:	1705883a 	add	r2,r2,fp
  80dc98:	30ffffc4 	addi	r3,r6,-1
  80dc9c:	1700ee36 	bltu	r2,fp,80e058 <__divdf3+0x748>
  80dca0:	1440ed2e 	bgeu	r2,r17,80e058 <__divdf3+0x748>
  80dca4:	31bfff84 	addi	r6,r6,-2
  80dca8:	1705883a 	add	r2,r2,fp
  80dcac:	1463c83a 	sub	r17,r2,r17
  80dcb0:	a00b883a 	mov	r5,r20
  80dcb4:	8809883a 	mov	r4,r17
  80dcb8:	d9800315 	stw	r6,12(sp)
  80dcbc:	080d8540 	call	80d854 <__udivsi3>
  80dcc0:	a00b883a 	mov	r5,r20
  80dcc4:	8809883a 	mov	r4,r17
  80dcc8:	d8800215 	stw	r2,8(sp)
  80dccc:	080d8b80 	call	80d8b8 <__umodsi3>
  80dcd0:	d9c00217 	ldw	r7,8(sp)
  80dcd4:	1004943a 	slli	r2,r2,16
  80dcd8:	94bfffcc 	andi	r18,r18,65535
  80dcdc:	b9d1383a 	mul	r8,r23,r7
  80dce0:	90a4b03a 	or	r18,r18,r2
  80dce4:	d9800317 	ldw	r6,12(sp)
  80dce8:	9200062e 	bgeu	r18,r8,80dd04 <__divdf3+0x3f4>
  80dcec:	9725883a 	add	r18,r18,fp
  80dcf0:	38bfffc4 	addi	r2,r7,-1
  80dcf4:	9700d636 	bltu	r18,fp,80e050 <__divdf3+0x740>
  80dcf8:	9200d52e 	bgeu	r18,r8,80e050 <__divdf3+0x740>
  80dcfc:	39ffff84 	addi	r7,r7,-2
  80dd00:	9725883a 	add	r18,r18,fp
  80dd04:	3004943a 	slli	r2,r6,16
  80dd08:	b012d43a 	srli	r9,r22,16
  80dd0c:	b1bfffcc 	andi	r6,r22,65535
  80dd10:	11e2b03a 	or	r17,r2,r7
  80dd14:	8806d43a 	srli	r3,r17,16
  80dd18:	893fffcc 	andi	r4,r17,65535
  80dd1c:	218b383a 	mul	r5,r4,r6
  80dd20:	30c5383a 	mul	r2,r6,r3
  80dd24:	2249383a 	mul	r4,r4,r9
  80dd28:	280ed43a 	srli	r7,r5,16
  80dd2c:	9225c83a 	sub	r18,r18,r8
  80dd30:	2089883a 	add	r4,r4,r2
  80dd34:	3909883a 	add	r4,r7,r4
  80dd38:	1a47383a 	mul	r3,r3,r9
  80dd3c:	2080022e 	bgeu	r4,r2,80dd48 <__divdf3+0x438>
  80dd40:	00800074 	movhi	r2,1
  80dd44:	1887883a 	add	r3,r3,r2
  80dd48:	2004d43a 	srli	r2,r4,16
  80dd4c:	2008943a 	slli	r4,r4,16
  80dd50:	297fffcc 	andi	r5,r5,65535
  80dd54:	10c7883a 	add	r3,r2,r3
  80dd58:	2149883a 	add	r4,r4,r5
  80dd5c:	90c0a536 	bltu	r18,r3,80dff4 <__divdf3+0x6e4>
  80dd60:	90c0bf26 	beq	r18,r3,80e060 <__divdf3+0x750>
  80dd64:	90c7c83a 	sub	r3,r18,r3
  80dd68:	810fc83a 	sub	r7,r16,r4
  80dd6c:	81e5803a 	cmpltu	r18,r16,r7
  80dd70:	1ca5c83a 	sub	r18,r3,r18
  80dd74:	e480c126 	beq	fp,r18,80e07c <__divdf3+0x76c>
  80dd78:	a00b883a 	mov	r5,r20
  80dd7c:	9009883a 	mov	r4,r18
  80dd80:	d9800315 	stw	r6,12(sp)
  80dd84:	d9c00215 	stw	r7,8(sp)
  80dd88:	da400115 	stw	r9,4(sp)
  80dd8c:	080d8540 	call	80d854 <__udivsi3>
  80dd90:	a00b883a 	mov	r5,r20
  80dd94:	9009883a 	mov	r4,r18
  80dd98:	d8800015 	stw	r2,0(sp)
  80dd9c:	080d8b80 	call	80d8b8 <__umodsi3>
  80dda0:	d9c00217 	ldw	r7,8(sp)
  80dda4:	da000017 	ldw	r8,0(sp)
  80dda8:	1006943a 	slli	r3,r2,16
  80ddac:	3804d43a 	srli	r2,r7,16
  80ddb0:	ba21383a 	mul	r16,r23,r8
  80ddb4:	d9800317 	ldw	r6,12(sp)
  80ddb8:	10c4b03a 	or	r2,r2,r3
  80ddbc:	da400117 	ldw	r9,4(sp)
  80ddc0:	1400062e 	bgeu	r2,r16,80dddc <__divdf3+0x4cc>
  80ddc4:	1705883a 	add	r2,r2,fp
  80ddc8:	40ffffc4 	addi	r3,r8,-1
  80ddcc:	1700ad36 	bltu	r2,fp,80e084 <__divdf3+0x774>
  80ddd0:	1400ac2e 	bgeu	r2,r16,80e084 <__divdf3+0x774>
  80ddd4:	423fff84 	addi	r8,r8,-2
  80ddd8:	1705883a 	add	r2,r2,fp
  80dddc:	1421c83a 	sub	r16,r2,r16
  80dde0:	a00b883a 	mov	r5,r20
  80dde4:	8009883a 	mov	r4,r16
  80dde8:	d9800315 	stw	r6,12(sp)
  80ddec:	d9c00215 	stw	r7,8(sp)
  80ddf0:	da000015 	stw	r8,0(sp)
  80ddf4:	da400115 	stw	r9,4(sp)
  80ddf8:	080d8540 	call	80d854 <__udivsi3>
  80ddfc:	8009883a 	mov	r4,r16
  80de00:	a00b883a 	mov	r5,r20
  80de04:	1025883a 	mov	r18,r2
  80de08:	080d8b80 	call	80d8b8 <__umodsi3>
  80de0c:	d9c00217 	ldw	r7,8(sp)
  80de10:	1004943a 	slli	r2,r2,16
  80de14:	bcaf383a 	mul	r23,r23,r18
  80de18:	393fffcc 	andi	r4,r7,65535
  80de1c:	2088b03a 	or	r4,r4,r2
  80de20:	d9800317 	ldw	r6,12(sp)
  80de24:	da000017 	ldw	r8,0(sp)
  80de28:	da400117 	ldw	r9,4(sp)
  80de2c:	25c0062e 	bgeu	r4,r23,80de48 <__divdf3+0x538>
  80de30:	2709883a 	add	r4,r4,fp
  80de34:	90bfffc4 	addi	r2,r18,-1
  80de38:	27009436 	bltu	r4,fp,80e08c <__divdf3+0x77c>
  80de3c:	25c0932e 	bgeu	r4,r23,80e08c <__divdf3+0x77c>
  80de40:	94bfff84 	addi	r18,r18,-2
  80de44:	2709883a 	add	r4,r4,fp
  80de48:	4004943a 	slli	r2,r8,16
  80de4c:	25efc83a 	sub	r23,r4,r23
  80de50:	1490b03a 	or	r8,r2,r18
  80de54:	4008d43a 	srli	r4,r8,16
  80de58:	40ffffcc 	andi	r3,r8,65535
  80de5c:	30c5383a 	mul	r2,r6,r3
  80de60:	1a47383a 	mul	r3,r3,r9
  80de64:	310d383a 	mul	r6,r6,r4
  80de68:	100ad43a 	srli	r5,r2,16
  80de6c:	4913383a 	mul	r9,r9,r4
  80de70:	1987883a 	add	r3,r3,r6
  80de74:	28c7883a 	add	r3,r5,r3
  80de78:	1980022e 	bgeu	r3,r6,80de84 <__divdf3+0x574>
  80de7c:	01000074 	movhi	r4,1
  80de80:	4913883a 	add	r9,r9,r4
  80de84:	1808d43a 	srli	r4,r3,16
  80de88:	1806943a 	slli	r3,r3,16
  80de8c:	10bfffcc 	andi	r2,r2,65535
  80de90:	2253883a 	add	r9,r4,r9
  80de94:	1887883a 	add	r3,r3,r2
  80de98:	ba403836 	bltu	r23,r9,80df7c <__divdf3+0x66c>
  80de9c:	ba403626 	beq	r23,r9,80df78 <__divdf3+0x668>
  80dea0:	42000054 	ori	r8,r8,1
  80dea4:	a880ffc4 	addi	r2,r21,1023
  80dea8:	00bf570e 	bge	zero,r2,80dc08 <__alt_data_end+0xff80dc08>
  80deac:	40c001cc 	andi	r3,r8,7
  80deb0:	18000726 	beq	r3,zero,80ded0 <__divdf3+0x5c0>
  80deb4:	40c003cc 	andi	r3,r8,15
  80deb8:	01000104 	movi	r4,4
  80debc:	19000426 	beq	r3,r4,80ded0 <__divdf3+0x5c0>
  80dec0:	4107883a 	add	r3,r8,r4
  80dec4:	1a11803a 	cmpltu	r8,r3,r8
  80dec8:	8a23883a 	add	r17,r17,r8
  80decc:	1811883a 	mov	r8,r3
  80ded0:	88c0402c 	andhi	r3,r17,256
  80ded4:	18000426 	beq	r3,zero,80dee8 <__divdf3+0x5d8>
  80ded8:	00ffc034 	movhi	r3,65280
  80dedc:	18ffffc4 	addi	r3,r3,-1
  80dee0:	a8810004 	addi	r2,r21,1024
  80dee4:	88e2703a 	and	r17,r17,r3
  80dee8:	00c1ff84 	movi	r3,2046
  80deec:	18bee316 	blt	r3,r2,80da7c <__alt_data_end+0xff80da7c>
  80def0:	8824977a 	slli	r18,r17,29
  80def4:	4010d0fa 	srli	r8,r8,3
  80def8:	8822927a 	slli	r17,r17,9
  80defc:	1081ffcc 	andi	r2,r2,2047
  80df00:	9224b03a 	or	r18,r18,r8
  80df04:	880ad33a 	srli	r5,r17,12
  80df08:	98c0004c 	andi	r3,r19,1
  80df0c:	003edf06 	br	80da8c <__alt_data_end+0xff80da8c>
  80df10:	8080022c 	andhi	r2,r16,8
  80df14:	10001226 	beq	r2,zero,80df60 <__divdf3+0x650>
  80df18:	8880022c 	andhi	r2,r17,8
  80df1c:	1000101e 	bne	r2,zero,80df60 <__divdf3+0x650>
  80df20:	00800434 	movhi	r2,16
  80df24:	89400234 	orhi	r5,r17,8
  80df28:	10bfffc4 	addi	r2,r2,-1
  80df2c:	b007883a 	mov	r3,r22
  80df30:	288a703a 	and	r5,r5,r2
  80df34:	4025883a 	mov	r18,r8
  80df38:	003f3106 	br	80dc00 <__alt_data_end+0xff80dc00>
  80df3c:	008000c4 	movi	r2,3
  80df40:	3880a626 	beq	r7,r2,80e1dc <__divdf3+0x8cc>
  80df44:	00800044 	movi	r2,1
  80df48:	3880521e 	bne	r7,r2,80e094 <__divdf3+0x784>
  80df4c:	b807883a 	mov	r3,r23
  80df50:	0005883a 	mov	r2,zero
  80df54:	000b883a 	mov	r5,zero
  80df58:	0025883a 	mov	r18,zero
  80df5c:	003ecb06 	br	80da8c <__alt_data_end+0xff80da8c>
  80df60:	00800434 	movhi	r2,16
  80df64:	81400234 	orhi	r5,r16,8
  80df68:	10bfffc4 	addi	r2,r2,-1
  80df6c:	a007883a 	mov	r3,r20
  80df70:	288a703a 	and	r5,r5,r2
  80df74:	003f2206 	br	80dc00 <__alt_data_end+0xff80dc00>
  80df78:	183fca26 	beq	r3,zero,80dea4 <__alt_data_end+0xff80dea4>
  80df7c:	e5ef883a 	add	r23,fp,r23
  80df80:	40bfffc4 	addi	r2,r8,-1
  80df84:	bf00392e 	bgeu	r23,fp,80e06c <__divdf3+0x75c>
  80df88:	1011883a 	mov	r8,r2
  80df8c:	ba7fc41e 	bne	r23,r9,80dea0 <__alt_data_end+0xff80dea0>
  80df90:	b0ffc31e 	bne	r22,r3,80dea0 <__alt_data_end+0xff80dea0>
  80df94:	003fc306 	br	80dea4 <__alt_data_end+0xff80dea4>
  80df98:	143ff604 	addi	r16,r2,-40
  80df9c:	9c20983a 	sll	r16,r19,r16
  80dfa0:	0025883a 	mov	r18,zero
  80dfa4:	003ee206 	br	80db30 <__alt_data_end+0xff80db30>
  80dfa8:	d9800315 	stw	r6,12(sp)
  80dfac:	d9c00215 	stw	r7,8(sp)
  80dfb0:	08036c80 	call	8036c8 <__clzsi2>
  80dfb4:	10800804 	addi	r2,r2,32
  80dfb8:	d9c00217 	ldw	r7,8(sp)
  80dfbc:	d9800317 	ldw	r6,12(sp)
  80dfc0:	003ed106 	br	80db08 <__alt_data_end+0xff80db08>
  80dfc4:	147ff604 	addi	r17,r2,-40
  80dfc8:	3462983a 	sll	r17,r6,r17
  80dfcc:	0011883a 	mov	r8,zero
  80dfd0:	003ef506 	br	80dba8 <__alt_data_end+0xff80dba8>
  80dfd4:	3009883a 	mov	r4,r6
  80dfd8:	d9800315 	stw	r6,12(sp)
  80dfdc:	da400115 	stw	r9,4(sp)
  80dfe0:	08036c80 	call	8036c8 <__clzsi2>
  80dfe4:	10800804 	addi	r2,r2,32
  80dfe8:	da400117 	ldw	r9,4(sp)
  80dfec:	d9800317 	ldw	r6,12(sp)
  80dff0:	003ee306 	br	80db80 <__alt_data_end+0xff80db80>
  80dff4:	85a1883a 	add	r16,r16,r22
  80dff8:	8585803a 	cmpltu	r2,r16,r22
  80dffc:	1705883a 	add	r2,r2,fp
  80e000:	14a5883a 	add	r18,r2,r18
  80e004:	88bfffc4 	addi	r2,r17,-1
  80e008:	e4800c2e 	bgeu	fp,r18,80e03c <__divdf3+0x72c>
  80e00c:	90c03e36 	bltu	r18,r3,80e108 <__divdf3+0x7f8>
  80e010:	1c806926 	beq	r3,r18,80e1b8 <__divdf3+0x8a8>
  80e014:	90c7c83a 	sub	r3,r18,r3
  80e018:	1023883a 	mov	r17,r2
  80e01c:	003f5206 	br	80dd68 <__alt_data_end+0xff80dd68>
  80e020:	923f0436 	bltu	r18,r8,80dc34 <__alt_data_end+0xff80dc34>
  80e024:	800897fa 	slli	r4,r16,31
  80e028:	9004d07a 	srli	r2,r18,1
  80e02c:	8006d07a 	srli	r3,r16,1
  80e030:	902097fa 	slli	r16,r18,31
  80e034:	20a4b03a 	or	r18,r4,r2
  80e038:	003f0106 	br	80dc40 <__alt_data_end+0xff80dc40>
  80e03c:	e4bff51e 	bne	fp,r18,80e014 <__alt_data_end+0xff80e014>
  80e040:	85bff22e 	bgeu	r16,r22,80e00c <__alt_data_end+0xff80e00c>
  80e044:	e0c7c83a 	sub	r3,fp,r3
  80e048:	1023883a 	mov	r17,r2
  80e04c:	003f4606 	br	80dd68 <__alt_data_end+0xff80dd68>
  80e050:	100f883a 	mov	r7,r2
  80e054:	003f2b06 	br	80dd04 <__alt_data_end+0xff80dd04>
  80e058:	180d883a 	mov	r6,r3
  80e05c:	003f1306 	br	80dcac <__alt_data_end+0xff80dcac>
  80e060:	813fe436 	bltu	r16,r4,80dff4 <__alt_data_end+0xff80dff4>
  80e064:	0007883a 	mov	r3,zero
  80e068:	003f3f06 	br	80dd68 <__alt_data_end+0xff80dd68>
  80e06c:	ba402c36 	bltu	r23,r9,80e120 <__divdf3+0x810>
  80e070:	4dc05426 	beq	r9,r23,80e1c4 <__divdf3+0x8b4>
  80e074:	1011883a 	mov	r8,r2
  80e078:	003f8906 	br	80dea0 <__alt_data_end+0xff80dea0>
  80e07c:	023fffc4 	movi	r8,-1
  80e080:	003f8806 	br	80dea4 <__alt_data_end+0xff80dea4>
  80e084:	1811883a 	mov	r8,r3
  80e088:	003f5406 	br	80dddc <__alt_data_end+0xff80dddc>
  80e08c:	1025883a 	mov	r18,r2
  80e090:	003f6d06 	br	80de48 <__alt_data_end+0xff80de48>
  80e094:	b827883a 	mov	r19,r23
  80e098:	003f8206 	br	80dea4 <__alt_data_end+0xff80dea4>
  80e09c:	010007c4 	movi	r4,31
  80e0a0:	20c02616 	blt	r4,r3,80e13c <__divdf3+0x82c>
  80e0a4:	00800804 	movi	r2,32
  80e0a8:	10c5c83a 	sub	r2,r2,r3
  80e0ac:	888a983a 	sll	r5,r17,r2
  80e0b0:	40c8d83a 	srl	r4,r8,r3
  80e0b4:	4084983a 	sll	r2,r8,r2
  80e0b8:	88e2d83a 	srl	r17,r17,r3
  80e0bc:	2906b03a 	or	r3,r5,r4
  80e0c0:	1004c03a 	cmpne	r2,r2,zero
  80e0c4:	1886b03a 	or	r3,r3,r2
  80e0c8:	188001cc 	andi	r2,r3,7
  80e0cc:	10000726 	beq	r2,zero,80e0ec <__divdf3+0x7dc>
  80e0d0:	188003cc 	andi	r2,r3,15
  80e0d4:	01000104 	movi	r4,4
  80e0d8:	11000426 	beq	r2,r4,80e0ec <__divdf3+0x7dc>
  80e0dc:	1805883a 	mov	r2,r3
  80e0e0:	10c00104 	addi	r3,r2,4
  80e0e4:	1885803a 	cmpltu	r2,r3,r2
  80e0e8:	88a3883a 	add	r17,r17,r2
  80e0ec:	8880202c 	andhi	r2,r17,128
  80e0f0:	10002726 	beq	r2,zero,80e190 <__divdf3+0x880>
  80e0f4:	98c0004c 	andi	r3,r19,1
  80e0f8:	00800044 	movi	r2,1
  80e0fc:	000b883a 	mov	r5,zero
  80e100:	0025883a 	mov	r18,zero
  80e104:	003e6106 	br	80da8c <__alt_data_end+0xff80da8c>
  80e108:	85a1883a 	add	r16,r16,r22
  80e10c:	8585803a 	cmpltu	r2,r16,r22
  80e110:	1705883a 	add	r2,r2,fp
  80e114:	14a5883a 	add	r18,r2,r18
  80e118:	8c7fff84 	addi	r17,r17,-2
  80e11c:	003f1106 	br	80dd64 <__alt_data_end+0xff80dd64>
  80e120:	b589883a 	add	r4,r22,r22
  80e124:	25ad803a 	cmpltu	r22,r4,r22
  80e128:	b739883a 	add	fp,r22,fp
  80e12c:	40bfff84 	addi	r2,r8,-2
  80e130:	bf2f883a 	add	r23,r23,fp
  80e134:	202d883a 	mov	r22,r4
  80e138:	003f9306 	br	80df88 <__alt_data_end+0xff80df88>
  80e13c:	013ff844 	movi	r4,-31
  80e140:	2085c83a 	sub	r2,r4,r2
  80e144:	8888d83a 	srl	r4,r17,r2
  80e148:	00800804 	movi	r2,32
  80e14c:	18802126 	beq	r3,r2,80e1d4 <__divdf3+0x8c4>
  80e150:	00801004 	movi	r2,64
  80e154:	10c5c83a 	sub	r2,r2,r3
  80e158:	8884983a 	sll	r2,r17,r2
  80e15c:	1204b03a 	or	r2,r2,r8
  80e160:	1004c03a 	cmpne	r2,r2,zero
  80e164:	2084b03a 	or	r2,r4,r2
  80e168:	144001cc 	andi	r17,r2,7
  80e16c:	88000d1e 	bne	r17,zero,80e1a4 <__divdf3+0x894>
  80e170:	000b883a 	mov	r5,zero
  80e174:	1024d0fa 	srli	r18,r2,3
  80e178:	98c0004c 	andi	r3,r19,1
  80e17c:	0005883a 	mov	r2,zero
  80e180:	9464b03a 	or	r18,r18,r17
  80e184:	003e4106 	br	80da8c <__alt_data_end+0xff80da8c>
  80e188:	1007883a 	mov	r3,r2
  80e18c:	0023883a 	mov	r17,zero
  80e190:	880a927a 	slli	r5,r17,9
  80e194:	1805883a 	mov	r2,r3
  80e198:	8822977a 	slli	r17,r17,29
  80e19c:	280ad33a 	srli	r5,r5,12
  80e1a0:	003ff406 	br	80e174 <__alt_data_end+0xff80e174>
  80e1a4:	10c003cc 	andi	r3,r2,15
  80e1a8:	01000104 	movi	r4,4
  80e1ac:	193ff626 	beq	r3,r4,80e188 <__alt_data_end+0xff80e188>
  80e1b0:	0023883a 	mov	r17,zero
  80e1b4:	003fca06 	br	80e0e0 <__alt_data_end+0xff80e0e0>
  80e1b8:	813fd336 	bltu	r16,r4,80e108 <__alt_data_end+0xff80e108>
  80e1bc:	1023883a 	mov	r17,r2
  80e1c0:	003fa806 	br	80e064 <__alt_data_end+0xff80e064>
  80e1c4:	b0ffd636 	bltu	r22,r3,80e120 <__alt_data_end+0xff80e120>
  80e1c8:	1011883a 	mov	r8,r2
  80e1cc:	b0ff341e 	bne	r22,r3,80dea0 <__alt_data_end+0xff80dea0>
  80e1d0:	003f3406 	br	80dea4 <__alt_data_end+0xff80dea4>
  80e1d4:	0005883a 	mov	r2,zero
  80e1d8:	003fe006 	br	80e15c <__alt_data_end+0xff80e15c>
  80e1dc:	00800434 	movhi	r2,16
  80e1e0:	89400234 	orhi	r5,r17,8
  80e1e4:	10bfffc4 	addi	r2,r2,-1
  80e1e8:	b807883a 	mov	r3,r23
  80e1ec:	288a703a 	and	r5,r5,r2
  80e1f0:	4025883a 	mov	r18,r8
  80e1f4:	003e8206 	br	80dc00 <__alt_data_end+0xff80dc00>

0080e1f8 <__eqdf2>:
  80e1f8:	2804d53a 	srli	r2,r5,20
  80e1fc:	3806d53a 	srli	r3,r7,20
  80e200:	02000434 	movhi	r8,16
  80e204:	423fffc4 	addi	r8,r8,-1
  80e208:	1081ffcc 	andi	r2,r2,2047
  80e20c:	0281ffc4 	movi	r10,2047
  80e210:	2a12703a 	and	r9,r5,r8
  80e214:	18c1ffcc 	andi	r3,r3,2047
  80e218:	3a10703a 	and	r8,r7,r8
  80e21c:	280ad7fa 	srli	r5,r5,31
  80e220:	380ed7fa 	srli	r7,r7,31
  80e224:	12801026 	beq	r2,r10,80e268 <__eqdf2+0x70>
  80e228:	0281ffc4 	movi	r10,2047
  80e22c:	1a800a26 	beq	r3,r10,80e258 <__eqdf2+0x60>
  80e230:	10c00226 	beq	r2,r3,80e23c <__eqdf2+0x44>
  80e234:	00800044 	movi	r2,1
  80e238:	f800283a 	ret
  80e23c:	4a3ffd1e 	bne	r9,r8,80e234 <__alt_data_end+0xff80e234>
  80e240:	21bffc1e 	bne	r4,r6,80e234 <__alt_data_end+0xff80e234>
  80e244:	29c00c26 	beq	r5,r7,80e278 <__eqdf2+0x80>
  80e248:	103ffa1e 	bne	r2,zero,80e234 <__alt_data_end+0xff80e234>
  80e24c:	2244b03a 	or	r2,r4,r9
  80e250:	1004c03a 	cmpne	r2,r2,zero
  80e254:	f800283a 	ret
  80e258:	3214b03a 	or	r10,r6,r8
  80e25c:	503ff426 	beq	r10,zero,80e230 <__alt_data_end+0xff80e230>
  80e260:	00800044 	movi	r2,1
  80e264:	f800283a 	ret
  80e268:	2254b03a 	or	r10,r4,r9
  80e26c:	503fee26 	beq	r10,zero,80e228 <__alt_data_end+0xff80e228>
  80e270:	00800044 	movi	r2,1
  80e274:	f800283a 	ret
  80e278:	0005883a 	mov	r2,zero
  80e27c:	f800283a 	ret

0080e280 <__gedf2>:
  80e280:	2804d53a 	srli	r2,r5,20
  80e284:	3806d53a 	srli	r3,r7,20
  80e288:	02000434 	movhi	r8,16
  80e28c:	423fffc4 	addi	r8,r8,-1
  80e290:	1081ffcc 	andi	r2,r2,2047
  80e294:	0241ffc4 	movi	r9,2047
  80e298:	2a14703a 	and	r10,r5,r8
  80e29c:	18c1ffcc 	andi	r3,r3,2047
  80e2a0:	3a10703a 	and	r8,r7,r8
  80e2a4:	280ad7fa 	srli	r5,r5,31
  80e2a8:	380ed7fa 	srli	r7,r7,31
  80e2ac:	12401d26 	beq	r2,r9,80e324 <__gedf2+0xa4>
  80e2b0:	0241ffc4 	movi	r9,2047
  80e2b4:	1a401226 	beq	r3,r9,80e300 <__gedf2+0x80>
  80e2b8:	1000081e 	bne	r2,zero,80e2dc <__gedf2+0x5c>
  80e2bc:	2296b03a 	or	r11,r4,r10
  80e2c0:	5813003a 	cmpeq	r9,r11,zero
  80e2c4:	1800091e 	bne	r3,zero,80e2ec <__gedf2+0x6c>
  80e2c8:	3218b03a 	or	r12,r6,r8
  80e2cc:	6000071e 	bne	r12,zero,80e2ec <__gedf2+0x6c>
  80e2d0:	0005883a 	mov	r2,zero
  80e2d4:	5800101e 	bne	r11,zero,80e318 <__gedf2+0x98>
  80e2d8:	f800283a 	ret
  80e2dc:	18000c1e 	bne	r3,zero,80e310 <__gedf2+0x90>
  80e2e0:	3212b03a 	or	r9,r6,r8
  80e2e4:	48000c26 	beq	r9,zero,80e318 <__gedf2+0x98>
  80e2e8:	0013883a 	mov	r9,zero
  80e2ec:	39c03fcc 	andi	r7,r7,255
  80e2f0:	48000826 	beq	r9,zero,80e314 <__gedf2+0x94>
  80e2f4:	38000926 	beq	r7,zero,80e31c <__gedf2+0x9c>
  80e2f8:	00800044 	movi	r2,1
  80e2fc:	f800283a 	ret
  80e300:	3212b03a 	or	r9,r6,r8
  80e304:	483fec26 	beq	r9,zero,80e2b8 <__alt_data_end+0xff80e2b8>
  80e308:	00bfff84 	movi	r2,-2
  80e30c:	f800283a 	ret
  80e310:	39c03fcc 	andi	r7,r7,255
  80e314:	29c00626 	beq	r5,r7,80e330 <__gedf2+0xb0>
  80e318:	283ff726 	beq	r5,zero,80e2f8 <__alt_data_end+0xff80e2f8>
  80e31c:	00bfffc4 	movi	r2,-1
  80e320:	f800283a 	ret
  80e324:	2292b03a 	or	r9,r4,r10
  80e328:	483fe126 	beq	r9,zero,80e2b0 <__alt_data_end+0xff80e2b0>
  80e32c:	003ff606 	br	80e308 <__alt_data_end+0xff80e308>
  80e330:	18bff916 	blt	r3,r2,80e318 <__alt_data_end+0xff80e318>
  80e334:	10c00316 	blt	r2,r3,80e344 <__gedf2+0xc4>
  80e338:	42bff736 	bltu	r8,r10,80e318 <__alt_data_end+0xff80e318>
  80e33c:	52000326 	beq	r10,r8,80e34c <__gedf2+0xcc>
  80e340:	5200042e 	bgeu	r10,r8,80e354 <__gedf2+0xd4>
  80e344:	283fec1e 	bne	r5,zero,80e2f8 <__alt_data_end+0xff80e2f8>
  80e348:	003ff406 	br	80e31c <__alt_data_end+0xff80e31c>
  80e34c:	313ff236 	bltu	r6,r4,80e318 <__alt_data_end+0xff80e318>
  80e350:	21bffc36 	bltu	r4,r6,80e344 <__alt_data_end+0xff80e344>
  80e354:	0005883a 	mov	r2,zero
  80e358:	f800283a 	ret

0080e35c <__ledf2>:
  80e35c:	2804d53a 	srli	r2,r5,20
  80e360:	3810d53a 	srli	r8,r7,20
  80e364:	00c00434 	movhi	r3,16
  80e368:	18ffffc4 	addi	r3,r3,-1
  80e36c:	1081ffcc 	andi	r2,r2,2047
  80e370:	0241ffc4 	movi	r9,2047
  80e374:	28d4703a 	and	r10,r5,r3
  80e378:	4201ffcc 	andi	r8,r8,2047
  80e37c:	38c6703a 	and	r3,r7,r3
  80e380:	280ad7fa 	srli	r5,r5,31
  80e384:	380ed7fa 	srli	r7,r7,31
  80e388:	12401f26 	beq	r2,r9,80e408 <__ledf2+0xac>
  80e38c:	0241ffc4 	movi	r9,2047
  80e390:	42401426 	beq	r8,r9,80e3e4 <__ledf2+0x88>
  80e394:	1000091e 	bne	r2,zero,80e3bc <__ledf2+0x60>
  80e398:	2296b03a 	or	r11,r4,r10
  80e39c:	5813003a 	cmpeq	r9,r11,zero
  80e3a0:	29403fcc 	andi	r5,r5,255
  80e3a4:	40000a1e 	bne	r8,zero,80e3d0 <__ledf2+0x74>
  80e3a8:	30d8b03a 	or	r12,r6,r3
  80e3ac:	6000081e 	bne	r12,zero,80e3d0 <__ledf2+0x74>
  80e3b0:	0005883a 	mov	r2,zero
  80e3b4:	5800111e 	bne	r11,zero,80e3fc <__ledf2+0xa0>
  80e3b8:	f800283a 	ret
  80e3bc:	29403fcc 	andi	r5,r5,255
  80e3c0:	40000c1e 	bne	r8,zero,80e3f4 <__ledf2+0x98>
  80e3c4:	30d2b03a 	or	r9,r6,r3
  80e3c8:	48000c26 	beq	r9,zero,80e3fc <__ledf2+0xa0>
  80e3cc:	0013883a 	mov	r9,zero
  80e3d0:	39c03fcc 	andi	r7,r7,255
  80e3d4:	48000826 	beq	r9,zero,80e3f8 <__ledf2+0x9c>
  80e3d8:	38001126 	beq	r7,zero,80e420 <__ledf2+0xc4>
  80e3dc:	00800044 	movi	r2,1
  80e3e0:	f800283a 	ret
  80e3e4:	30d2b03a 	or	r9,r6,r3
  80e3e8:	483fea26 	beq	r9,zero,80e394 <__alt_data_end+0xff80e394>
  80e3ec:	00800084 	movi	r2,2
  80e3f0:	f800283a 	ret
  80e3f4:	39c03fcc 	andi	r7,r7,255
  80e3f8:	39400726 	beq	r7,r5,80e418 <__ledf2+0xbc>
  80e3fc:	2800081e 	bne	r5,zero,80e420 <__ledf2+0xc4>
  80e400:	00800044 	movi	r2,1
  80e404:	f800283a 	ret
  80e408:	2292b03a 	or	r9,r4,r10
  80e40c:	483fdf26 	beq	r9,zero,80e38c <__alt_data_end+0xff80e38c>
  80e410:	00800084 	movi	r2,2
  80e414:	f800283a 	ret
  80e418:	4080030e 	bge	r8,r2,80e428 <__ledf2+0xcc>
  80e41c:	383fef26 	beq	r7,zero,80e3dc <__alt_data_end+0xff80e3dc>
  80e420:	00bfffc4 	movi	r2,-1
  80e424:	f800283a 	ret
  80e428:	123feb16 	blt	r2,r8,80e3d8 <__alt_data_end+0xff80e3d8>
  80e42c:	1abff336 	bltu	r3,r10,80e3fc <__alt_data_end+0xff80e3fc>
  80e430:	50c00326 	beq	r10,r3,80e440 <__ledf2+0xe4>
  80e434:	50c0042e 	bgeu	r10,r3,80e448 <__ledf2+0xec>
  80e438:	283fe81e 	bne	r5,zero,80e3dc <__alt_data_end+0xff80e3dc>
  80e43c:	003ff806 	br	80e420 <__alt_data_end+0xff80e420>
  80e440:	313fee36 	bltu	r6,r4,80e3fc <__alt_data_end+0xff80e3fc>
  80e444:	21bffc36 	bltu	r4,r6,80e438 <__alt_data_end+0xff80e438>
  80e448:	0005883a 	mov	r2,zero
  80e44c:	f800283a 	ret

0080e450 <__fixdfsi>:
  80e450:	280cd53a 	srli	r6,r5,20
  80e454:	00c00434 	movhi	r3,16
  80e458:	18ffffc4 	addi	r3,r3,-1
  80e45c:	3181ffcc 	andi	r6,r6,2047
  80e460:	01c0ff84 	movi	r7,1022
  80e464:	28c6703a 	and	r3,r5,r3
  80e468:	280ad7fa 	srli	r5,r5,31
  80e46c:	3980120e 	bge	r7,r6,80e4b8 <__fixdfsi+0x68>
  80e470:	00810744 	movi	r2,1053
  80e474:	11800c16 	blt	r2,r6,80e4a8 <__fixdfsi+0x58>
  80e478:	00810cc4 	movi	r2,1075
  80e47c:	1185c83a 	sub	r2,r2,r6
  80e480:	01c007c4 	movi	r7,31
  80e484:	18c00434 	orhi	r3,r3,16
  80e488:	38800d16 	blt	r7,r2,80e4c0 <__fixdfsi+0x70>
  80e48c:	31befb44 	addi	r6,r6,-1043
  80e490:	2084d83a 	srl	r2,r4,r2
  80e494:	1986983a 	sll	r3,r3,r6
  80e498:	1884b03a 	or	r2,r3,r2
  80e49c:	28000726 	beq	r5,zero,80e4bc <__fixdfsi+0x6c>
  80e4a0:	0085c83a 	sub	r2,zero,r2
  80e4a4:	f800283a 	ret
  80e4a8:	00a00034 	movhi	r2,32768
  80e4ac:	10bfffc4 	addi	r2,r2,-1
  80e4b0:	2885883a 	add	r2,r5,r2
  80e4b4:	f800283a 	ret
  80e4b8:	0005883a 	mov	r2,zero
  80e4bc:	f800283a 	ret
  80e4c0:	008104c4 	movi	r2,1043
  80e4c4:	1185c83a 	sub	r2,r2,r6
  80e4c8:	1884d83a 	srl	r2,r3,r2
  80e4cc:	003ff306 	br	80e49c <__alt_data_end+0xff80e49c>

0080e4d0 <__floatsidf>:
  80e4d0:	defffd04 	addi	sp,sp,-12
  80e4d4:	dfc00215 	stw	ra,8(sp)
  80e4d8:	dc400115 	stw	r17,4(sp)
  80e4dc:	dc000015 	stw	r16,0(sp)
  80e4e0:	20002b26 	beq	r4,zero,80e590 <__floatsidf+0xc0>
  80e4e4:	2023883a 	mov	r17,r4
  80e4e8:	2020d7fa 	srli	r16,r4,31
  80e4ec:	20002d16 	blt	r4,zero,80e5a4 <__floatsidf+0xd4>
  80e4f0:	8809883a 	mov	r4,r17
  80e4f4:	08036c80 	call	8036c8 <__clzsi2>
  80e4f8:	01410784 	movi	r5,1054
  80e4fc:	288bc83a 	sub	r5,r5,r2
  80e500:	01010cc4 	movi	r4,1075
  80e504:	2149c83a 	sub	r4,r4,r5
  80e508:	00c007c4 	movi	r3,31
  80e50c:	1900160e 	bge	r3,r4,80e568 <__floatsidf+0x98>
  80e510:	00c104c4 	movi	r3,1043
  80e514:	1947c83a 	sub	r3,r3,r5
  80e518:	88c6983a 	sll	r3,r17,r3
  80e51c:	00800434 	movhi	r2,16
  80e520:	10bfffc4 	addi	r2,r2,-1
  80e524:	1886703a 	and	r3,r3,r2
  80e528:	2941ffcc 	andi	r5,r5,2047
  80e52c:	800d883a 	mov	r6,r16
  80e530:	0005883a 	mov	r2,zero
  80e534:	280a953a 	slli	r5,r5,20
  80e538:	31803fcc 	andi	r6,r6,255
  80e53c:	01000434 	movhi	r4,16
  80e540:	300c97fa 	slli	r6,r6,31
  80e544:	213fffc4 	addi	r4,r4,-1
  80e548:	1906703a 	and	r3,r3,r4
  80e54c:	1946b03a 	or	r3,r3,r5
  80e550:	1986b03a 	or	r3,r3,r6
  80e554:	dfc00217 	ldw	ra,8(sp)
  80e558:	dc400117 	ldw	r17,4(sp)
  80e55c:	dc000017 	ldw	r16,0(sp)
  80e560:	dec00304 	addi	sp,sp,12
  80e564:	f800283a 	ret
  80e568:	00c002c4 	movi	r3,11
  80e56c:	1887c83a 	sub	r3,r3,r2
  80e570:	88c6d83a 	srl	r3,r17,r3
  80e574:	8904983a 	sll	r2,r17,r4
  80e578:	01000434 	movhi	r4,16
  80e57c:	213fffc4 	addi	r4,r4,-1
  80e580:	2941ffcc 	andi	r5,r5,2047
  80e584:	1906703a 	and	r3,r3,r4
  80e588:	800d883a 	mov	r6,r16
  80e58c:	003fe906 	br	80e534 <__alt_data_end+0xff80e534>
  80e590:	000d883a 	mov	r6,zero
  80e594:	000b883a 	mov	r5,zero
  80e598:	0007883a 	mov	r3,zero
  80e59c:	0005883a 	mov	r2,zero
  80e5a0:	003fe406 	br	80e534 <__alt_data_end+0xff80e534>
  80e5a4:	0123c83a 	sub	r17,zero,r4
  80e5a8:	003fd106 	br	80e4f0 <__alt_data_end+0xff80e4f0>

0080e5ac <__floatunsidf>:
  80e5ac:	defffe04 	addi	sp,sp,-8
  80e5b0:	dc000015 	stw	r16,0(sp)
  80e5b4:	dfc00115 	stw	ra,4(sp)
  80e5b8:	2021883a 	mov	r16,r4
  80e5bc:	20002226 	beq	r4,zero,80e648 <__floatunsidf+0x9c>
  80e5c0:	08036c80 	call	8036c8 <__clzsi2>
  80e5c4:	01010784 	movi	r4,1054
  80e5c8:	2089c83a 	sub	r4,r4,r2
  80e5cc:	01810cc4 	movi	r6,1075
  80e5d0:	310dc83a 	sub	r6,r6,r4
  80e5d4:	00c007c4 	movi	r3,31
  80e5d8:	1980120e 	bge	r3,r6,80e624 <__floatunsidf+0x78>
  80e5dc:	00c104c4 	movi	r3,1043
  80e5e0:	1907c83a 	sub	r3,r3,r4
  80e5e4:	80ca983a 	sll	r5,r16,r3
  80e5e8:	00800434 	movhi	r2,16
  80e5ec:	10bfffc4 	addi	r2,r2,-1
  80e5f0:	2101ffcc 	andi	r4,r4,2047
  80e5f4:	0021883a 	mov	r16,zero
  80e5f8:	288a703a 	and	r5,r5,r2
  80e5fc:	2008953a 	slli	r4,r4,20
  80e600:	00c00434 	movhi	r3,16
  80e604:	18ffffc4 	addi	r3,r3,-1
  80e608:	28c6703a 	and	r3,r5,r3
  80e60c:	8005883a 	mov	r2,r16
  80e610:	1906b03a 	or	r3,r3,r4
  80e614:	dfc00117 	ldw	ra,4(sp)
  80e618:	dc000017 	ldw	r16,0(sp)
  80e61c:	dec00204 	addi	sp,sp,8
  80e620:	f800283a 	ret
  80e624:	00c002c4 	movi	r3,11
  80e628:	188bc83a 	sub	r5,r3,r2
  80e62c:	814ad83a 	srl	r5,r16,r5
  80e630:	00c00434 	movhi	r3,16
  80e634:	18ffffc4 	addi	r3,r3,-1
  80e638:	81a0983a 	sll	r16,r16,r6
  80e63c:	2101ffcc 	andi	r4,r4,2047
  80e640:	28ca703a 	and	r5,r5,r3
  80e644:	003fed06 	br	80e5fc <__alt_data_end+0xff80e5fc>
  80e648:	0009883a 	mov	r4,zero
  80e64c:	000b883a 	mov	r5,zero
  80e650:	003fea06 	br	80e5fc <__alt_data_end+0xff80e5fc>

0080e654 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e654:	defffe04 	addi	sp,sp,-8
  80e658:	dfc00115 	stw	ra,4(sp)
  80e65c:	df000015 	stw	fp,0(sp)
  80e660:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e664:	d0a00b17 	ldw	r2,-32724(gp)
  80e668:	10000326 	beq	r2,zero,80e678 <alt_get_errno+0x24>
  80e66c:	d0a00b17 	ldw	r2,-32724(gp)
  80e670:	103ee83a 	callr	r2
  80e674:	00000106 	br	80e67c <alt_get_errno+0x28>
  80e678:	d0a6d104 	addi	r2,gp,-25788
}
  80e67c:	e037883a 	mov	sp,fp
  80e680:	dfc00117 	ldw	ra,4(sp)
  80e684:	df000017 	ldw	fp,0(sp)
  80e688:	dec00204 	addi	sp,sp,8
  80e68c:	f800283a 	ret

0080e690 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80e690:	defffb04 	addi	sp,sp,-20
  80e694:	dfc00415 	stw	ra,16(sp)
  80e698:	df000315 	stw	fp,12(sp)
  80e69c:	df000304 	addi	fp,sp,12
  80e6a0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80e6a4:	e0bfff17 	ldw	r2,-4(fp)
  80e6a8:	10000616 	blt	r2,zero,80e6c4 <close+0x34>
  80e6ac:	e0bfff17 	ldw	r2,-4(fp)
  80e6b0:	10c00324 	muli	r3,r2,12
  80e6b4:	00802074 	movhi	r2,129
  80e6b8:	1086ec04 	addi	r2,r2,7088
  80e6bc:	1885883a 	add	r2,r3,r2
  80e6c0:	00000106 	br	80e6c8 <close+0x38>
  80e6c4:	0005883a 	mov	r2,zero
  80e6c8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80e6cc:	e0bffd17 	ldw	r2,-12(fp)
  80e6d0:	10001926 	beq	r2,zero,80e738 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80e6d4:	e0bffd17 	ldw	r2,-12(fp)
  80e6d8:	10800017 	ldw	r2,0(r2)
  80e6dc:	10800417 	ldw	r2,16(r2)
  80e6e0:	10000626 	beq	r2,zero,80e6fc <close+0x6c>
  80e6e4:	e0bffd17 	ldw	r2,-12(fp)
  80e6e8:	10800017 	ldw	r2,0(r2)
  80e6ec:	10800417 	ldw	r2,16(r2)
  80e6f0:	e13ffd17 	ldw	r4,-12(fp)
  80e6f4:	103ee83a 	callr	r2
  80e6f8:	00000106 	br	80e700 <close+0x70>
  80e6fc:	0005883a 	mov	r2,zero
  80e700:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80e704:	e13fff17 	ldw	r4,-4(fp)
  80e708:	080ed8c0 	call	80ed8c <alt_release_fd>
    if (rval < 0)
  80e70c:	e0bffe17 	ldw	r2,-8(fp)
  80e710:	1000070e 	bge	r2,zero,80e730 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80e714:	080e6540 	call	80e654 <alt_get_errno>
  80e718:	1007883a 	mov	r3,r2
  80e71c:	e0bffe17 	ldw	r2,-8(fp)
  80e720:	0085c83a 	sub	r2,zero,r2
  80e724:	18800015 	stw	r2,0(r3)
      return -1;
  80e728:	00bfffc4 	movi	r2,-1
  80e72c:	00000706 	br	80e74c <close+0xbc>
    }
    return 0;
  80e730:	0005883a 	mov	r2,zero
  80e734:	00000506 	br	80e74c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e738:	080e6540 	call	80e654 <alt_get_errno>
  80e73c:	1007883a 	mov	r3,r2
  80e740:	00801444 	movi	r2,81
  80e744:	18800015 	stw	r2,0(r3)
    return -1;
  80e748:	00bfffc4 	movi	r2,-1
  }
}
  80e74c:	e037883a 	mov	sp,fp
  80e750:	dfc00117 	ldw	ra,4(sp)
  80e754:	df000017 	ldw	fp,0(sp)
  80e758:	dec00204 	addi	sp,sp,8
  80e75c:	f800283a 	ret

0080e760 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80e760:	defffc04 	addi	sp,sp,-16
  80e764:	df000315 	stw	fp,12(sp)
  80e768:	df000304 	addi	fp,sp,12
  80e76c:	e13ffd15 	stw	r4,-12(fp)
  80e770:	e17ffe15 	stw	r5,-8(fp)
  80e774:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80e778:	e0bfff17 	ldw	r2,-4(fp)
}
  80e77c:	e037883a 	mov	sp,fp
  80e780:	df000017 	ldw	fp,0(sp)
  80e784:	dec00104 	addi	sp,sp,4
  80e788:	f800283a 	ret

0080e78c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e78c:	defffe04 	addi	sp,sp,-8
  80e790:	dfc00115 	stw	ra,4(sp)
  80e794:	df000015 	stw	fp,0(sp)
  80e798:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e79c:	d0a00b17 	ldw	r2,-32724(gp)
  80e7a0:	10000326 	beq	r2,zero,80e7b0 <alt_get_errno+0x24>
  80e7a4:	d0a00b17 	ldw	r2,-32724(gp)
  80e7a8:	103ee83a 	callr	r2
  80e7ac:	00000106 	br	80e7b4 <alt_get_errno+0x28>
  80e7b0:	d0a6d104 	addi	r2,gp,-25788
}
  80e7b4:	e037883a 	mov	sp,fp
  80e7b8:	dfc00117 	ldw	ra,4(sp)
  80e7bc:	df000017 	ldw	fp,0(sp)
  80e7c0:	dec00204 	addi	sp,sp,8
  80e7c4:	f800283a 	ret

0080e7c8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80e7c8:	defffb04 	addi	sp,sp,-20
  80e7cc:	dfc00415 	stw	ra,16(sp)
  80e7d0:	df000315 	stw	fp,12(sp)
  80e7d4:	df000304 	addi	fp,sp,12
  80e7d8:	e13ffe15 	stw	r4,-8(fp)
  80e7dc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e7e0:	e0bffe17 	ldw	r2,-8(fp)
  80e7e4:	10000616 	blt	r2,zero,80e800 <fstat+0x38>
  80e7e8:	e0bffe17 	ldw	r2,-8(fp)
  80e7ec:	10c00324 	muli	r3,r2,12
  80e7f0:	00802074 	movhi	r2,129
  80e7f4:	1086ec04 	addi	r2,r2,7088
  80e7f8:	1885883a 	add	r2,r3,r2
  80e7fc:	00000106 	br	80e804 <fstat+0x3c>
  80e800:	0005883a 	mov	r2,zero
  80e804:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80e808:	e0bffd17 	ldw	r2,-12(fp)
  80e80c:	10001026 	beq	r2,zero,80e850 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80e810:	e0bffd17 	ldw	r2,-12(fp)
  80e814:	10800017 	ldw	r2,0(r2)
  80e818:	10800817 	ldw	r2,32(r2)
  80e81c:	10000726 	beq	r2,zero,80e83c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80e820:	e0bffd17 	ldw	r2,-12(fp)
  80e824:	10800017 	ldw	r2,0(r2)
  80e828:	10800817 	ldw	r2,32(r2)
  80e82c:	e17fff17 	ldw	r5,-4(fp)
  80e830:	e13ffd17 	ldw	r4,-12(fp)
  80e834:	103ee83a 	callr	r2
  80e838:	00000a06 	br	80e864 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80e83c:	e0bfff17 	ldw	r2,-4(fp)
  80e840:	00c80004 	movi	r3,8192
  80e844:	10c00115 	stw	r3,4(r2)
      return 0;
  80e848:	0005883a 	mov	r2,zero
  80e84c:	00000506 	br	80e864 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e850:	080e78c0 	call	80e78c <alt_get_errno>
  80e854:	1007883a 	mov	r3,r2
  80e858:	00801444 	movi	r2,81
  80e85c:	18800015 	stw	r2,0(r3)
    return -1;
  80e860:	00bfffc4 	movi	r2,-1
  }
}
  80e864:	e037883a 	mov	sp,fp
  80e868:	dfc00117 	ldw	ra,4(sp)
  80e86c:	df000017 	ldw	fp,0(sp)
  80e870:	dec00204 	addi	sp,sp,8
  80e874:	f800283a 	ret

0080e878 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e878:	defffe04 	addi	sp,sp,-8
  80e87c:	dfc00115 	stw	ra,4(sp)
  80e880:	df000015 	stw	fp,0(sp)
  80e884:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e888:	d0a00b17 	ldw	r2,-32724(gp)
  80e88c:	10000326 	beq	r2,zero,80e89c <alt_get_errno+0x24>
  80e890:	d0a00b17 	ldw	r2,-32724(gp)
  80e894:	103ee83a 	callr	r2
  80e898:	00000106 	br	80e8a0 <alt_get_errno+0x28>
  80e89c:	d0a6d104 	addi	r2,gp,-25788
}
  80e8a0:	e037883a 	mov	sp,fp
  80e8a4:	dfc00117 	ldw	ra,4(sp)
  80e8a8:	df000017 	ldw	fp,0(sp)
  80e8ac:	dec00204 	addi	sp,sp,8
  80e8b0:	f800283a 	ret

0080e8b4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80e8b4:	deffed04 	addi	sp,sp,-76
  80e8b8:	dfc01215 	stw	ra,72(sp)
  80e8bc:	df001115 	stw	fp,68(sp)
  80e8c0:	df001104 	addi	fp,sp,68
  80e8c4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e8c8:	e0bfff17 	ldw	r2,-4(fp)
  80e8cc:	10000616 	blt	r2,zero,80e8e8 <isatty+0x34>
  80e8d0:	e0bfff17 	ldw	r2,-4(fp)
  80e8d4:	10c00324 	muli	r3,r2,12
  80e8d8:	00802074 	movhi	r2,129
  80e8dc:	1086ec04 	addi	r2,r2,7088
  80e8e0:	1885883a 	add	r2,r3,r2
  80e8e4:	00000106 	br	80e8ec <isatty+0x38>
  80e8e8:	0005883a 	mov	r2,zero
  80e8ec:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80e8f0:	e0bfef17 	ldw	r2,-68(fp)
  80e8f4:	10000e26 	beq	r2,zero,80e930 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80e8f8:	e0bfef17 	ldw	r2,-68(fp)
  80e8fc:	10800017 	ldw	r2,0(r2)
  80e900:	10800817 	ldw	r2,32(r2)
  80e904:	1000021e 	bne	r2,zero,80e910 <isatty+0x5c>
    {
      return 1;
  80e908:	00800044 	movi	r2,1
  80e90c:	00000d06 	br	80e944 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80e910:	e0bff004 	addi	r2,fp,-64
  80e914:	100b883a 	mov	r5,r2
  80e918:	e13fff17 	ldw	r4,-4(fp)
  80e91c:	080e7c80 	call	80e7c8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80e920:	e0bff117 	ldw	r2,-60(fp)
  80e924:	10880020 	cmpeqi	r2,r2,8192
  80e928:	10803fcc 	andi	r2,r2,255
  80e92c:	00000506 	br	80e944 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e930:	080e8780 	call	80e878 <alt_get_errno>
  80e934:	1007883a 	mov	r3,r2
  80e938:	00801444 	movi	r2,81
  80e93c:	18800015 	stw	r2,0(r3)
    return 0;
  80e940:	0005883a 	mov	r2,zero
  }
}
  80e944:	e037883a 	mov	sp,fp
  80e948:	dfc00117 	ldw	ra,4(sp)
  80e94c:	df000017 	ldw	fp,0(sp)
  80e950:	dec00204 	addi	sp,sp,8
  80e954:	f800283a 	ret

0080e958 <alt_load_section>:
  80e958:	defffc04 	addi	sp,sp,-16
  80e95c:	df000315 	stw	fp,12(sp)
  80e960:	df000304 	addi	fp,sp,12
  80e964:	e13ffd15 	stw	r4,-12(fp)
  80e968:	e17ffe15 	stw	r5,-8(fp)
  80e96c:	e1bfff15 	stw	r6,-4(fp)
  80e970:	e0fffe17 	ldw	r3,-8(fp)
  80e974:	e0bffd17 	ldw	r2,-12(fp)
  80e978:	18800c26 	beq	r3,r2,80e9ac <alt_load_section+0x54>
  80e97c:	00000806 	br	80e9a0 <alt_load_section+0x48>
  80e980:	e0bffe17 	ldw	r2,-8(fp)
  80e984:	10c00104 	addi	r3,r2,4
  80e988:	e0fffe15 	stw	r3,-8(fp)
  80e98c:	e0fffd17 	ldw	r3,-12(fp)
  80e990:	19000104 	addi	r4,r3,4
  80e994:	e13ffd15 	stw	r4,-12(fp)
  80e998:	18c00017 	ldw	r3,0(r3)
  80e99c:	10c00015 	stw	r3,0(r2)
  80e9a0:	e0fffe17 	ldw	r3,-8(fp)
  80e9a4:	e0bfff17 	ldw	r2,-4(fp)
  80e9a8:	18bff51e 	bne	r3,r2,80e980 <__alt_data_end+0xff80e980>
  80e9ac:	0001883a 	nop
  80e9b0:	e037883a 	mov	sp,fp
  80e9b4:	df000017 	ldw	fp,0(sp)
  80e9b8:	dec00104 	addi	sp,sp,4
  80e9bc:	f800283a 	ret

0080e9c0 <alt_load>:
  80e9c0:	defffe04 	addi	sp,sp,-8
  80e9c4:	dfc00115 	stw	ra,4(sp)
  80e9c8:	df000015 	stw	fp,0(sp)
  80e9cc:	d839883a 	mov	fp,sp
  80e9d0:	01802074 	movhi	r6,129
  80e9d4:	318b7404 	addi	r6,r6,11728
  80e9d8:	01402074 	movhi	r5,129
  80e9dc:	2944b904 	addi	r5,r5,4836
  80e9e0:	01002074 	movhi	r4,129
  80e9e4:	210b7404 	addi	r4,r4,11728
  80e9e8:	080e9580 	call	80e958 <alt_load_section>
  80e9ec:	01802034 	movhi	r6,128
  80e9f0:	31809104 	addi	r6,r6,580
  80e9f4:	01402034 	movhi	r5,128
  80e9f8:	29400804 	addi	r5,r5,32
  80e9fc:	01002034 	movhi	r4,128
  80ea00:	21000804 	addi	r4,r4,32
  80ea04:	080e9580 	call	80e958 <alt_load_section>
  80ea08:	01802074 	movhi	r6,129
  80ea0c:	3184b904 	addi	r6,r6,4836
  80ea10:	01402074 	movhi	r5,129
  80ea14:	2943ea04 	addi	r5,r5,4008
  80ea18:	01002074 	movhi	r4,129
  80ea1c:	2103ea04 	addi	r4,r4,4008
  80ea20:	080e9580 	call	80e958 <alt_load_section>
  80ea24:	080fde00 	call	80fde0 <alt_dcache_flush_all>
  80ea28:	080ffc80 	call	80ffc8 <alt_icache_flush_all>
  80ea2c:	0001883a 	nop
  80ea30:	e037883a 	mov	sp,fp
  80ea34:	dfc00117 	ldw	ra,4(sp)
  80ea38:	df000017 	ldw	fp,0(sp)
  80ea3c:	dec00204 	addi	sp,sp,8
  80ea40:	f800283a 	ret

0080ea44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ea44:	defffe04 	addi	sp,sp,-8
  80ea48:	dfc00115 	stw	ra,4(sp)
  80ea4c:	df000015 	stw	fp,0(sp)
  80ea50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ea54:	d0a00b17 	ldw	r2,-32724(gp)
  80ea58:	10000326 	beq	r2,zero,80ea68 <alt_get_errno+0x24>
  80ea5c:	d0a00b17 	ldw	r2,-32724(gp)
  80ea60:	103ee83a 	callr	r2
  80ea64:	00000106 	br	80ea6c <alt_get_errno+0x28>
  80ea68:	d0a6d104 	addi	r2,gp,-25788
}
  80ea6c:	e037883a 	mov	sp,fp
  80ea70:	dfc00117 	ldw	ra,4(sp)
  80ea74:	df000017 	ldw	fp,0(sp)
  80ea78:	dec00204 	addi	sp,sp,8
  80ea7c:	f800283a 	ret

0080ea80 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80ea80:	defff904 	addi	sp,sp,-28
  80ea84:	dfc00615 	stw	ra,24(sp)
  80ea88:	df000515 	stw	fp,20(sp)
  80ea8c:	df000504 	addi	fp,sp,20
  80ea90:	e13ffd15 	stw	r4,-12(fp)
  80ea94:	e17ffe15 	stw	r5,-8(fp)
  80ea98:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80ea9c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80eaa0:	e0bffd17 	ldw	r2,-12(fp)
  80eaa4:	10000616 	blt	r2,zero,80eac0 <lseek+0x40>
  80eaa8:	e0bffd17 	ldw	r2,-12(fp)
  80eaac:	10c00324 	muli	r3,r2,12
  80eab0:	00802074 	movhi	r2,129
  80eab4:	1086ec04 	addi	r2,r2,7088
  80eab8:	1885883a 	add	r2,r3,r2
  80eabc:	00000106 	br	80eac4 <lseek+0x44>
  80eac0:	0005883a 	mov	r2,zero
  80eac4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80eac8:	e0bffc17 	ldw	r2,-16(fp)
  80eacc:	10001026 	beq	r2,zero,80eb10 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80ead0:	e0bffc17 	ldw	r2,-16(fp)
  80ead4:	10800017 	ldw	r2,0(r2)
  80ead8:	10800717 	ldw	r2,28(r2)
  80eadc:	10000926 	beq	r2,zero,80eb04 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80eae0:	e0bffc17 	ldw	r2,-16(fp)
  80eae4:	10800017 	ldw	r2,0(r2)
  80eae8:	10800717 	ldw	r2,28(r2)
  80eaec:	e1bfff17 	ldw	r6,-4(fp)
  80eaf0:	e17ffe17 	ldw	r5,-8(fp)
  80eaf4:	e13ffc17 	ldw	r4,-16(fp)
  80eaf8:	103ee83a 	callr	r2
  80eafc:	e0bffb15 	stw	r2,-20(fp)
  80eb00:	00000506 	br	80eb18 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80eb04:	00bfde84 	movi	r2,-134
  80eb08:	e0bffb15 	stw	r2,-20(fp)
  80eb0c:	00000206 	br	80eb18 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80eb10:	00bfebc4 	movi	r2,-81
  80eb14:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80eb18:	e0bffb17 	ldw	r2,-20(fp)
  80eb1c:	1000070e 	bge	r2,zero,80eb3c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80eb20:	080ea440 	call	80ea44 <alt_get_errno>
  80eb24:	1007883a 	mov	r3,r2
  80eb28:	e0bffb17 	ldw	r2,-20(fp)
  80eb2c:	0085c83a 	sub	r2,zero,r2
  80eb30:	18800015 	stw	r2,0(r3)
    rc = -1;
  80eb34:	00bfffc4 	movi	r2,-1
  80eb38:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80eb3c:	e0bffb17 	ldw	r2,-20(fp)
}
  80eb40:	e037883a 	mov	sp,fp
  80eb44:	dfc00117 	ldw	ra,4(sp)
  80eb48:	df000017 	ldw	fp,0(sp)
  80eb4c:	dec00204 	addi	sp,sp,8
  80eb50:	f800283a 	ret

0080eb54 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80eb54:	defffd04 	addi	sp,sp,-12
  80eb58:	dfc00215 	stw	ra,8(sp)
  80eb5c:	df000115 	stw	fp,4(sp)
  80eb60:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80eb64:	0009883a 	mov	r4,zero
  80eb68:	080f0bc0 	call	80f0bc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80eb6c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80eb70:	080f0f40 	call	80f0f4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80eb74:	01802074 	movhi	r6,129
  80eb78:	3184b104 	addi	r6,r6,4804
  80eb7c:	01402074 	movhi	r5,129
  80eb80:	2944b104 	addi	r5,r5,4804
  80eb84:	01002074 	movhi	r4,129
  80eb88:	2104b104 	addi	r4,r4,4804
  80eb8c:	08103600 	call	810360 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80eb90:	080ff080 	call	80ff08 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80eb94:	01002074 	movhi	r4,129
  80eb98:	213fda04 	addi	r4,r4,-152
  80eb9c:	0810b600 	call	810b60 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80eba0:	d0a6d217 	ldw	r2,-25784(gp)
  80eba4:	d0e6d317 	ldw	r3,-25780(gp)
  80eba8:	d126d417 	ldw	r4,-25776(gp)
  80ebac:	200d883a 	mov	r6,r4
  80ebb0:	180b883a 	mov	r5,r3
  80ebb4:	1009883a 	mov	r4,r2
  80ebb8:	08007740 	call	800774 <main>
  80ebbc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80ebc0:	01000044 	movi	r4,1
  80ebc4:	080e6900 	call	80e690 <close>
  exit (result);
  80ebc8:	e13fff17 	ldw	r4,-4(fp)
  80ebcc:	0810b740 	call	810b74 <exit>

0080ebd0 <__malloc_lock>:
  80ebd0:	defffe04 	addi	sp,sp,-8
  80ebd4:	df000115 	stw	fp,4(sp)
  80ebd8:	df000104 	addi	fp,sp,4
  80ebdc:	e13fff15 	stw	r4,-4(fp)
  80ebe0:	0001883a 	nop
  80ebe4:	e037883a 	mov	sp,fp
  80ebe8:	df000017 	ldw	fp,0(sp)
  80ebec:	dec00104 	addi	sp,sp,4
  80ebf0:	f800283a 	ret

0080ebf4 <__malloc_unlock>:
  80ebf4:	defffe04 	addi	sp,sp,-8
  80ebf8:	df000115 	stw	fp,4(sp)
  80ebfc:	df000104 	addi	fp,sp,4
  80ec00:	e13fff15 	stw	r4,-4(fp)
  80ec04:	0001883a 	nop
  80ec08:	e037883a 	mov	sp,fp
  80ec0c:	df000017 	ldw	fp,0(sp)
  80ec10:	dec00104 	addi	sp,sp,4
  80ec14:	f800283a 	ret

0080ec18 <alt_putstr>:
  80ec18:	defffd04 	addi	sp,sp,-12
  80ec1c:	dfc00215 	stw	ra,8(sp)
  80ec20:	df000115 	stw	fp,4(sp)
  80ec24:	df000104 	addi	fp,sp,4
  80ec28:	e13fff15 	stw	r4,-4(fp)
  80ec2c:	d0a00117 	ldw	r2,-32764(gp)
  80ec30:	10800217 	ldw	r2,8(r2)
  80ec34:	100b883a 	mov	r5,r2
  80ec38:	e13fff17 	ldw	r4,-4(fp)
  80ec3c:	0810c480 	call	810c48 <fputs>
  80ec40:	e037883a 	mov	sp,fp
  80ec44:	dfc00117 	ldw	ra,4(sp)
  80ec48:	df000017 	ldw	fp,0(sp)
  80ec4c:	dec00204 	addi	sp,sp,8
  80ec50:	f800283a 	ret

0080ec54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ec54:	defffe04 	addi	sp,sp,-8
  80ec58:	dfc00115 	stw	ra,4(sp)
  80ec5c:	df000015 	stw	fp,0(sp)
  80ec60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ec64:	d0a00b17 	ldw	r2,-32724(gp)
  80ec68:	10000326 	beq	r2,zero,80ec78 <alt_get_errno+0x24>
  80ec6c:	d0a00b17 	ldw	r2,-32724(gp)
  80ec70:	103ee83a 	callr	r2
  80ec74:	00000106 	br	80ec7c <alt_get_errno+0x28>
  80ec78:	d0a6d104 	addi	r2,gp,-25788
}
  80ec7c:	e037883a 	mov	sp,fp
  80ec80:	dfc00117 	ldw	ra,4(sp)
  80ec84:	df000017 	ldw	fp,0(sp)
  80ec88:	dec00204 	addi	sp,sp,8
  80ec8c:	f800283a 	ret

0080ec90 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80ec90:	defff904 	addi	sp,sp,-28
  80ec94:	dfc00615 	stw	ra,24(sp)
  80ec98:	df000515 	stw	fp,20(sp)
  80ec9c:	df000504 	addi	fp,sp,20
  80eca0:	e13ffd15 	stw	r4,-12(fp)
  80eca4:	e17ffe15 	stw	r5,-8(fp)
  80eca8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ecac:	e0bffd17 	ldw	r2,-12(fp)
  80ecb0:	10000616 	blt	r2,zero,80eccc <read+0x3c>
  80ecb4:	e0bffd17 	ldw	r2,-12(fp)
  80ecb8:	10c00324 	muli	r3,r2,12
  80ecbc:	00802074 	movhi	r2,129
  80ecc0:	1086ec04 	addi	r2,r2,7088
  80ecc4:	1885883a 	add	r2,r3,r2
  80ecc8:	00000106 	br	80ecd0 <read+0x40>
  80eccc:	0005883a 	mov	r2,zero
  80ecd0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80ecd4:	e0bffb17 	ldw	r2,-20(fp)
  80ecd8:	10002226 	beq	r2,zero,80ed64 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80ecdc:	e0bffb17 	ldw	r2,-20(fp)
  80ece0:	10800217 	ldw	r2,8(r2)
  80ece4:	108000cc 	andi	r2,r2,3
  80ece8:	10800060 	cmpeqi	r2,r2,1
  80ecec:	1000181e 	bne	r2,zero,80ed50 <read+0xc0>
        (fd->dev->read))
  80ecf0:	e0bffb17 	ldw	r2,-20(fp)
  80ecf4:	10800017 	ldw	r2,0(r2)
  80ecf8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80ecfc:	10001426 	beq	r2,zero,80ed50 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80ed00:	e0bffb17 	ldw	r2,-20(fp)
  80ed04:	10800017 	ldw	r2,0(r2)
  80ed08:	10800517 	ldw	r2,20(r2)
  80ed0c:	e0ffff17 	ldw	r3,-4(fp)
  80ed10:	180d883a 	mov	r6,r3
  80ed14:	e17ffe17 	ldw	r5,-8(fp)
  80ed18:	e13ffb17 	ldw	r4,-20(fp)
  80ed1c:	103ee83a 	callr	r2
  80ed20:	e0bffc15 	stw	r2,-16(fp)
  80ed24:	e0bffc17 	ldw	r2,-16(fp)
  80ed28:	1000070e 	bge	r2,zero,80ed48 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80ed2c:	080ec540 	call	80ec54 <alt_get_errno>
  80ed30:	1007883a 	mov	r3,r2
  80ed34:	e0bffc17 	ldw	r2,-16(fp)
  80ed38:	0085c83a 	sub	r2,zero,r2
  80ed3c:	18800015 	stw	r2,0(r3)
          return -1;
  80ed40:	00bfffc4 	movi	r2,-1
  80ed44:	00000c06 	br	80ed78 <read+0xe8>
        }
        return rval;
  80ed48:	e0bffc17 	ldw	r2,-16(fp)
  80ed4c:	00000a06 	br	80ed78 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80ed50:	080ec540 	call	80ec54 <alt_get_errno>
  80ed54:	1007883a 	mov	r3,r2
  80ed58:	00800344 	movi	r2,13
  80ed5c:	18800015 	stw	r2,0(r3)
  80ed60:	00000406 	br	80ed74 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80ed64:	080ec540 	call	80ec54 <alt_get_errno>
  80ed68:	1007883a 	mov	r3,r2
  80ed6c:	00801444 	movi	r2,81
  80ed70:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80ed74:	00bfffc4 	movi	r2,-1
}
  80ed78:	e037883a 	mov	sp,fp
  80ed7c:	dfc00117 	ldw	ra,4(sp)
  80ed80:	df000017 	ldw	fp,0(sp)
  80ed84:	dec00204 	addi	sp,sp,8
  80ed88:	f800283a 	ret

0080ed8c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80ed8c:	defffe04 	addi	sp,sp,-8
  80ed90:	df000115 	stw	fp,4(sp)
  80ed94:	df000104 	addi	fp,sp,4
  80ed98:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80ed9c:	e0bfff17 	ldw	r2,-4(fp)
  80eda0:	108000d0 	cmplti	r2,r2,3
  80eda4:	10000d1e 	bne	r2,zero,80eddc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80eda8:	00802074 	movhi	r2,129
  80edac:	1086ec04 	addi	r2,r2,7088
  80edb0:	e0ffff17 	ldw	r3,-4(fp)
  80edb4:	18c00324 	muli	r3,r3,12
  80edb8:	10c5883a 	add	r2,r2,r3
  80edbc:	10800204 	addi	r2,r2,8
  80edc0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80edc4:	00802074 	movhi	r2,129
  80edc8:	1086ec04 	addi	r2,r2,7088
  80edcc:	e0ffff17 	ldw	r3,-4(fp)
  80edd0:	18c00324 	muli	r3,r3,12
  80edd4:	10c5883a 	add	r2,r2,r3
  80edd8:	10000015 	stw	zero,0(r2)
  }
}
  80eddc:	0001883a 	nop
  80ede0:	e037883a 	mov	sp,fp
  80ede4:	df000017 	ldw	fp,0(sp)
  80ede8:	dec00104 	addi	sp,sp,4
  80edec:	f800283a 	ret

0080edf0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80edf0:	defff904 	addi	sp,sp,-28
  80edf4:	df000615 	stw	fp,24(sp)
  80edf8:	df000604 	addi	fp,sp,24
  80edfc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ee00:	0005303a 	rdctl	r2,status
  80ee04:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ee08:	e0fffe17 	ldw	r3,-8(fp)
  80ee0c:	00bfff84 	movi	r2,-2
  80ee10:	1884703a 	and	r2,r3,r2
  80ee14:	1001703a 	wrctl	status,r2
  
  return context;
  80ee18:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80ee1c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80ee20:	d0a00c17 	ldw	r2,-32720(gp)
  80ee24:	10c000c4 	addi	r3,r2,3
  80ee28:	00bfff04 	movi	r2,-4
  80ee2c:	1884703a 	and	r2,r3,r2
  80ee30:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80ee34:	d0e00c17 	ldw	r3,-32720(gp)
  80ee38:	e0bfff17 	ldw	r2,-4(fp)
  80ee3c:	1887883a 	add	r3,r3,r2
  80ee40:	00804034 	movhi	r2,256
  80ee44:	10800004 	addi	r2,r2,0
  80ee48:	10c0062e 	bgeu	r2,r3,80ee64 <sbrk+0x74>
  80ee4c:	e0bffb17 	ldw	r2,-20(fp)
  80ee50:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ee54:	e0bffa17 	ldw	r2,-24(fp)
  80ee58:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80ee5c:	00bfffc4 	movi	r2,-1
  80ee60:	00000b06 	br	80ee90 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80ee64:	d0a00c17 	ldw	r2,-32720(gp)
  80ee68:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80ee6c:	d0e00c17 	ldw	r3,-32720(gp)
  80ee70:	e0bfff17 	ldw	r2,-4(fp)
  80ee74:	1885883a 	add	r2,r3,r2
  80ee78:	d0a00c15 	stw	r2,-32720(gp)
  80ee7c:	e0bffb17 	ldw	r2,-20(fp)
  80ee80:	e0bffc15 	stw	r2,-16(fp)
  80ee84:	e0bffc17 	ldw	r2,-16(fp)
  80ee88:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80ee8c:	e0bffd17 	ldw	r2,-12(fp)
} 
  80ee90:	e037883a 	mov	sp,fp
  80ee94:	df000017 	ldw	fp,0(sp)
  80ee98:	dec00104 	addi	sp,sp,4
  80ee9c:	f800283a 	ret

0080eea0 <alt_get_errno>:
  80eea0:	defffe04 	addi	sp,sp,-8
  80eea4:	dfc00115 	stw	ra,4(sp)
  80eea8:	df000015 	stw	fp,0(sp)
  80eeac:	d839883a 	mov	fp,sp
  80eeb0:	d0a00b17 	ldw	r2,-32724(gp)
  80eeb4:	10000326 	beq	r2,zero,80eec4 <alt_get_errno+0x24>
  80eeb8:	d0a00b17 	ldw	r2,-32724(gp)
  80eebc:	103ee83a 	callr	r2
  80eec0:	00000106 	br	80eec8 <alt_get_errno+0x28>
  80eec4:	d0a6d104 	addi	r2,gp,-25788
  80eec8:	e037883a 	mov	sp,fp
  80eecc:	dfc00117 	ldw	ra,4(sp)
  80eed0:	df000017 	ldw	fp,0(sp)
  80eed4:	dec00204 	addi	sp,sp,8
  80eed8:	f800283a 	ret

0080eedc <times>:
  80eedc:	defffc04 	addi	sp,sp,-16
  80eee0:	dfc00315 	stw	ra,12(sp)
  80eee4:	df000215 	stw	fp,8(sp)
  80eee8:	df000204 	addi	fp,sp,8
  80eeec:	e13fff15 	stw	r4,-4(fp)
  80eef0:	d0a6d717 	ldw	r2,-25764(gp)
  80eef4:	e0bffe15 	stw	r2,-8(fp)
  80eef8:	d0a6d617 	ldw	r2,-25768(gp)
  80eefc:	1000061e 	bne	r2,zero,80ef18 <times+0x3c>
  80ef00:	080eea00 	call	80eea0 <alt_get_errno>
  80ef04:	1007883a 	mov	r3,r2
  80ef08:	00801604 	movi	r2,88
  80ef0c:	18800015 	stw	r2,0(r3)
  80ef10:	0005883a 	mov	r2,zero
  80ef14:	00000a06 	br	80ef40 <times+0x64>
  80ef18:	e0bfff17 	ldw	r2,-4(fp)
  80ef1c:	10000015 	stw	zero,0(r2)
  80ef20:	e0bfff17 	ldw	r2,-4(fp)
  80ef24:	e0fffe17 	ldw	r3,-8(fp)
  80ef28:	10c00115 	stw	r3,4(r2)
  80ef2c:	e0bfff17 	ldw	r2,-4(fp)
  80ef30:	10000215 	stw	zero,8(r2)
  80ef34:	e0bfff17 	ldw	r2,-4(fp)
  80ef38:	10000315 	stw	zero,12(r2)
  80ef3c:	e0bffe17 	ldw	r2,-8(fp)
  80ef40:	e037883a 	mov	sp,fp
  80ef44:	dfc00117 	ldw	ra,4(sp)
  80ef48:	df000017 	ldw	fp,0(sp)
  80ef4c:	dec00204 	addi	sp,sp,8
  80ef50:	f800283a 	ret

0080ef54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ef54:	defffe04 	addi	sp,sp,-8
  80ef58:	dfc00115 	stw	ra,4(sp)
  80ef5c:	df000015 	stw	fp,0(sp)
  80ef60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ef64:	d0a00b17 	ldw	r2,-32724(gp)
  80ef68:	10000326 	beq	r2,zero,80ef78 <alt_get_errno+0x24>
  80ef6c:	d0a00b17 	ldw	r2,-32724(gp)
  80ef70:	103ee83a 	callr	r2
  80ef74:	00000106 	br	80ef7c <alt_get_errno+0x28>
  80ef78:	d0a6d104 	addi	r2,gp,-25788
}
  80ef7c:	e037883a 	mov	sp,fp
  80ef80:	dfc00117 	ldw	ra,4(sp)
  80ef84:	df000017 	ldw	fp,0(sp)
  80ef88:	dec00204 	addi	sp,sp,8
  80ef8c:	f800283a 	ret

0080ef90 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80ef90:	defff904 	addi	sp,sp,-28
  80ef94:	dfc00615 	stw	ra,24(sp)
  80ef98:	df000515 	stw	fp,20(sp)
  80ef9c:	df000504 	addi	fp,sp,20
  80efa0:	e13ffd15 	stw	r4,-12(fp)
  80efa4:	e17ffe15 	stw	r5,-8(fp)
  80efa8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80efac:	e0bffd17 	ldw	r2,-12(fp)
  80efb0:	10000616 	blt	r2,zero,80efcc <write+0x3c>
  80efb4:	e0bffd17 	ldw	r2,-12(fp)
  80efb8:	10c00324 	muli	r3,r2,12
  80efbc:	00802074 	movhi	r2,129
  80efc0:	1086ec04 	addi	r2,r2,7088
  80efc4:	1885883a 	add	r2,r3,r2
  80efc8:	00000106 	br	80efd0 <write+0x40>
  80efcc:	0005883a 	mov	r2,zero
  80efd0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80efd4:	e0bffb17 	ldw	r2,-20(fp)
  80efd8:	10002126 	beq	r2,zero,80f060 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80efdc:	e0bffb17 	ldw	r2,-20(fp)
  80efe0:	10800217 	ldw	r2,8(r2)
  80efe4:	108000cc 	andi	r2,r2,3
  80efe8:	10001826 	beq	r2,zero,80f04c <write+0xbc>
  80efec:	e0bffb17 	ldw	r2,-20(fp)
  80eff0:	10800017 	ldw	r2,0(r2)
  80eff4:	10800617 	ldw	r2,24(r2)
  80eff8:	10001426 	beq	r2,zero,80f04c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80effc:	e0bffb17 	ldw	r2,-20(fp)
  80f000:	10800017 	ldw	r2,0(r2)
  80f004:	10800617 	ldw	r2,24(r2)
  80f008:	e0ffff17 	ldw	r3,-4(fp)
  80f00c:	180d883a 	mov	r6,r3
  80f010:	e17ffe17 	ldw	r5,-8(fp)
  80f014:	e13ffb17 	ldw	r4,-20(fp)
  80f018:	103ee83a 	callr	r2
  80f01c:	e0bffc15 	stw	r2,-16(fp)
  80f020:	e0bffc17 	ldw	r2,-16(fp)
  80f024:	1000070e 	bge	r2,zero,80f044 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80f028:	080ef540 	call	80ef54 <alt_get_errno>
  80f02c:	1007883a 	mov	r3,r2
  80f030:	e0bffc17 	ldw	r2,-16(fp)
  80f034:	0085c83a 	sub	r2,zero,r2
  80f038:	18800015 	stw	r2,0(r3)
        return -1;
  80f03c:	00bfffc4 	movi	r2,-1
  80f040:	00000c06 	br	80f074 <write+0xe4>
      }
      return rval;
  80f044:	e0bffc17 	ldw	r2,-16(fp)
  80f048:	00000a06 	br	80f074 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80f04c:	080ef540 	call	80ef54 <alt_get_errno>
  80f050:	1007883a 	mov	r3,r2
  80f054:	00800344 	movi	r2,13
  80f058:	18800015 	stw	r2,0(r3)
  80f05c:	00000406 	br	80f070 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80f060:	080ef540 	call	80ef54 <alt_get_errno>
  80f064:	1007883a 	mov	r3,r2
  80f068:	00801444 	movi	r2,81
  80f06c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80f070:	00bfffc4 	movi	r2,-1
}
  80f074:	e037883a 	mov	sp,fp
  80f078:	dfc00117 	ldw	ra,4(sp)
  80f07c:	df000017 	ldw	fp,0(sp)
  80f080:	dec00204 	addi	sp,sp,8
  80f084:	f800283a 	ret

0080f088 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80f088:	defffd04 	addi	sp,sp,-12
  80f08c:	dfc00215 	stw	ra,8(sp)
  80f090:	df000115 	stw	fp,4(sp)
  80f094:	df000104 	addi	fp,sp,4
  80f098:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80f09c:	d1600804 	addi	r5,gp,-32736
  80f0a0:	e13fff17 	ldw	r4,-4(fp)
  80f0a4:	080fe640 	call	80fe64 <alt_dev_llist_insert>
}
  80f0a8:	e037883a 	mov	sp,fp
  80f0ac:	dfc00117 	ldw	ra,4(sp)
  80f0b0:	df000017 	ldw	fp,0(sp)
  80f0b4:	dec00204 	addi	sp,sp,8
  80f0b8:	f800283a 	ret

0080f0bc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80f0bc:	defffd04 	addi	sp,sp,-12
  80f0c0:	dfc00215 	stw	ra,8(sp)
  80f0c4:	df000115 	stw	fp,4(sp)
  80f0c8:	df000104 	addi	fp,sp,4
  80f0cc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80f0d0:	08107d40 	call	8107d4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80f0d4:	00800044 	movi	r2,1
  80f0d8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80f0dc:	0001883a 	nop
  80f0e0:	e037883a 	mov	sp,fp
  80f0e4:	dfc00117 	ldw	ra,4(sp)
  80f0e8:	df000017 	ldw	fp,0(sp)
  80f0ec:	dec00204 	addi	sp,sp,8
  80f0f0:	f800283a 	ret

0080f0f4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80f0f4:	defffe04 	addi	sp,sp,-8
  80f0f8:	dfc00115 	stw	ra,4(sp)
  80f0fc:	df000015 	stw	fp,0(sp)
  80f100:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80f104:	01c0fa04 	movi	r7,1000
  80f108:	01800044 	movi	r6,1
  80f10c:	000b883a 	mov	r5,zero
  80f110:	01004034 	movhi	r4,256
  80f114:	21040004 	addi	r4,r4,4096
  80f118:	080fc380 	call	80fc38 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80f11c:	01800404 	movi	r6,16
  80f120:	000b883a 	mov	r5,zero
  80f124:	01002074 	movhi	r4,129
  80f128:	21075604 	addi	r4,r4,7512
  80f12c:	080f2bc0 	call	80f2bc <altera_avalon_jtag_uart_init>
  80f130:	01002074 	movhi	r4,129
  80f134:	21074c04 	addi	r4,r4,7472
  80f138:	080f0880 	call	80f088 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80f13c:	0001883a 	nop
}
  80f140:	0001883a 	nop
  80f144:	e037883a 	mov	sp,fp
  80f148:	dfc00117 	ldw	ra,4(sp)
  80f14c:	df000017 	ldw	fp,0(sp)
  80f150:	dec00204 	addi	sp,sp,8
  80f154:	f800283a 	ret

0080f158 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80f158:	defffa04 	addi	sp,sp,-24
  80f15c:	dfc00515 	stw	ra,20(sp)
  80f160:	df000415 	stw	fp,16(sp)
  80f164:	df000404 	addi	fp,sp,16
  80f168:	e13ffd15 	stw	r4,-12(fp)
  80f16c:	e17ffe15 	stw	r5,-8(fp)
  80f170:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f174:	e0bffd17 	ldw	r2,-12(fp)
  80f178:	10800017 	ldw	r2,0(r2)
  80f17c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80f180:	e0bffc17 	ldw	r2,-16(fp)
  80f184:	10c00a04 	addi	r3,r2,40
  80f188:	e0bffd17 	ldw	r2,-12(fp)
  80f18c:	10800217 	ldw	r2,8(r2)
  80f190:	100f883a 	mov	r7,r2
  80f194:	e1bfff17 	ldw	r6,-4(fp)
  80f198:	e17ffe17 	ldw	r5,-8(fp)
  80f19c:	1809883a 	mov	r4,r3
  80f1a0:	080f7800 	call	80f780 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80f1a4:	e037883a 	mov	sp,fp
  80f1a8:	dfc00117 	ldw	ra,4(sp)
  80f1ac:	df000017 	ldw	fp,0(sp)
  80f1b0:	dec00204 	addi	sp,sp,8
  80f1b4:	f800283a 	ret

0080f1b8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80f1b8:	defffa04 	addi	sp,sp,-24
  80f1bc:	dfc00515 	stw	ra,20(sp)
  80f1c0:	df000415 	stw	fp,16(sp)
  80f1c4:	df000404 	addi	fp,sp,16
  80f1c8:	e13ffd15 	stw	r4,-12(fp)
  80f1cc:	e17ffe15 	stw	r5,-8(fp)
  80f1d0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f1d4:	e0bffd17 	ldw	r2,-12(fp)
  80f1d8:	10800017 	ldw	r2,0(r2)
  80f1dc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80f1e0:	e0bffc17 	ldw	r2,-16(fp)
  80f1e4:	10c00a04 	addi	r3,r2,40
  80f1e8:	e0bffd17 	ldw	r2,-12(fp)
  80f1ec:	10800217 	ldw	r2,8(r2)
  80f1f0:	100f883a 	mov	r7,r2
  80f1f4:	e1bfff17 	ldw	r6,-4(fp)
  80f1f8:	e17ffe17 	ldw	r5,-8(fp)
  80f1fc:	1809883a 	mov	r4,r3
  80f200:	080f99c0 	call	80f99c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80f204:	e037883a 	mov	sp,fp
  80f208:	dfc00117 	ldw	ra,4(sp)
  80f20c:	df000017 	ldw	fp,0(sp)
  80f210:	dec00204 	addi	sp,sp,8
  80f214:	f800283a 	ret

0080f218 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80f218:	defffc04 	addi	sp,sp,-16
  80f21c:	dfc00315 	stw	ra,12(sp)
  80f220:	df000215 	stw	fp,8(sp)
  80f224:	df000204 	addi	fp,sp,8
  80f228:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f22c:	e0bfff17 	ldw	r2,-4(fp)
  80f230:	10800017 	ldw	r2,0(r2)
  80f234:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80f238:	e0bffe17 	ldw	r2,-8(fp)
  80f23c:	10c00a04 	addi	r3,r2,40
  80f240:	e0bfff17 	ldw	r2,-4(fp)
  80f244:	10800217 	ldw	r2,8(r2)
  80f248:	100b883a 	mov	r5,r2
  80f24c:	1809883a 	mov	r4,r3
  80f250:	080f6280 	call	80f628 <altera_avalon_jtag_uart_close>
}
  80f254:	e037883a 	mov	sp,fp
  80f258:	dfc00117 	ldw	ra,4(sp)
  80f25c:	df000017 	ldw	fp,0(sp)
  80f260:	dec00204 	addi	sp,sp,8
  80f264:	f800283a 	ret

0080f268 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80f268:	defffa04 	addi	sp,sp,-24
  80f26c:	dfc00515 	stw	ra,20(sp)
  80f270:	df000415 	stw	fp,16(sp)
  80f274:	df000404 	addi	fp,sp,16
  80f278:	e13ffd15 	stw	r4,-12(fp)
  80f27c:	e17ffe15 	stw	r5,-8(fp)
  80f280:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80f284:	e0bffd17 	ldw	r2,-12(fp)
  80f288:	10800017 	ldw	r2,0(r2)
  80f28c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80f290:	e0bffc17 	ldw	r2,-16(fp)
  80f294:	10800a04 	addi	r2,r2,40
  80f298:	e1bfff17 	ldw	r6,-4(fp)
  80f29c:	e17ffe17 	ldw	r5,-8(fp)
  80f2a0:	1009883a 	mov	r4,r2
  80f2a4:	080f6900 	call	80f690 <altera_avalon_jtag_uart_ioctl>
}
  80f2a8:	e037883a 	mov	sp,fp
  80f2ac:	dfc00117 	ldw	ra,4(sp)
  80f2b0:	df000017 	ldw	fp,0(sp)
  80f2b4:	dec00204 	addi	sp,sp,8
  80f2b8:	f800283a 	ret

0080f2bc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80f2bc:	defffa04 	addi	sp,sp,-24
  80f2c0:	dfc00515 	stw	ra,20(sp)
  80f2c4:	df000415 	stw	fp,16(sp)
  80f2c8:	df000404 	addi	fp,sp,16
  80f2cc:	e13ffd15 	stw	r4,-12(fp)
  80f2d0:	e17ffe15 	stw	r5,-8(fp)
  80f2d4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f2d8:	e0bffd17 	ldw	r2,-12(fp)
  80f2dc:	00c00044 	movi	r3,1
  80f2e0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80f2e4:	e0bffd17 	ldw	r2,-12(fp)
  80f2e8:	10800017 	ldw	r2,0(r2)
  80f2ec:	10800104 	addi	r2,r2,4
  80f2f0:	1007883a 	mov	r3,r2
  80f2f4:	e0bffd17 	ldw	r2,-12(fp)
  80f2f8:	10800817 	ldw	r2,32(r2)
  80f2fc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80f300:	e0bffe17 	ldw	r2,-8(fp)
  80f304:	e0ffff17 	ldw	r3,-4(fp)
  80f308:	d8000015 	stw	zero,0(sp)
  80f30c:	e1fffd17 	ldw	r7,-12(fp)
  80f310:	01802074 	movhi	r6,129
  80f314:	31bcdf04 	addi	r6,r6,-3204
  80f318:	180b883a 	mov	r5,r3
  80f31c:	1009883a 	mov	r4,r2
  80f320:	080fffc0 	call	80fffc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80f324:	e0bffd17 	ldw	r2,-12(fp)
  80f328:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80f32c:	e0bffd17 	ldw	r2,-12(fp)
  80f330:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80f334:	d0e6d617 	ldw	r3,-25768(gp)
  80f338:	e1fffd17 	ldw	r7,-12(fp)
  80f33c:	01802074 	movhi	r6,129
  80f340:	31bd6204 	addi	r6,r6,-2680
  80f344:	180b883a 	mov	r5,r3
  80f348:	1009883a 	mov	r4,r2
  80f34c:	080fcb40 	call	80fcb4 <alt_alarm_start>
  80f350:	1000040e 	bge	r2,zero,80f364 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80f354:	e0fffd17 	ldw	r3,-12(fp)
  80f358:	00a00034 	movhi	r2,32768
  80f35c:	10bfffc4 	addi	r2,r2,-1
  80f360:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80f364:	0001883a 	nop
  80f368:	e037883a 	mov	sp,fp
  80f36c:	dfc00117 	ldw	ra,4(sp)
  80f370:	df000017 	ldw	fp,0(sp)
  80f374:	dec00204 	addi	sp,sp,8
  80f378:	f800283a 	ret

0080f37c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80f37c:	defff804 	addi	sp,sp,-32
  80f380:	df000715 	stw	fp,28(sp)
  80f384:	df000704 	addi	fp,sp,28
  80f388:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80f38c:	e0bfff17 	ldw	r2,-4(fp)
  80f390:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80f394:	e0bffb17 	ldw	r2,-20(fp)
  80f398:	10800017 	ldw	r2,0(r2)
  80f39c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f3a0:	e0bffc17 	ldw	r2,-16(fp)
  80f3a4:	10800104 	addi	r2,r2,4
  80f3a8:	10800037 	ldwio	r2,0(r2)
  80f3ac:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80f3b0:	e0bffd17 	ldw	r2,-12(fp)
  80f3b4:	1080c00c 	andi	r2,r2,768
  80f3b8:	10006d26 	beq	r2,zero,80f570 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80f3bc:	e0bffd17 	ldw	r2,-12(fp)
  80f3c0:	1080400c 	andi	r2,r2,256
  80f3c4:	10003526 	beq	r2,zero,80f49c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80f3c8:	00800074 	movhi	r2,1
  80f3cc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f3d0:	e0bffb17 	ldw	r2,-20(fp)
  80f3d4:	10800a17 	ldw	r2,40(r2)
  80f3d8:	10800044 	addi	r2,r2,1
  80f3dc:	1081ffcc 	andi	r2,r2,2047
  80f3e0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80f3e4:	e0bffb17 	ldw	r2,-20(fp)
  80f3e8:	10c00b17 	ldw	r3,44(r2)
  80f3ec:	e0bffe17 	ldw	r2,-8(fp)
  80f3f0:	18801526 	beq	r3,r2,80f448 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80f3f4:	e0bffc17 	ldw	r2,-16(fp)
  80f3f8:	10800037 	ldwio	r2,0(r2)
  80f3fc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80f400:	e0bff917 	ldw	r2,-28(fp)
  80f404:	10a0000c 	andi	r2,r2,32768
  80f408:	10001126 	beq	r2,zero,80f450 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80f40c:	e0bffb17 	ldw	r2,-20(fp)
  80f410:	10800a17 	ldw	r2,40(r2)
  80f414:	e0fff917 	ldw	r3,-28(fp)
  80f418:	1809883a 	mov	r4,r3
  80f41c:	e0fffb17 	ldw	r3,-20(fp)
  80f420:	1885883a 	add	r2,r3,r2
  80f424:	10800e04 	addi	r2,r2,56
  80f428:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f42c:	e0bffb17 	ldw	r2,-20(fp)
  80f430:	10800a17 	ldw	r2,40(r2)
  80f434:	10800044 	addi	r2,r2,1
  80f438:	10c1ffcc 	andi	r3,r2,2047
  80f43c:	e0bffb17 	ldw	r2,-20(fp)
  80f440:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80f444:	003fe206 	br	80f3d0 <__alt_data_end+0xff80f3d0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80f448:	0001883a 	nop
  80f44c:	00000106 	br	80f454 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80f450:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80f454:	e0bff917 	ldw	r2,-28(fp)
  80f458:	10bfffec 	andhi	r2,r2,65535
  80f45c:	10000f26 	beq	r2,zero,80f49c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f460:	e0bffb17 	ldw	r2,-20(fp)
  80f464:	10c00817 	ldw	r3,32(r2)
  80f468:	00bfff84 	movi	r2,-2
  80f46c:	1886703a 	and	r3,r3,r2
  80f470:	e0bffb17 	ldw	r2,-20(fp)
  80f474:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80f478:	e0bffc17 	ldw	r2,-16(fp)
  80f47c:	10800104 	addi	r2,r2,4
  80f480:	1007883a 	mov	r3,r2
  80f484:	e0bffb17 	ldw	r2,-20(fp)
  80f488:	10800817 	ldw	r2,32(r2)
  80f48c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f490:	e0bffc17 	ldw	r2,-16(fp)
  80f494:	10800104 	addi	r2,r2,4
  80f498:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80f49c:	e0bffd17 	ldw	r2,-12(fp)
  80f4a0:	1080800c 	andi	r2,r2,512
  80f4a4:	103fbe26 	beq	r2,zero,80f3a0 <__alt_data_end+0xff80f3a0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80f4a8:	e0bffd17 	ldw	r2,-12(fp)
  80f4ac:	1004d43a 	srli	r2,r2,16
  80f4b0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f4b4:	00001406 	br	80f508 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80f4b8:	e0bffc17 	ldw	r2,-16(fp)
  80f4bc:	e0fffb17 	ldw	r3,-20(fp)
  80f4c0:	18c00d17 	ldw	r3,52(r3)
  80f4c4:	e13ffb17 	ldw	r4,-20(fp)
  80f4c8:	20c7883a 	add	r3,r4,r3
  80f4cc:	18c20e04 	addi	r3,r3,2104
  80f4d0:	18c00003 	ldbu	r3,0(r3)
  80f4d4:	18c03fcc 	andi	r3,r3,255
  80f4d8:	18c0201c 	xori	r3,r3,128
  80f4dc:	18ffe004 	addi	r3,r3,-128
  80f4e0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f4e4:	e0bffb17 	ldw	r2,-20(fp)
  80f4e8:	10800d17 	ldw	r2,52(r2)
  80f4ec:	10800044 	addi	r2,r2,1
  80f4f0:	10c1ffcc 	andi	r3,r2,2047
  80f4f4:	e0bffb17 	ldw	r2,-20(fp)
  80f4f8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80f4fc:	e0bffa17 	ldw	r2,-24(fp)
  80f500:	10bfffc4 	addi	r2,r2,-1
  80f504:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f508:	e0bffa17 	ldw	r2,-24(fp)
  80f50c:	10000526 	beq	r2,zero,80f524 <altera_avalon_jtag_uart_irq+0x1a8>
  80f510:	e0bffb17 	ldw	r2,-20(fp)
  80f514:	10c00d17 	ldw	r3,52(r2)
  80f518:	e0bffb17 	ldw	r2,-20(fp)
  80f51c:	10800c17 	ldw	r2,48(r2)
  80f520:	18bfe51e 	bne	r3,r2,80f4b8 <__alt_data_end+0xff80f4b8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80f524:	e0bffa17 	ldw	r2,-24(fp)
  80f528:	103f9d26 	beq	r2,zero,80f3a0 <__alt_data_end+0xff80f3a0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f52c:	e0bffb17 	ldw	r2,-20(fp)
  80f530:	10c00817 	ldw	r3,32(r2)
  80f534:	00bfff44 	movi	r2,-3
  80f538:	1886703a 	and	r3,r3,r2
  80f53c:	e0bffb17 	ldw	r2,-20(fp)
  80f540:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f544:	e0bffb17 	ldw	r2,-20(fp)
  80f548:	10800017 	ldw	r2,0(r2)
  80f54c:	10800104 	addi	r2,r2,4
  80f550:	1007883a 	mov	r3,r2
  80f554:	e0bffb17 	ldw	r2,-20(fp)
  80f558:	10800817 	ldw	r2,32(r2)
  80f55c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f560:	e0bffc17 	ldw	r2,-16(fp)
  80f564:	10800104 	addi	r2,r2,4
  80f568:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80f56c:	003f8c06 	br	80f3a0 <__alt_data_end+0xff80f3a0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80f570:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80f574:	0001883a 	nop
  80f578:	e037883a 	mov	sp,fp
  80f57c:	df000017 	ldw	fp,0(sp)
  80f580:	dec00104 	addi	sp,sp,4
  80f584:	f800283a 	ret

0080f588 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80f588:	defff804 	addi	sp,sp,-32
  80f58c:	df000715 	stw	fp,28(sp)
  80f590:	df000704 	addi	fp,sp,28
  80f594:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80f598:	e0bffb17 	ldw	r2,-20(fp)
  80f59c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80f5a0:	e0bff917 	ldw	r2,-28(fp)
  80f5a4:	10800017 	ldw	r2,0(r2)
  80f5a8:	10800104 	addi	r2,r2,4
  80f5ac:	10800037 	ldwio	r2,0(r2)
  80f5b0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80f5b4:	e0bffa17 	ldw	r2,-24(fp)
  80f5b8:	1081000c 	andi	r2,r2,1024
  80f5bc:	10000b26 	beq	r2,zero,80f5ec <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80f5c0:	e0bff917 	ldw	r2,-28(fp)
  80f5c4:	10800017 	ldw	r2,0(r2)
  80f5c8:	10800104 	addi	r2,r2,4
  80f5cc:	1007883a 	mov	r3,r2
  80f5d0:	e0bff917 	ldw	r2,-28(fp)
  80f5d4:	10800817 	ldw	r2,32(r2)
  80f5d8:	10810014 	ori	r2,r2,1024
  80f5dc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80f5e0:	e0bff917 	ldw	r2,-28(fp)
  80f5e4:	10000915 	stw	zero,36(r2)
  80f5e8:	00000a06 	br	80f614 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80f5ec:	e0bff917 	ldw	r2,-28(fp)
  80f5f0:	10c00917 	ldw	r3,36(r2)
  80f5f4:	00a00034 	movhi	r2,32768
  80f5f8:	10bfff04 	addi	r2,r2,-4
  80f5fc:	10c00536 	bltu	r2,r3,80f614 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80f600:	e0bff917 	ldw	r2,-28(fp)
  80f604:	10800917 	ldw	r2,36(r2)
  80f608:	10c00044 	addi	r3,r2,1
  80f60c:	e0bff917 	ldw	r2,-28(fp)
  80f610:	10c00915 	stw	r3,36(r2)
  80f614:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80f618:	e037883a 	mov	sp,fp
  80f61c:	df000017 	ldw	fp,0(sp)
  80f620:	dec00104 	addi	sp,sp,4
  80f624:	f800283a 	ret

0080f628 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80f628:	defffd04 	addi	sp,sp,-12
  80f62c:	df000215 	stw	fp,8(sp)
  80f630:	df000204 	addi	fp,sp,8
  80f634:	e13ffe15 	stw	r4,-8(fp)
  80f638:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f63c:	00000506 	br	80f654 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80f640:	e0bfff17 	ldw	r2,-4(fp)
  80f644:	1090000c 	andi	r2,r2,16384
  80f648:	10000226 	beq	r2,zero,80f654 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80f64c:	00bffd44 	movi	r2,-11
  80f650:	00000b06 	br	80f680 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f654:	e0bffe17 	ldw	r2,-8(fp)
  80f658:	10c00d17 	ldw	r3,52(r2)
  80f65c:	e0bffe17 	ldw	r2,-8(fp)
  80f660:	10800c17 	ldw	r2,48(r2)
  80f664:	18800526 	beq	r3,r2,80f67c <altera_avalon_jtag_uart_close+0x54>
  80f668:	e0bffe17 	ldw	r2,-8(fp)
  80f66c:	10c00917 	ldw	r3,36(r2)
  80f670:	e0bffe17 	ldw	r2,-8(fp)
  80f674:	10800117 	ldw	r2,4(r2)
  80f678:	18bff136 	bltu	r3,r2,80f640 <__alt_data_end+0xff80f640>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80f67c:	0005883a 	mov	r2,zero
}
  80f680:	e037883a 	mov	sp,fp
  80f684:	df000017 	ldw	fp,0(sp)
  80f688:	dec00104 	addi	sp,sp,4
  80f68c:	f800283a 	ret

0080f690 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80f690:	defffa04 	addi	sp,sp,-24
  80f694:	df000515 	stw	fp,20(sp)
  80f698:	df000504 	addi	fp,sp,20
  80f69c:	e13ffd15 	stw	r4,-12(fp)
  80f6a0:	e17ffe15 	stw	r5,-8(fp)
  80f6a4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80f6a8:	00bff9c4 	movi	r2,-25
  80f6ac:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80f6b0:	e0bffe17 	ldw	r2,-8(fp)
  80f6b4:	10da8060 	cmpeqi	r3,r2,27137
  80f6b8:	1800031e 	bne	r3,zero,80f6c8 <altera_avalon_jtag_uart_ioctl+0x38>
  80f6bc:	109a80a0 	cmpeqi	r2,r2,27138
  80f6c0:	1000181e 	bne	r2,zero,80f724 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80f6c4:	00002906 	br	80f76c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80f6c8:	e0bffd17 	ldw	r2,-12(fp)
  80f6cc:	10c00117 	ldw	r3,4(r2)
  80f6d0:	00a00034 	movhi	r2,32768
  80f6d4:	10bfffc4 	addi	r2,r2,-1
  80f6d8:	18802126 	beq	r3,r2,80f760 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80f6dc:	e0bfff17 	ldw	r2,-4(fp)
  80f6e0:	10800017 	ldw	r2,0(r2)
  80f6e4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80f6e8:	e0bffc17 	ldw	r2,-16(fp)
  80f6ec:	10800090 	cmplti	r2,r2,2
  80f6f0:	1000061e 	bne	r2,zero,80f70c <altera_avalon_jtag_uart_ioctl+0x7c>
  80f6f4:	e0fffc17 	ldw	r3,-16(fp)
  80f6f8:	00a00034 	movhi	r2,32768
  80f6fc:	10bfffc4 	addi	r2,r2,-1
  80f700:	18800226 	beq	r3,r2,80f70c <altera_avalon_jtag_uart_ioctl+0x7c>
  80f704:	e0bffc17 	ldw	r2,-16(fp)
  80f708:	00000206 	br	80f714 <altera_avalon_jtag_uart_ioctl+0x84>
  80f70c:	00a00034 	movhi	r2,32768
  80f710:	10bfff84 	addi	r2,r2,-2
  80f714:	e0fffd17 	ldw	r3,-12(fp)
  80f718:	18800115 	stw	r2,4(r3)
      rc = 0;
  80f71c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80f720:	00000f06 	br	80f760 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80f724:	e0bffd17 	ldw	r2,-12(fp)
  80f728:	10c00117 	ldw	r3,4(r2)
  80f72c:	00a00034 	movhi	r2,32768
  80f730:	10bfffc4 	addi	r2,r2,-1
  80f734:	18800c26 	beq	r3,r2,80f768 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80f738:	e0bffd17 	ldw	r2,-12(fp)
  80f73c:	10c00917 	ldw	r3,36(r2)
  80f740:	e0bffd17 	ldw	r2,-12(fp)
  80f744:	10800117 	ldw	r2,4(r2)
  80f748:	1885803a 	cmpltu	r2,r3,r2
  80f74c:	10c03fcc 	andi	r3,r2,255
  80f750:	e0bfff17 	ldw	r2,-4(fp)
  80f754:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80f758:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80f75c:	00000206 	br	80f768 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80f760:	0001883a 	nop
  80f764:	00000106 	br	80f76c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80f768:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80f76c:	e0bffb17 	ldw	r2,-20(fp)
}
  80f770:	e037883a 	mov	sp,fp
  80f774:	df000017 	ldw	fp,0(sp)
  80f778:	dec00104 	addi	sp,sp,4
  80f77c:	f800283a 	ret

0080f780 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80f780:	defff304 	addi	sp,sp,-52
  80f784:	dfc00c15 	stw	ra,48(sp)
  80f788:	df000b15 	stw	fp,44(sp)
  80f78c:	df000b04 	addi	fp,sp,44
  80f790:	e13ffc15 	stw	r4,-16(fp)
  80f794:	e17ffd15 	stw	r5,-12(fp)
  80f798:	e1bffe15 	stw	r6,-8(fp)
  80f79c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80f7a0:	e0bffd17 	ldw	r2,-12(fp)
  80f7a4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f7a8:	00004706 	br	80f8c8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80f7ac:	e0bffc17 	ldw	r2,-16(fp)
  80f7b0:	10800a17 	ldw	r2,40(r2)
  80f7b4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80f7b8:	e0bffc17 	ldw	r2,-16(fp)
  80f7bc:	10800b17 	ldw	r2,44(r2)
  80f7c0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80f7c4:	e0fff717 	ldw	r3,-36(fp)
  80f7c8:	e0bff817 	ldw	r2,-32(fp)
  80f7cc:	18800536 	bltu	r3,r2,80f7e4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80f7d0:	e0fff717 	ldw	r3,-36(fp)
  80f7d4:	e0bff817 	ldw	r2,-32(fp)
  80f7d8:	1885c83a 	sub	r2,r3,r2
  80f7dc:	e0bff615 	stw	r2,-40(fp)
  80f7e0:	00000406 	br	80f7f4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80f7e4:	00c20004 	movi	r3,2048
  80f7e8:	e0bff817 	ldw	r2,-32(fp)
  80f7ec:	1885c83a 	sub	r2,r3,r2
  80f7f0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80f7f4:	e0bff617 	ldw	r2,-40(fp)
  80f7f8:	10001e26 	beq	r2,zero,80f874 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80f7fc:	e0fffe17 	ldw	r3,-8(fp)
  80f800:	e0bff617 	ldw	r2,-40(fp)
  80f804:	1880022e 	bgeu	r3,r2,80f810 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80f808:	e0bffe17 	ldw	r2,-8(fp)
  80f80c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80f810:	e0bffc17 	ldw	r2,-16(fp)
  80f814:	10c00e04 	addi	r3,r2,56
  80f818:	e0bff817 	ldw	r2,-32(fp)
  80f81c:	1885883a 	add	r2,r3,r2
  80f820:	e1bff617 	ldw	r6,-40(fp)
  80f824:	100b883a 	mov	r5,r2
  80f828:	e13ff517 	ldw	r4,-44(fp)
  80f82c:	0808bd00 	call	808bd0 <memcpy>
      ptr   += n;
  80f830:	e0fff517 	ldw	r3,-44(fp)
  80f834:	e0bff617 	ldw	r2,-40(fp)
  80f838:	1885883a 	add	r2,r3,r2
  80f83c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80f840:	e0fffe17 	ldw	r3,-8(fp)
  80f844:	e0bff617 	ldw	r2,-40(fp)
  80f848:	1885c83a 	sub	r2,r3,r2
  80f84c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f850:	e0fff817 	ldw	r3,-32(fp)
  80f854:	e0bff617 	ldw	r2,-40(fp)
  80f858:	1885883a 	add	r2,r3,r2
  80f85c:	10c1ffcc 	andi	r3,r2,2047
  80f860:	e0bffc17 	ldw	r2,-16(fp)
  80f864:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80f868:	e0bffe17 	ldw	r2,-8(fp)
  80f86c:	00bfcf16 	blt	zero,r2,80f7ac <__alt_data_end+0xff80f7ac>
  80f870:	00000106 	br	80f878 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80f874:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80f878:	e0fff517 	ldw	r3,-44(fp)
  80f87c:	e0bffd17 	ldw	r2,-12(fp)
  80f880:	1880141e 	bne	r3,r2,80f8d4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80f884:	e0bfff17 	ldw	r2,-4(fp)
  80f888:	1090000c 	andi	r2,r2,16384
  80f88c:	1000131e 	bne	r2,zero,80f8dc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80f890:	0001883a 	nop
  80f894:	e0bffc17 	ldw	r2,-16(fp)
  80f898:	10c00a17 	ldw	r3,40(r2)
  80f89c:	e0bff717 	ldw	r2,-36(fp)
  80f8a0:	1880051e 	bne	r3,r2,80f8b8 <altera_avalon_jtag_uart_read+0x138>
  80f8a4:	e0bffc17 	ldw	r2,-16(fp)
  80f8a8:	10c00917 	ldw	r3,36(r2)
  80f8ac:	e0bffc17 	ldw	r2,-16(fp)
  80f8b0:	10800117 	ldw	r2,4(r2)
  80f8b4:	18bff736 	bltu	r3,r2,80f894 <__alt_data_end+0xff80f894>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80f8b8:	e0bffc17 	ldw	r2,-16(fp)
  80f8bc:	10c00a17 	ldw	r3,40(r2)
  80f8c0:	e0bff717 	ldw	r2,-36(fp)
  80f8c4:	18800726 	beq	r3,r2,80f8e4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f8c8:	e0bffe17 	ldw	r2,-8(fp)
  80f8cc:	00bfb716 	blt	zero,r2,80f7ac <__alt_data_end+0xff80f7ac>
  80f8d0:	00000506 	br	80f8e8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80f8d4:	0001883a 	nop
  80f8d8:	00000306 	br	80f8e8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80f8dc:	0001883a 	nop
  80f8e0:	00000106 	br	80f8e8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80f8e4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80f8e8:	e0fff517 	ldw	r3,-44(fp)
  80f8ec:	e0bffd17 	ldw	r2,-12(fp)
  80f8f0:	18801826 	beq	r3,r2,80f954 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f8f4:	0005303a 	rdctl	r2,status
  80f8f8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f8fc:	e0fffb17 	ldw	r3,-20(fp)
  80f900:	00bfff84 	movi	r2,-2
  80f904:	1884703a 	and	r2,r3,r2
  80f908:	1001703a 	wrctl	status,r2
  
  return context;
  80f90c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80f910:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f914:	e0bffc17 	ldw	r2,-16(fp)
  80f918:	10800817 	ldw	r2,32(r2)
  80f91c:	10c00054 	ori	r3,r2,1
  80f920:	e0bffc17 	ldw	r2,-16(fp)
  80f924:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f928:	e0bffc17 	ldw	r2,-16(fp)
  80f92c:	10800017 	ldw	r2,0(r2)
  80f930:	10800104 	addi	r2,r2,4
  80f934:	1007883a 	mov	r3,r2
  80f938:	e0bffc17 	ldw	r2,-16(fp)
  80f93c:	10800817 	ldw	r2,32(r2)
  80f940:	18800035 	stwio	r2,0(r3)
  80f944:	e0bffa17 	ldw	r2,-24(fp)
  80f948:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f94c:	e0bff917 	ldw	r2,-28(fp)
  80f950:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80f954:	e0fff517 	ldw	r3,-44(fp)
  80f958:	e0bffd17 	ldw	r2,-12(fp)
  80f95c:	18800426 	beq	r3,r2,80f970 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80f960:	e0fff517 	ldw	r3,-44(fp)
  80f964:	e0bffd17 	ldw	r2,-12(fp)
  80f968:	1885c83a 	sub	r2,r3,r2
  80f96c:	00000606 	br	80f988 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80f970:	e0bfff17 	ldw	r2,-4(fp)
  80f974:	1090000c 	andi	r2,r2,16384
  80f978:	10000226 	beq	r2,zero,80f984 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80f97c:	00bffd44 	movi	r2,-11
  80f980:	00000106 	br	80f988 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80f984:	00bffec4 	movi	r2,-5
}
  80f988:	e037883a 	mov	sp,fp
  80f98c:	dfc00117 	ldw	ra,4(sp)
  80f990:	df000017 	ldw	fp,0(sp)
  80f994:	dec00204 	addi	sp,sp,8
  80f998:	f800283a 	ret

0080f99c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80f99c:	defff304 	addi	sp,sp,-52
  80f9a0:	dfc00c15 	stw	ra,48(sp)
  80f9a4:	df000b15 	stw	fp,44(sp)
  80f9a8:	df000b04 	addi	fp,sp,44
  80f9ac:	e13ffc15 	stw	r4,-16(fp)
  80f9b0:	e17ffd15 	stw	r5,-12(fp)
  80f9b4:	e1bffe15 	stw	r6,-8(fp)
  80f9b8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80f9bc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80f9c0:	e0bffd17 	ldw	r2,-12(fp)
  80f9c4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f9c8:	00003706 	br	80faa8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80f9cc:	e0bffc17 	ldw	r2,-16(fp)
  80f9d0:	10800c17 	ldw	r2,48(r2)
  80f9d4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80f9d8:	e0bffc17 	ldw	r2,-16(fp)
  80f9dc:	10800d17 	ldw	r2,52(r2)
  80f9e0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80f9e4:	e0fff917 	ldw	r3,-28(fp)
  80f9e8:	e0bff517 	ldw	r2,-44(fp)
  80f9ec:	1880062e 	bgeu	r3,r2,80fa08 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f9f0:	e0fff517 	ldw	r3,-44(fp)
  80f9f4:	e0bff917 	ldw	r2,-28(fp)
  80f9f8:	1885c83a 	sub	r2,r3,r2
  80f9fc:	10bfffc4 	addi	r2,r2,-1
  80fa00:	e0bff615 	stw	r2,-40(fp)
  80fa04:	00000b06 	br	80fa34 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80fa08:	e0bff517 	ldw	r2,-44(fp)
  80fa0c:	10000526 	beq	r2,zero,80fa24 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80fa10:	00c20004 	movi	r3,2048
  80fa14:	e0bff917 	ldw	r2,-28(fp)
  80fa18:	1885c83a 	sub	r2,r3,r2
  80fa1c:	e0bff615 	stw	r2,-40(fp)
  80fa20:	00000406 	br	80fa34 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80fa24:	00c1ffc4 	movi	r3,2047
  80fa28:	e0bff917 	ldw	r2,-28(fp)
  80fa2c:	1885c83a 	sub	r2,r3,r2
  80fa30:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80fa34:	e0bff617 	ldw	r2,-40(fp)
  80fa38:	10001e26 	beq	r2,zero,80fab4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80fa3c:	e0fffe17 	ldw	r3,-8(fp)
  80fa40:	e0bff617 	ldw	r2,-40(fp)
  80fa44:	1880022e 	bgeu	r3,r2,80fa50 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80fa48:	e0bffe17 	ldw	r2,-8(fp)
  80fa4c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80fa50:	e0bffc17 	ldw	r2,-16(fp)
  80fa54:	10c20e04 	addi	r3,r2,2104
  80fa58:	e0bff917 	ldw	r2,-28(fp)
  80fa5c:	1885883a 	add	r2,r3,r2
  80fa60:	e1bff617 	ldw	r6,-40(fp)
  80fa64:	e17ffd17 	ldw	r5,-12(fp)
  80fa68:	1009883a 	mov	r4,r2
  80fa6c:	0808bd00 	call	808bd0 <memcpy>
      ptr   += n;
  80fa70:	e0fffd17 	ldw	r3,-12(fp)
  80fa74:	e0bff617 	ldw	r2,-40(fp)
  80fa78:	1885883a 	add	r2,r3,r2
  80fa7c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80fa80:	e0fffe17 	ldw	r3,-8(fp)
  80fa84:	e0bff617 	ldw	r2,-40(fp)
  80fa88:	1885c83a 	sub	r2,r3,r2
  80fa8c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80fa90:	e0fff917 	ldw	r3,-28(fp)
  80fa94:	e0bff617 	ldw	r2,-40(fp)
  80fa98:	1885883a 	add	r2,r3,r2
  80fa9c:	10c1ffcc 	andi	r3,r2,2047
  80faa0:	e0bffc17 	ldw	r2,-16(fp)
  80faa4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80faa8:	e0bffe17 	ldw	r2,-8(fp)
  80faac:	00bfc716 	blt	zero,r2,80f9cc <__alt_data_end+0xff80f9cc>
  80fab0:	00000106 	br	80fab8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80fab4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fab8:	0005303a 	rdctl	r2,status
  80fabc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fac0:	e0fffb17 	ldw	r3,-20(fp)
  80fac4:	00bfff84 	movi	r2,-2
  80fac8:	1884703a 	and	r2,r3,r2
  80facc:	1001703a 	wrctl	status,r2
  
  return context;
  80fad0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80fad4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80fad8:	e0bffc17 	ldw	r2,-16(fp)
  80fadc:	10800817 	ldw	r2,32(r2)
  80fae0:	10c00094 	ori	r3,r2,2
  80fae4:	e0bffc17 	ldw	r2,-16(fp)
  80fae8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80faec:	e0bffc17 	ldw	r2,-16(fp)
  80faf0:	10800017 	ldw	r2,0(r2)
  80faf4:	10800104 	addi	r2,r2,4
  80faf8:	1007883a 	mov	r3,r2
  80fafc:	e0bffc17 	ldw	r2,-16(fp)
  80fb00:	10800817 	ldw	r2,32(r2)
  80fb04:	18800035 	stwio	r2,0(r3)
  80fb08:	e0bffa17 	ldw	r2,-24(fp)
  80fb0c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fb10:	e0bff817 	ldw	r2,-32(fp)
  80fb14:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80fb18:	e0bffe17 	ldw	r2,-8(fp)
  80fb1c:	0080100e 	bge	zero,r2,80fb60 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80fb20:	e0bfff17 	ldw	r2,-4(fp)
  80fb24:	1090000c 	andi	r2,r2,16384
  80fb28:	1000101e 	bne	r2,zero,80fb6c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80fb2c:	0001883a 	nop
  80fb30:	e0bffc17 	ldw	r2,-16(fp)
  80fb34:	10c00d17 	ldw	r3,52(r2)
  80fb38:	e0bff517 	ldw	r2,-44(fp)
  80fb3c:	1880051e 	bne	r3,r2,80fb54 <altera_avalon_jtag_uart_write+0x1b8>
  80fb40:	e0bffc17 	ldw	r2,-16(fp)
  80fb44:	10c00917 	ldw	r3,36(r2)
  80fb48:	e0bffc17 	ldw	r2,-16(fp)
  80fb4c:	10800117 	ldw	r2,4(r2)
  80fb50:	18bff736 	bltu	r3,r2,80fb30 <__alt_data_end+0xff80fb30>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80fb54:	e0bffc17 	ldw	r2,-16(fp)
  80fb58:	10800917 	ldw	r2,36(r2)
  80fb5c:	1000051e 	bne	r2,zero,80fb74 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80fb60:	e0bffe17 	ldw	r2,-8(fp)
  80fb64:	00bfd016 	blt	zero,r2,80faa8 <__alt_data_end+0xff80faa8>
  80fb68:	00000306 	br	80fb78 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80fb6c:	0001883a 	nop
  80fb70:	00000106 	br	80fb78 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80fb74:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80fb78:	e0fffd17 	ldw	r3,-12(fp)
  80fb7c:	e0bff717 	ldw	r2,-36(fp)
  80fb80:	18800426 	beq	r3,r2,80fb94 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80fb84:	e0fffd17 	ldw	r3,-12(fp)
  80fb88:	e0bff717 	ldw	r2,-36(fp)
  80fb8c:	1885c83a 	sub	r2,r3,r2
  80fb90:	00000606 	br	80fbac <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80fb94:	e0bfff17 	ldw	r2,-4(fp)
  80fb98:	1090000c 	andi	r2,r2,16384
  80fb9c:	10000226 	beq	r2,zero,80fba8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80fba0:	00bffd44 	movi	r2,-11
  80fba4:	00000106 	br	80fbac <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80fba8:	00bffec4 	movi	r2,-5
}
  80fbac:	e037883a 	mov	sp,fp
  80fbb0:	dfc00117 	ldw	ra,4(sp)
  80fbb4:	df000017 	ldw	fp,0(sp)
  80fbb8:	dec00204 	addi	sp,sp,8
  80fbbc:	f800283a 	ret

0080fbc0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80fbc0:	defffa04 	addi	sp,sp,-24
  80fbc4:	dfc00515 	stw	ra,20(sp)
  80fbc8:	df000415 	stw	fp,16(sp)
  80fbcc:	df000404 	addi	fp,sp,16
  80fbd0:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80fbd4:	0007883a 	mov	r3,zero
  80fbd8:	e0bfff17 	ldw	r2,-4(fp)
  80fbdc:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80fbe0:	e0bfff17 	ldw	r2,-4(fp)
  80fbe4:	10800104 	addi	r2,r2,4
  80fbe8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fbec:	0005303a 	rdctl	r2,status
  80fbf0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fbf4:	e0fffd17 	ldw	r3,-12(fp)
  80fbf8:	00bfff84 	movi	r2,-2
  80fbfc:	1884703a 	and	r2,r3,r2
  80fc00:	1001703a 	wrctl	status,r2
  
  return context;
  80fc04:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80fc08:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80fc0c:	08106cc0 	call	8106cc <alt_tick>
  80fc10:	e0bffc17 	ldw	r2,-16(fp)
  80fc14:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fc18:	e0bffe17 	ldw	r2,-8(fp)
  80fc1c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80fc20:	0001883a 	nop
  80fc24:	e037883a 	mov	sp,fp
  80fc28:	dfc00117 	ldw	ra,4(sp)
  80fc2c:	df000017 	ldw	fp,0(sp)
  80fc30:	dec00204 	addi	sp,sp,8
  80fc34:	f800283a 	ret

0080fc38 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80fc38:	defff804 	addi	sp,sp,-32
  80fc3c:	dfc00715 	stw	ra,28(sp)
  80fc40:	df000615 	stw	fp,24(sp)
  80fc44:	df000604 	addi	fp,sp,24
  80fc48:	e13ffc15 	stw	r4,-16(fp)
  80fc4c:	e17ffd15 	stw	r5,-12(fp)
  80fc50:	e1bffe15 	stw	r6,-8(fp)
  80fc54:	e1ffff15 	stw	r7,-4(fp)
  80fc58:	e0bfff17 	ldw	r2,-4(fp)
  80fc5c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80fc60:	d0a6d617 	ldw	r2,-25768(gp)
  80fc64:	1000021e 	bne	r2,zero,80fc70 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  80fc68:	e0bffb17 	ldw	r2,-20(fp)
  80fc6c:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80fc70:	e0bffc17 	ldw	r2,-16(fp)
  80fc74:	10800104 	addi	r2,r2,4
  80fc78:	00c001c4 	movi	r3,7
  80fc7c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80fc80:	d8000015 	stw	zero,0(sp)
  80fc84:	e1fffc17 	ldw	r7,-16(fp)
  80fc88:	01802074 	movhi	r6,129
  80fc8c:	31bef004 	addi	r6,r6,-1088
  80fc90:	e17ffe17 	ldw	r5,-8(fp)
  80fc94:	e13ffd17 	ldw	r4,-12(fp)
  80fc98:	080fffc0 	call	80fffc <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80fc9c:	0001883a 	nop
  80fca0:	e037883a 	mov	sp,fp
  80fca4:	dfc00117 	ldw	ra,4(sp)
  80fca8:	df000017 	ldw	fp,0(sp)
  80fcac:	dec00204 	addi	sp,sp,8
  80fcb0:	f800283a 	ret

0080fcb4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80fcb4:	defff504 	addi	sp,sp,-44
  80fcb8:	df000a15 	stw	fp,40(sp)
  80fcbc:	df000a04 	addi	fp,sp,40
  80fcc0:	e13ffc15 	stw	r4,-16(fp)
  80fcc4:	e17ffd15 	stw	r5,-12(fp)
  80fcc8:	e1bffe15 	stw	r6,-8(fp)
  80fccc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80fcd0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80fcd4:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  80fcd8:	10003c26 	beq	r2,zero,80fdcc <alt_alarm_start+0x118>
  {
    if (alarm)
  80fcdc:	e0bffc17 	ldw	r2,-16(fp)
  80fce0:	10003826 	beq	r2,zero,80fdc4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80fce4:	e0bffc17 	ldw	r2,-16(fp)
  80fce8:	e0fffe17 	ldw	r3,-8(fp)
  80fcec:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80fcf0:	e0bffc17 	ldw	r2,-16(fp)
  80fcf4:	e0ffff17 	ldw	r3,-4(fp)
  80fcf8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fcfc:	0005303a 	rdctl	r2,status
  80fd00:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fd04:	e0fff917 	ldw	r3,-28(fp)
  80fd08:	00bfff84 	movi	r2,-2
  80fd0c:	1884703a 	and	r2,r3,r2
  80fd10:	1001703a 	wrctl	status,r2
  
  return context;
  80fd14:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80fd18:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80fd1c:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  80fd20:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80fd24:	e0fffd17 	ldw	r3,-12(fp)
  80fd28:	e0bff617 	ldw	r2,-40(fp)
  80fd2c:	1885883a 	add	r2,r3,r2
  80fd30:	10c00044 	addi	r3,r2,1
  80fd34:	e0bffc17 	ldw	r2,-16(fp)
  80fd38:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80fd3c:	e0bffc17 	ldw	r2,-16(fp)
  80fd40:	10c00217 	ldw	r3,8(r2)
  80fd44:	e0bff617 	ldw	r2,-40(fp)
  80fd48:	1880042e 	bgeu	r3,r2,80fd5c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80fd4c:	e0bffc17 	ldw	r2,-16(fp)
  80fd50:	00c00044 	movi	r3,1
  80fd54:	10c00405 	stb	r3,16(r2)
  80fd58:	00000206 	br	80fd64 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80fd5c:	e0bffc17 	ldw	r2,-16(fp)
  80fd60:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80fd64:	e0bffc17 	ldw	r2,-16(fp)
  80fd68:	d0e00e04 	addi	r3,gp,-32712
  80fd6c:	e0fffa15 	stw	r3,-24(fp)
  80fd70:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80fd74:	e0bffb17 	ldw	r2,-20(fp)
  80fd78:	e0fffa17 	ldw	r3,-24(fp)
  80fd7c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fd80:	e0bffa17 	ldw	r2,-24(fp)
  80fd84:	10c00017 	ldw	r3,0(r2)
  80fd88:	e0bffb17 	ldw	r2,-20(fp)
  80fd8c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80fd90:	e0bffa17 	ldw	r2,-24(fp)
  80fd94:	10800017 	ldw	r2,0(r2)
  80fd98:	e0fffb17 	ldw	r3,-20(fp)
  80fd9c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fda0:	e0bffa17 	ldw	r2,-24(fp)
  80fda4:	e0fffb17 	ldw	r3,-20(fp)
  80fda8:	10c00015 	stw	r3,0(r2)
  80fdac:	e0bff817 	ldw	r2,-32(fp)
  80fdb0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fdb4:	e0bff717 	ldw	r2,-36(fp)
  80fdb8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80fdbc:	0005883a 	mov	r2,zero
  80fdc0:	00000306 	br	80fdd0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80fdc4:	00bffa84 	movi	r2,-22
  80fdc8:	00000106 	br	80fdd0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80fdcc:	00bfde84 	movi	r2,-134
  }
}
  80fdd0:	e037883a 	mov	sp,fp
  80fdd4:	df000017 	ldw	fp,0(sp)
  80fdd8:	dec00104 	addi	sp,sp,4
  80fddc:	f800283a 	ret

0080fde0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80fde0:	defffe04 	addi	sp,sp,-8
  80fde4:	df000115 	stw	fp,4(sp)
  80fde8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fdec:	e03fff15 	stw	zero,-4(fp)
  80fdf0:	00000506 	br	80fe08 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80fdf4:	e0bfff17 	ldw	r2,-4(fp)
  80fdf8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fdfc:	e0bfff17 	ldw	r2,-4(fp)
  80fe00:	10800804 	addi	r2,r2,32
  80fe04:	e0bfff15 	stw	r2,-4(fp)
  80fe08:	e0bfff17 	ldw	r2,-4(fp)
  80fe0c:	10820030 	cmpltui	r2,r2,2048
  80fe10:	103ff81e 	bne	r2,zero,80fdf4 <__alt_data_end+0xff80fdf4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80fe14:	0001883a 	nop
  80fe18:	e037883a 	mov	sp,fp
  80fe1c:	df000017 	ldw	fp,0(sp)
  80fe20:	dec00104 	addi	sp,sp,4
  80fe24:	f800283a 	ret

0080fe28 <alt_get_errno>:
  80fe28:	defffe04 	addi	sp,sp,-8
  80fe2c:	dfc00115 	stw	ra,4(sp)
  80fe30:	df000015 	stw	fp,0(sp)
  80fe34:	d839883a 	mov	fp,sp
  80fe38:	d0a00b17 	ldw	r2,-32724(gp)
  80fe3c:	10000326 	beq	r2,zero,80fe4c <alt_get_errno+0x24>
  80fe40:	d0a00b17 	ldw	r2,-32724(gp)
  80fe44:	103ee83a 	callr	r2
  80fe48:	00000106 	br	80fe50 <alt_get_errno+0x28>
  80fe4c:	d0a6d104 	addi	r2,gp,-25788
  80fe50:	e037883a 	mov	sp,fp
  80fe54:	dfc00117 	ldw	ra,4(sp)
  80fe58:	df000017 	ldw	fp,0(sp)
  80fe5c:	dec00204 	addi	sp,sp,8
  80fe60:	f800283a 	ret

0080fe64 <alt_dev_llist_insert>:
  80fe64:	defffa04 	addi	sp,sp,-24
  80fe68:	dfc00515 	stw	ra,20(sp)
  80fe6c:	df000415 	stw	fp,16(sp)
  80fe70:	df000404 	addi	fp,sp,16
  80fe74:	e13ffe15 	stw	r4,-8(fp)
  80fe78:	e17fff15 	stw	r5,-4(fp)
  80fe7c:	e0bffe17 	ldw	r2,-8(fp)
  80fe80:	10000326 	beq	r2,zero,80fe90 <alt_dev_llist_insert+0x2c>
  80fe84:	e0bffe17 	ldw	r2,-8(fp)
  80fe88:	10800217 	ldw	r2,8(r2)
  80fe8c:	1000061e 	bne	r2,zero,80fea8 <alt_dev_llist_insert+0x44>
  80fe90:	080fe280 	call	80fe28 <alt_get_errno>
  80fe94:	1007883a 	mov	r3,r2
  80fe98:	00800584 	movi	r2,22
  80fe9c:	18800015 	stw	r2,0(r3)
  80fea0:	00bffa84 	movi	r2,-22
  80fea4:	00001306 	br	80fef4 <alt_dev_llist_insert+0x90>
  80fea8:	e0bffe17 	ldw	r2,-8(fp)
  80feac:	e0ffff17 	ldw	r3,-4(fp)
  80feb0:	e0fffc15 	stw	r3,-16(fp)
  80feb4:	e0bffd15 	stw	r2,-12(fp)
  80feb8:	e0bffd17 	ldw	r2,-12(fp)
  80febc:	e0fffc17 	ldw	r3,-16(fp)
  80fec0:	10c00115 	stw	r3,4(r2)
  80fec4:	e0bffc17 	ldw	r2,-16(fp)
  80fec8:	10c00017 	ldw	r3,0(r2)
  80fecc:	e0bffd17 	ldw	r2,-12(fp)
  80fed0:	10c00015 	stw	r3,0(r2)
  80fed4:	e0bffc17 	ldw	r2,-16(fp)
  80fed8:	10800017 	ldw	r2,0(r2)
  80fedc:	e0fffd17 	ldw	r3,-12(fp)
  80fee0:	10c00115 	stw	r3,4(r2)
  80fee4:	e0bffc17 	ldw	r2,-16(fp)
  80fee8:	e0fffd17 	ldw	r3,-12(fp)
  80feec:	10c00015 	stw	r3,0(r2)
  80fef0:	0005883a 	mov	r2,zero
  80fef4:	e037883a 	mov	sp,fp
  80fef8:	dfc00117 	ldw	ra,4(sp)
  80fefc:	df000017 	ldw	fp,0(sp)
  80ff00:	dec00204 	addi	sp,sp,8
  80ff04:	f800283a 	ret

0080ff08 <_do_ctors>:
  80ff08:	defffd04 	addi	sp,sp,-12
  80ff0c:	dfc00215 	stw	ra,8(sp)
  80ff10:	df000115 	stw	fp,4(sp)
  80ff14:	df000104 	addi	fp,sp,4
  80ff18:	00802074 	movhi	r2,129
  80ff1c:	1083e904 	addi	r2,r2,4004
  80ff20:	e0bfff15 	stw	r2,-4(fp)
  80ff24:	00000606 	br	80ff40 <_do_ctors+0x38>
  80ff28:	e0bfff17 	ldw	r2,-4(fp)
  80ff2c:	10800017 	ldw	r2,0(r2)
  80ff30:	103ee83a 	callr	r2
  80ff34:	e0bfff17 	ldw	r2,-4(fp)
  80ff38:	10bfff04 	addi	r2,r2,-4
  80ff3c:	e0bfff15 	stw	r2,-4(fp)
  80ff40:	e0ffff17 	ldw	r3,-4(fp)
  80ff44:	00802074 	movhi	r2,129
  80ff48:	1083ea04 	addi	r2,r2,4008
  80ff4c:	18bff62e 	bgeu	r3,r2,80ff28 <__alt_data_end+0xff80ff28>
  80ff50:	0001883a 	nop
  80ff54:	e037883a 	mov	sp,fp
  80ff58:	dfc00117 	ldw	ra,4(sp)
  80ff5c:	df000017 	ldw	fp,0(sp)
  80ff60:	dec00204 	addi	sp,sp,8
  80ff64:	f800283a 	ret

0080ff68 <_do_dtors>:
  80ff68:	defffd04 	addi	sp,sp,-12
  80ff6c:	dfc00215 	stw	ra,8(sp)
  80ff70:	df000115 	stw	fp,4(sp)
  80ff74:	df000104 	addi	fp,sp,4
  80ff78:	00802074 	movhi	r2,129
  80ff7c:	1083e904 	addi	r2,r2,4004
  80ff80:	e0bfff15 	stw	r2,-4(fp)
  80ff84:	00000606 	br	80ffa0 <_do_dtors+0x38>
  80ff88:	e0bfff17 	ldw	r2,-4(fp)
  80ff8c:	10800017 	ldw	r2,0(r2)
  80ff90:	103ee83a 	callr	r2
  80ff94:	e0bfff17 	ldw	r2,-4(fp)
  80ff98:	10bfff04 	addi	r2,r2,-4
  80ff9c:	e0bfff15 	stw	r2,-4(fp)
  80ffa0:	e0ffff17 	ldw	r3,-4(fp)
  80ffa4:	00802074 	movhi	r2,129
  80ffa8:	1083ea04 	addi	r2,r2,4008
  80ffac:	18bff62e 	bgeu	r3,r2,80ff88 <__alt_data_end+0xff80ff88>
  80ffb0:	0001883a 	nop
  80ffb4:	e037883a 	mov	sp,fp
  80ffb8:	dfc00117 	ldw	ra,4(sp)
  80ffbc:	df000017 	ldw	fp,0(sp)
  80ffc0:	dec00204 	addi	sp,sp,8
  80ffc4:	f800283a 	ret

0080ffc8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ffc8:	defffe04 	addi	sp,sp,-8
  80ffcc:	dfc00115 	stw	ra,4(sp)
  80ffd0:	df000015 	stw	fp,0(sp)
  80ffd4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ffd8:	01420004 	movi	r5,2048
  80ffdc:	0009883a 	mov	r4,zero
  80ffe0:	0810a340 	call	810a34 <alt_icache_flush>
#endif
}
  80ffe4:	0001883a 	nop
  80ffe8:	e037883a 	mov	sp,fp
  80ffec:	dfc00117 	ldw	ra,4(sp)
  80fff0:	df000017 	ldw	fp,0(sp)
  80fff4:	dec00204 	addi	sp,sp,8
  80fff8:	f800283a 	ret

0080fffc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80fffc:	defff904 	addi	sp,sp,-28
  810000:	dfc00615 	stw	ra,24(sp)
  810004:	df000515 	stw	fp,20(sp)
  810008:	df000504 	addi	fp,sp,20
  81000c:	e13ffc15 	stw	r4,-16(fp)
  810010:	e17ffd15 	stw	r5,-12(fp)
  810014:	e1bffe15 	stw	r6,-8(fp)
  810018:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  81001c:	e0800217 	ldw	r2,8(fp)
  810020:	d8800015 	stw	r2,0(sp)
  810024:	e1ffff17 	ldw	r7,-4(fp)
  810028:	e1bffe17 	ldw	r6,-8(fp)
  81002c:	e17ffd17 	ldw	r5,-12(fp)
  810030:	e13ffc17 	ldw	r4,-16(fp)
  810034:	08101ac0 	call	8101ac <alt_iic_isr_register>
}  
  810038:	e037883a 	mov	sp,fp
  81003c:	dfc00117 	ldw	ra,4(sp)
  810040:	df000017 	ldw	fp,0(sp)
  810044:	dec00204 	addi	sp,sp,8
  810048:	f800283a 	ret

0081004c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  81004c:	defff904 	addi	sp,sp,-28
  810050:	df000615 	stw	fp,24(sp)
  810054:	df000604 	addi	fp,sp,24
  810058:	e13ffe15 	stw	r4,-8(fp)
  81005c:	e17fff15 	stw	r5,-4(fp)
  810060:	e0bfff17 	ldw	r2,-4(fp)
  810064:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810068:	0005303a 	rdctl	r2,status
  81006c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810070:	e0fffb17 	ldw	r3,-20(fp)
  810074:	00bfff84 	movi	r2,-2
  810078:	1884703a 	and	r2,r3,r2
  81007c:	1001703a 	wrctl	status,r2
  
  return context;
  810080:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  810084:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  810088:	00c00044 	movi	r3,1
  81008c:	e0bffa17 	ldw	r2,-24(fp)
  810090:	1884983a 	sll	r2,r3,r2
  810094:	1007883a 	mov	r3,r2
  810098:	d0a6d517 	ldw	r2,-25772(gp)
  81009c:	1884b03a 	or	r2,r3,r2
  8100a0:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8100a4:	d0a6d517 	ldw	r2,-25772(gp)
  8100a8:	100170fa 	wrctl	ienable,r2
  8100ac:	e0bffc17 	ldw	r2,-16(fp)
  8100b0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8100b4:	e0bffd17 	ldw	r2,-12(fp)
  8100b8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  8100bc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  8100c0:	0001883a 	nop
}
  8100c4:	e037883a 	mov	sp,fp
  8100c8:	df000017 	ldw	fp,0(sp)
  8100cc:	dec00104 	addi	sp,sp,4
  8100d0:	f800283a 	ret

008100d4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  8100d4:	defff904 	addi	sp,sp,-28
  8100d8:	df000615 	stw	fp,24(sp)
  8100dc:	df000604 	addi	fp,sp,24
  8100e0:	e13ffe15 	stw	r4,-8(fp)
  8100e4:	e17fff15 	stw	r5,-4(fp)
  8100e8:	e0bfff17 	ldw	r2,-4(fp)
  8100ec:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8100f0:	0005303a 	rdctl	r2,status
  8100f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8100f8:	e0fffb17 	ldw	r3,-20(fp)
  8100fc:	00bfff84 	movi	r2,-2
  810100:	1884703a 	and	r2,r3,r2
  810104:	1001703a 	wrctl	status,r2
  
  return context;
  810108:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81010c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  810110:	00c00044 	movi	r3,1
  810114:	e0bffa17 	ldw	r2,-24(fp)
  810118:	1884983a 	sll	r2,r3,r2
  81011c:	0084303a 	nor	r2,zero,r2
  810120:	1007883a 	mov	r3,r2
  810124:	d0a6d517 	ldw	r2,-25772(gp)
  810128:	1884703a 	and	r2,r3,r2
  81012c:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  810130:	d0a6d517 	ldw	r2,-25772(gp)
  810134:	100170fa 	wrctl	ienable,r2
  810138:	e0bffc17 	ldw	r2,-16(fp)
  81013c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810140:	e0bffd17 	ldw	r2,-12(fp)
  810144:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  810148:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  81014c:	0001883a 	nop
}
  810150:	e037883a 	mov	sp,fp
  810154:	df000017 	ldw	fp,0(sp)
  810158:	dec00104 	addi	sp,sp,4
  81015c:	f800283a 	ret

00810160 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  810160:	defffc04 	addi	sp,sp,-16
  810164:	df000315 	stw	fp,12(sp)
  810168:	df000304 	addi	fp,sp,12
  81016c:	e13ffe15 	stw	r4,-8(fp)
  810170:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  810174:	000530fa 	rdctl	r2,ienable
  810178:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  81017c:	00c00044 	movi	r3,1
  810180:	e0bfff17 	ldw	r2,-4(fp)
  810184:	1884983a 	sll	r2,r3,r2
  810188:	1007883a 	mov	r3,r2
  81018c:	e0bffd17 	ldw	r2,-12(fp)
  810190:	1884703a 	and	r2,r3,r2
  810194:	1004c03a 	cmpne	r2,r2,zero
  810198:	10803fcc 	andi	r2,r2,255
}
  81019c:	e037883a 	mov	sp,fp
  8101a0:	df000017 	ldw	fp,0(sp)
  8101a4:	dec00104 	addi	sp,sp,4
  8101a8:	f800283a 	ret

008101ac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8101ac:	defff504 	addi	sp,sp,-44
  8101b0:	dfc00a15 	stw	ra,40(sp)
  8101b4:	df000915 	stw	fp,36(sp)
  8101b8:	df000904 	addi	fp,sp,36
  8101bc:	e13ffc15 	stw	r4,-16(fp)
  8101c0:	e17ffd15 	stw	r5,-12(fp)
  8101c4:	e1bffe15 	stw	r6,-8(fp)
  8101c8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  8101cc:	00bffa84 	movi	r2,-22
  8101d0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  8101d4:	e0bffd17 	ldw	r2,-12(fp)
  8101d8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  8101dc:	e0bff817 	ldw	r2,-32(fp)
  8101e0:	10800808 	cmpgei	r2,r2,32
  8101e4:	1000271e 	bne	r2,zero,810284 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8101e8:	0005303a 	rdctl	r2,status
  8101ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8101f0:	e0fffb17 	ldw	r3,-20(fp)
  8101f4:	00bfff84 	movi	r2,-2
  8101f8:	1884703a 	and	r2,r3,r2
  8101fc:	1001703a 	wrctl	status,r2
  
  return context;
  810200:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  810204:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  810208:	00802074 	movhi	r2,129
  81020c:	10924704 	addi	r2,r2,18716
  810210:	e0fff817 	ldw	r3,-32(fp)
  810214:	180690fa 	slli	r3,r3,3
  810218:	10c5883a 	add	r2,r2,r3
  81021c:	e0fffe17 	ldw	r3,-8(fp)
  810220:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  810224:	00802074 	movhi	r2,129
  810228:	10924704 	addi	r2,r2,18716
  81022c:	e0fff817 	ldw	r3,-32(fp)
  810230:	180690fa 	slli	r3,r3,3
  810234:	10c5883a 	add	r2,r2,r3
  810238:	10800104 	addi	r2,r2,4
  81023c:	e0ffff17 	ldw	r3,-4(fp)
  810240:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  810244:	e0bffe17 	ldw	r2,-8(fp)
  810248:	10000526 	beq	r2,zero,810260 <alt_iic_isr_register+0xb4>
  81024c:	e0bff817 	ldw	r2,-32(fp)
  810250:	100b883a 	mov	r5,r2
  810254:	e13ffc17 	ldw	r4,-16(fp)
  810258:	081004c0 	call	81004c <alt_ic_irq_enable>
  81025c:	00000406 	br	810270 <alt_iic_isr_register+0xc4>
  810260:	e0bff817 	ldw	r2,-32(fp)
  810264:	100b883a 	mov	r5,r2
  810268:	e13ffc17 	ldw	r4,-16(fp)
  81026c:	08100d40 	call	8100d4 <alt_ic_irq_disable>
  810270:	e0bff715 	stw	r2,-36(fp)
  810274:	e0bffa17 	ldw	r2,-24(fp)
  810278:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81027c:	e0bff917 	ldw	r2,-28(fp)
  810280:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  810284:	e0bff717 	ldw	r2,-36(fp)
}
  810288:	e037883a 	mov	sp,fp
  81028c:	dfc00117 	ldw	ra,4(sp)
  810290:	df000017 	ldw	fp,0(sp)
  810294:	dec00204 	addi	sp,sp,8
  810298:	f800283a 	ret

0081029c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81029c:	defff904 	addi	sp,sp,-28
  8102a0:	dfc00615 	stw	ra,24(sp)
  8102a4:	df000515 	stw	fp,20(sp)
  8102a8:	df000504 	addi	fp,sp,20
  8102ac:	e13ffc15 	stw	r4,-16(fp)
  8102b0:	e17ffd15 	stw	r5,-12(fp)
  8102b4:	e1bffe15 	stw	r6,-8(fp)
  8102b8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  8102bc:	e1bfff17 	ldw	r6,-4(fp)
  8102c0:	e17ffe17 	ldw	r5,-8(fp)
  8102c4:	e13ffd17 	ldw	r4,-12(fp)
  8102c8:	08104dc0 	call	8104dc <open>
  8102cc:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  8102d0:	e0bffb17 	ldw	r2,-20(fp)
  8102d4:	10001c16 	blt	r2,zero,810348 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  8102d8:	00802074 	movhi	r2,129
  8102dc:	1086ec04 	addi	r2,r2,7088
  8102e0:	e0fffb17 	ldw	r3,-20(fp)
  8102e4:	18c00324 	muli	r3,r3,12
  8102e8:	10c5883a 	add	r2,r2,r3
  8102ec:	10c00017 	ldw	r3,0(r2)
  8102f0:	e0bffc17 	ldw	r2,-16(fp)
  8102f4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  8102f8:	00802074 	movhi	r2,129
  8102fc:	1086ec04 	addi	r2,r2,7088
  810300:	e0fffb17 	ldw	r3,-20(fp)
  810304:	18c00324 	muli	r3,r3,12
  810308:	10c5883a 	add	r2,r2,r3
  81030c:	10800104 	addi	r2,r2,4
  810310:	10c00017 	ldw	r3,0(r2)
  810314:	e0bffc17 	ldw	r2,-16(fp)
  810318:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  81031c:	00802074 	movhi	r2,129
  810320:	1086ec04 	addi	r2,r2,7088
  810324:	e0fffb17 	ldw	r3,-20(fp)
  810328:	18c00324 	muli	r3,r3,12
  81032c:	10c5883a 	add	r2,r2,r3
  810330:	10800204 	addi	r2,r2,8
  810334:	10c00017 	ldw	r3,0(r2)
  810338:	e0bffc17 	ldw	r2,-16(fp)
  81033c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  810340:	e13ffb17 	ldw	r4,-20(fp)
  810344:	080ed8c0 	call	80ed8c <alt_release_fd>
  }
} 
  810348:	0001883a 	nop
  81034c:	e037883a 	mov	sp,fp
  810350:	dfc00117 	ldw	ra,4(sp)
  810354:	df000017 	ldw	fp,0(sp)
  810358:	dec00204 	addi	sp,sp,8
  81035c:	f800283a 	ret

00810360 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  810360:	defffb04 	addi	sp,sp,-20
  810364:	dfc00415 	stw	ra,16(sp)
  810368:	df000315 	stw	fp,12(sp)
  81036c:	df000304 	addi	fp,sp,12
  810370:	e13ffd15 	stw	r4,-12(fp)
  810374:	e17ffe15 	stw	r5,-8(fp)
  810378:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  81037c:	01c07fc4 	movi	r7,511
  810380:	01800044 	movi	r6,1
  810384:	e17ffd17 	ldw	r5,-12(fp)
  810388:	01002074 	movhi	r4,129
  81038c:	2106ef04 	addi	r4,r4,7100
  810390:	081029c0 	call	81029c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  810394:	01c07fc4 	movi	r7,511
  810398:	000d883a 	mov	r6,zero
  81039c:	e17ffe17 	ldw	r5,-8(fp)
  8103a0:	01002074 	movhi	r4,129
  8103a4:	2106ec04 	addi	r4,r4,7088
  8103a8:	081029c0 	call	81029c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  8103ac:	01c07fc4 	movi	r7,511
  8103b0:	01800044 	movi	r6,1
  8103b4:	e17fff17 	ldw	r5,-4(fp)
  8103b8:	01002074 	movhi	r4,129
  8103bc:	2106f204 	addi	r4,r4,7112
  8103c0:	081029c0 	call	81029c <alt_open_fd>
}  
  8103c4:	0001883a 	nop
  8103c8:	e037883a 	mov	sp,fp
  8103cc:	dfc00117 	ldw	ra,4(sp)
  8103d0:	df000017 	ldw	fp,0(sp)
  8103d4:	dec00204 	addi	sp,sp,8
  8103d8:	f800283a 	ret

008103dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8103dc:	defffe04 	addi	sp,sp,-8
  8103e0:	dfc00115 	stw	ra,4(sp)
  8103e4:	df000015 	stw	fp,0(sp)
  8103e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8103ec:	d0a00b17 	ldw	r2,-32724(gp)
  8103f0:	10000326 	beq	r2,zero,810400 <alt_get_errno+0x24>
  8103f4:	d0a00b17 	ldw	r2,-32724(gp)
  8103f8:	103ee83a 	callr	r2
  8103fc:	00000106 	br	810404 <alt_get_errno+0x28>
  810400:	d0a6d104 	addi	r2,gp,-25788
}
  810404:	e037883a 	mov	sp,fp
  810408:	dfc00117 	ldw	ra,4(sp)
  81040c:	df000017 	ldw	fp,0(sp)
  810410:	dec00204 	addi	sp,sp,8
  810414:	f800283a 	ret

00810418 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  810418:	defffd04 	addi	sp,sp,-12
  81041c:	df000215 	stw	fp,8(sp)
  810420:	df000204 	addi	fp,sp,8
  810424:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  810428:	e0bfff17 	ldw	r2,-4(fp)
  81042c:	10800217 	ldw	r2,8(r2)
  810430:	10d00034 	orhi	r3,r2,16384
  810434:	e0bfff17 	ldw	r2,-4(fp)
  810438:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  81043c:	e03ffe15 	stw	zero,-8(fp)
  810440:	00001d06 	br	8104b8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  810444:	00802074 	movhi	r2,129
  810448:	1086ec04 	addi	r2,r2,7088
  81044c:	e0fffe17 	ldw	r3,-8(fp)
  810450:	18c00324 	muli	r3,r3,12
  810454:	10c5883a 	add	r2,r2,r3
  810458:	10c00017 	ldw	r3,0(r2)
  81045c:	e0bfff17 	ldw	r2,-4(fp)
  810460:	10800017 	ldw	r2,0(r2)
  810464:	1880111e 	bne	r3,r2,8104ac <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  810468:	00802074 	movhi	r2,129
  81046c:	1086ec04 	addi	r2,r2,7088
  810470:	e0fffe17 	ldw	r3,-8(fp)
  810474:	18c00324 	muli	r3,r3,12
  810478:	10c5883a 	add	r2,r2,r3
  81047c:	10800204 	addi	r2,r2,8
  810480:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  810484:	1000090e 	bge	r2,zero,8104ac <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  810488:	e0bffe17 	ldw	r2,-8(fp)
  81048c:	10c00324 	muli	r3,r2,12
  810490:	00802074 	movhi	r2,129
  810494:	1086ec04 	addi	r2,r2,7088
  810498:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  81049c:	e0bfff17 	ldw	r2,-4(fp)
  8104a0:	18800226 	beq	r3,r2,8104ac <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  8104a4:	00bffcc4 	movi	r2,-13
  8104a8:	00000806 	br	8104cc <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8104ac:	e0bffe17 	ldw	r2,-8(fp)
  8104b0:	10800044 	addi	r2,r2,1
  8104b4:	e0bffe15 	stw	r2,-8(fp)
  8104b8:	d0a00a17 	ldw	r2,-32728(gp)
  8104bc:	1007883a 	mov	r3,r2
  8104c0:	e0bffe17 	ldw	r2,-8(fp)
  8104c4:	18bfdf2e 	bgeu	r3,r2,810444 <__alt_data_end+0xff810444>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  8104c8:	0005883a 	mov	r2,zero
}
  8104cc:	e037883a 	mov	sp,fp
  8104d0:	df000017 	ldw	fp,0(sp)
  8104d4:	dec00104 	addi	sp,sp,4
  8104d8:	f800283a 	ret

008104dc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  8104dc:	defff604 	addi	sp,sp,-40
  8104e0:	dfc00915 	stw	ra,36(sp)
  8104e4:	df000815 	stw	fp,32(sp)
  8104e8:	df000804 	addi	fp,sp,32
  8104ec:	e13ffd15 	stw	r4,-12(fp)
  8104f0:	e17ffe15 	stw	r5,-8(fp)
  8104f4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  8104f8:	00bfffc4 	movi	r2,-1
  8104fc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  810500:	00bffb44 	movi	r2,-19
  810504:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  810508:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  81050c:	d1600804 	addi	r5,gp,-32736
  810510:	e13ffd17 	ldw	r4,-12(fp)
  810514:	08107f80 	call	8107f8 <alt_find_dev>
  810518:	e0bff815 	stw	r2,-32(fp)
  81051c:	e0bff817 	ldw	r2,-32(fp)
  810520:	1000051e 	bne	r2,zero,810538 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  810524:	e13ffd17 	ldw	r4,-12(fp)
  810528:	08108880 	call	810888 <alt_find_file>
  81052c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  810530:	00800044 	movi	r2,1
  810534:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  810538:	e0bff817 	ldw	r2,-32(fp)
  81053c:	10002926 	beq	r2,zero,8105e4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  810540:	e13ff817 	ldw	r4,-32(fp)
  810544:	08109900 	call	810990 <alt_get_fd>
  810548:	e0bff915 	stw	r2,-28(fp)
  81054c:	e0bff917 	ldw	r2,-28(fp)
  810550:	1000030e 	bge	r2,zero,810560 <open+0x84>
    {
      status = index;
  810554:	e0bff917 	ldw	r2,-28(fp)
  810558:	e0bffa15 	stw	r2,-24(fp)
  81055c:	00002306 	br	8105ec <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  810560:	e0bff917 	ldw	r2,-28(fp)
  810564:	10c00324 	muli	r3,r2,12
  810568:	00802074 	movhi	r2,129
  81056c:	1086ec04 	addi	r2,r2,7088
  810570:	1885883a 	add	r2,r3,r2
  810574:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  810578:	e0fffe17 	ldw	r3,-8(fp)
  81057c:	00900034 	movhi	r2,16384
  810580:	10bfffc4 	addi	r2,r2,-1
  810584:	1886703a 	and	r3,r3,r2
  810588:	e0bffc17 	ldw	r2,-16(fp)
  81058c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  810590:	e0bffb17 	ldw	r2,-20(fp)
  810594:	1000051e 	bne	r2,zero,8105ac <open+0xd0>
  810598:	e13ffc17 	ldw	r4,-16(fp)
  81059c:	08104180 	call	810418 <alt_file_locked>
  8105a0:	e0bffa15 	stw	r2,-24(fp)
  8105a4:	e0bffa17 	ldw	r2,-24(fp)
  8105a8:	10001016 	blt	r2,zero,8105ec <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  8105ac:	e0bff817 	ldw	r2,-32(fp)
  8105b0:	10800317 	ldw	r2,12(r2)
  8105b4:	10000826 	beq	r2,zero,8105d8 <open+0xfc>
  8105b8:	e0bff817 	ldw	r2,-32(fp)
  8105bc:	10800317 	ldw	r2,12(r2)
  8105c0:	e1ffff17 	ldw	r7,-4(fp)
  8105c4:	e1bffe17 	ldw	r6,-8(fp)
  8105c8:	e17ffd17 	ldw	r5,-12(fp)
  8105cc:	e13ffc17 	ldw	r4,-16(fp)
  8105d0:	103ee83a 	callr	r2
  8105d4:	00000106 	br	8105dc <open+0x100>
  8105d8:	0005883a 	mov	r2,zero
  8105dc:	e0bffa15 	stw	r2,-24(fp)
  8105e0:	00000206 	br	8105ec <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  8105e4:	00bffb44 	movi	r2,-19
  8105e8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  8105ec:	e0bffa17 	ldw	r2,-24(fp)
  8105f0:	1000090e 	bge	r2,zero,810618 <open+0x13c>
  {
    alt_release_fd (index);  
  8105f4:	e13ff917 	ldw	r4,-28(fp)
  8105f8:	080ed8c0 	call	80ed8c <alt_release_fd>
    ALT_ERRNO = -status;
  8105fc:	08103dc0 	call	8103dc <alt_get_errno>
  810600:	1007883a 	mov	r3,r2
  810604:	e0bffa17 	ldw	r2,-24(fp)
  810608:	0085c83a 	sub	r2,zero,r2
  81060c:	18800015 	stw	r2,0(r3)
    return -1;
  810610:	00bfffc4 	movi	r2,-1
  810614:	00000106 	br	81061c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  810618:	e0bff917 	ldw	r2,-28(fp)
}
  81061c:	e037883a 	mov	sp,fp
  810620:	dfc00117 	ldw	ra,4(sp)
  810624:	df000017 	ldw	fp,0(sp)
  810628:	dec00204 	addi	sp,sp,8
  81062c:	f800283a 	ret

00810630 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  810630:	defffa04 	addi	sp,sp,-24
  810634:	df000515 	stw	fp,20(sp)
  810638:	df000504 	addi	fp,sp,20
  81063c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810640:	0005303a 	rdctl	r2,status
  810644:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810648:	e0fffc17 	ldw	r3,-16(fp)
  81064c:	00bfff84 	movi	r2,-2
  810650:	1884703a 	and	r2,r3,r2
  810654:	1001703a 	wrctl	status,r2
  
  return context;
  810658:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  81065c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  810660:	e0bfff17 	ldw	r2,-4(fp)
  810664:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  810668:	e0bffd17 	ldw	r2,-12(fp)
  81066c:	10800017 	ldw	r2,0(r2)
  810670:	e0fffd17 	ldw	r3,-12(fp)
  810674:	18c00117 	ldw	r3,4(r3)
  810678:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  81067c:	e0bffd17 	ldw	r2,-12(fp)
  810680:	10800117 	ldw	r2,4(r2)
  810684:	e0fffd17 	ldw	r3,-12(fp)
  810688:	18c00017 	ldw	r3,0(r3)
  81068c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  810690:	e0bffd17 	ldw	r2,-12(fp)
  810694:	e0fffd17 	ldw	r3,-12(fp)
  810698:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  81069c:	e0bffd17 	ldw	r2,-12(fp)
  8106a0:	e0fffd17 	ldw	r3,-12(fp)
  8106a4:	10c00015 	stw	r3,0(r2)
  8106a8:	e0bffb17 	ldw	r2,-20(fp)
  8106ac:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8106b0:	e0bffe17 	ldw	r2,-8(fp)
  8106b4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  8106b8:	0001883a 	nop
  8106bc:	e037883a 	mov	sp,fp
  8106c0:	df000017 	ldw	fp,0(sp)
  8106c4:	dec00104 	addi	sp,sp,4
  8106c8:	f800283a 	ret

008106cc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  8106cc:	defffb04 	addi	sp,sp,-20
  8106d0:	dfc00415 	stw	ra,16(sp)
  8106d4:	df000315 	stw	fp,12(sp)
  8106d8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  8106dc:	d0a00e17 	ldw	r2,-32712(gp)
  8106e0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  8106e4:	d0a6d717 	ldw	r2,-25764(gp)
  8106e8:	10800044 	addi	r2,r2,1
  8106ec:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  8106f0:	00002e06 	br	8107ac <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  8106f4:	e0bffd17 	ldw	r2,-12(fp)
  8106f8:	10800017 	ldw	r2,0(r2)
  8106fc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  810700:	e0bffd17 	ldw	r2,-12(fp)
  810704:	10800403 	ldbu	r2,16(r2)
  810708:	10803fcc 	andi	r2,r2,255
  81070c:	10000426 	beq	r2,zero,810720 <alt_tick+0x54>
  810710:	d0a6d717 	ldw	r2,-25764(gp)
  810714:	1000021e 	bne	r2,zero,810720 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  810718:	e0bffd17 	ldw	r2,-12(fp)
  81071c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  810720:	e0bffd17 	ldw	r2,-12(fp)
  810724:	10800217 	ldw	r2,8(r2)
  810728:	d0e6d717 	ldw	r3,-25764(gp)
  81072c:	18801d36 	bltu	r3,r2,8107a4 <alt_tick+0xd8>
  810730:	e0bffd17 	ldw	r2,-12(fp)
  810734:	10800403 	ldbu	r2,16(r2)
  810738:	10803fcc 	andi	r2,r2,255
  81073c:	1000191e 	bne	r2,zero,8107a4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  810740:	e0bffd17 	ldw	r2,-12(fp)
  810744:	10800317 	ldw	r2,12(r2)
  810748:	e0fffd17 	ldw	r3,-12(fp)
  81074c:	18c00517 	ldw	r3,20(r3)
  810750:	1809883a 	mov	r4,r3
  810754:	103ee83a 	callr	r2
  810758:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  81075c:	e0bfff17 	ldw	r2,-4(fp)
  810760:	1000031e 	bne	r2,zero,810770 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  810764:	e13ffd17 	ldw	r4,-12(fp)
  810768:	08106300 	call	810630 <alt_alarm_stop>
  81076c:	00000d06 	br	8107a4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  810770:	e0bffd17 	ldw	r2,-12(fp)
  810774:	10c00217 	ldw	r3,8(r2)
  810778:	e0bfff17 	ldw	r2,-4(fp)
  81077c:	1887883a 	add	r3,r3,r2
  810780:	e0bffd17 	ldw	r2,-12(fp)
  810784:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  810788:	e0bffd17 	ldw	r2,-12(fp)
  81078c:	10c00217 	ldw	r3,8(r2)
  810790:	d0a6d717 	ldw	r2,-25764(gp)
  810794:	1880032e 	bgeu	r3,r2,8107a4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  810798:	e0bffd17 	ldw	r2,-12(fp)
  81079c:	00c00044 	movi	r3,1
  8107a0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  8107a4:	e0bffe17 	ldw	r2,-8(fp)
  8107a8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  8107ac:	e0fffd17 	ldw	r3,-12(fp)
  8107b0:	d0a00e04 	addi	r2,gp,-32712
  8107b4:	18bfcf1e 	bne	r3,r2,8106f4 <__alt_data_end+0xff8106f4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  8107b8:	0001883a 	nop
}
  8107bc:	0001883a 	nop
  8107c0:	e037883a 	mov	sp,fp
  8107c4:	dfc00117 	ldw	ra,4(sp)
  8107c8:	df000017 	ldw	fp,0(sp)
  8107cc:	dec00204 	addi	sp,sp,8
  8107d0:	f800283a 	ret

008107d4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  8107d4:	deffff04 	addi	sp,sp,-4
  8107d8:	df000015 	stw	fp,0(sp)
  8107dc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  8107e0:	000170fa 	wrctl	ienable,zero
}
  8107e4:	0001883a 	nop
  8107e8:	e037883a 	mov	sp,fp
  8107ec:	df000017 	ldw	fp,0(sp)
  8107f0:	dec00104 	addi	sp,sp,4
  8107f4:	f800283a 	ret

008107f8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  8107f8:	defffa04 	addi	sp,sp,-24
  8107fc:	dfc00515 	stw	ra,20(sp)
  810800:	df000415 	stw	fp,16(sp)
  810804:	df000404 	addi	fp,sp,16
  810808:	e13ffe15 	stw	r4,-8(fp)
  81080c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  810810:	e0bfff17 	ldw	r2,-4(fp)
  810814:	10800017 	ldw	r2,0(r2)
  810818:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  81081c:	e13ffe17 	ldw	r4,-8(fp)
  810820:	080a11c0 	call	80a11c <strlen>
  810824:	10800044 	addi	r2,r2,1
  810828:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81082c:	00000d06 	br	810864 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  810830:	e0bffc17 	ldw	r2,-16(fp)
  810834:	10800217 	ldw	r2,8(r2)
  810838:	e0fffd17 	ldw	r3,-12(fp)
  81083c:	180d883a 	mov	r6,r3
  810840:	e17ffe17 	ldw	r5,-8(fp)
  810844:	1009883a 	mov	r4,r2
  810848:	0810c600 	call	810c60 <memcmp>
  81084c:	1000021e 	bne	r2,zero,810858 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  810850:	e0bffc17 	ldw	r2,-16(fp)
  810854:	00000706 	br	810874 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  810858:	e0bffc17 	ldw	r2,-16(fp)
  81085c:	10800017 	ldw	r2,0(r2)
  810860:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  810864:	e0fffc17 	ldw	r3,-16(fp)
  810868:	e0bfff17 	ldw	r2,-4(fp)
  81086c:	18bff01e 	bne	r3,r2,810830 <__alt_data_end+0xff810830>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  810870:	0005883a 	mov	r2,zero
}
  810874:	e037883a 	mov	sp,fp
  810878:	dfc00117 	ldw	ra,4(sp)
  81087c:	df000017 	ldw	fp,0(sp)
  810880:	dec00204 	addi	sp,sp,8
  810884:	f800283a 	ret

00810888 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  810888:	defffb04 	addi	sp,sp,-20
  81088c:	dfc00415 	stw	ra,16(sp)
  810890:	df000315 	stw	fp,12(sp)
  810894:	df000304 	addi	fp,sp,12
  810898:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  81089c:	d0a00617 	ldw	r2,-32744(gp)
  8108a0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8108a4:	00003106 	br	81096c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  8108a8:	e0bffd17 	ldw	r2,-12(fp)
  8108ac:	10800217 	ldw	r2,8(r2)
  8108b0:	1009883a 	mov	r4,r2
  8108b4:	080a11c0 	call	80a11c <strlen>
  8108b8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  8108bc:	e0bffd17 	ldw	r2,-12(fp)
  8108c0:	10c00217 	ldw	r3,8(r2)
  8108c4:	e0bffe17 	ldw	r2,-8(fp)
  8108c8:	10bfffc4 	addi	r2,r2,-1
  8108cc:	1885883a 	add	r2,r3,r2
  8108d0:	10800003 	ldbu	r2,0(r2)
  8108d4:	10803fcc 	andi	r2,r2,255
  8108d8:	1080201c 	xori	r2,r2,128
  8108dc:	10bfe004 	addi	r2,r2,-128
  8108e0:	10800bd8 	cmpnei	r2,r2,47
  8108e4:	1000031e 	bne	r2,zero,8108f4 <alt_find_file+0x6c>
    {
      len -= 1;
  8108e8:	e0bffe17 	ldw	r2,-8(fp)
  8108ec:	10bfffc4 	addi	r2,r2,-1
  8108f0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  8108f4:	e0bffe17 	ldw	r2,-8(fp)
  8108f8:	e0ffff17 	ldw	r3,-4(fp)
  8108fc:	1885883a 	add	r2,r3,r2
  810900:	10800003 	ldbu	r2,0(r2)
  810904:	10803fcc 	andi	r2,r2,255
  810908:	1080201c 	xori	r2,r2,128
  81090c:	10bfe004 	addi	r2,r2,-128
  810910:	10800be0 	cmpeqi	r2,r2,47
  810914:	1000081e 	bne	r2,zero,810938 <alt_find_file+0xb0>
  810918:	e0bffe17 	ldw	r2,-8(fp)
  81091c:	e0ffff17 	ldw	r3,-4(fp)
  810920:	1885883a 	add	r2,r3,r2
  810924:	10800003 	ldbu	r2,0(r2)
  810928:	10803fcc 	andi	r2,r2,255
  81092c:	1080201c 	xori	r2,r2,128
  810930:	10bfe004 	addi	r2,r2,-128
  810934:	10000a1e 	bne	r2,zero,810960 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  810938:	e0bffd17 	ldw	r2,-12(fp)
  81093c:	10800217 	ldw	r2,8(r2)
  810940:	e0fffe17 	ldw	r3,-8(fp)
  810944:	180d883a 	mov	r6,r3
  810948:	e17fff17 	ldw	r5,-4(fp)
  81094c:	1009883a 	mov	r4,r2
  810950:	0810c600 	call	810c60 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  810954:	1000021e 	bne	r2,zero,810960 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  810958:	e0bffd17 	ldw	r2,-12(fp)
  81095c:	00000706 	br	81097c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  810960:	e0bffd17 	ldw	r2,-12(fp)
  810964:	10800017 	ldw	r2,0(r2)
  810968:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81096c:	e0fffd17 	ldw	r3,-12(fp)
  810970:	d0a00604 	addi	r2,gp,-32744
  810974:	18bfcc1e 	bne	r3,r2,8108a8 <__alt_data_end+0xff8108a8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  810978:	0005883a 	mov	r2,zero
}
  81097c:	e037883a 	mov	sp,fp
  810980:	dfc00117 	ldw	ra,4(sp)
  810984:	df000017 	ldw	fp,0(sp)
  810988:	dec00204 	addi	sp,sp,8
  81098c:	f800283a 	ret

00810990 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  810990:	defffc04 	addi	sp,sp,-16
  810994:	df000315 	stw	fp,12(sp)
  810998:	df000304 	addi	fp,sp,12
  81099c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  8109a0:	00bffa04 	movi	r2,-24
  8109a4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  8109a8:	e03ffd15 	stw	zero,-12(fp)
  8109ac:	00001906 	br	810a14 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  8109b0:	00802074 	movhi	r2,129
  8109b4:	1086ec04 	addi	r2,r2,7088
  8109b8:	e0fffd17 	ldw	r3,-12(fp)
  8109bc:	18c00324 	muli	r3,r3,12
  8109c0:	10c5883a 	add	r2,r2,r3
  8109c4:	10800017 	ldw	r2,0(r2)
  8109c8:	10000f1e 	bne	r2,zero,810a08 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  8109cc:	00802074 	movhi	r2,129
  8109d0:	1086ec04 	addi	r2,r2,7088
  8109d4:	e0fffd17 	ldw	r3,-12(fp)
  8109d8:	18c00324 	muli	r3,r3,12
  8109dc:	10c5883a 	add	r2,r2,r3
  8109e0:	e0ffff17 	ldw	r3,-4(fp)
  8109e4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  8109e8:	d0e00a17 	ldw	r3,-32728(gp)
  8109ec:	e0bffd17 	ldw	r2,-12(fp)
  8109f0:	1880020e 	bge	r3,r2,8109fc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  8109f4:	e0bffd17 	ldw	r2,-12(fp)
  8109f8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  8109fc:	e0bffd17 	ldw	r2,-12(fp)
  810a00:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  810a04:	00000606 	br	810a20 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  810a08:	e0bffd17 	ldw	r2,-12(fp)
  810a0c:	10800044 	addi	r2,r2,1
  810a10:	e0bffd15 	stw	r2,-12(fp)
  810a14:	e0bffd17 	ldw	r2,-12(fp)
  810a18:	10800810 	cmplti	r2,r2,32
  810a1c:	103fe41e 	bne	r2,zero,8109b0 <__alt_data_end+0xff8109b0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  810a20:	e0bffe17 	ldw	r2,-8(fp)
}
  810a24:	e037883a 	mov	sp,fp
  810a28:	df000017 	ldw	fp,0(sp)
  810a2c:	dec00104 	addi	sp,sp,4
  810a30:	f800283a 	ret

00810a34 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  810a34:	defffb04 	addi	sp,sp,-20
  810a38:	df000415 	stw	fp,16(sp)
  810a3c:	df000404 	addi	fp,sp,16
  810a40:	e13ffe15 	stw	r4,-8(fp)
  810a44:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  810a48:	e0bfff17 	ldw	r2,-4(fp)
  810a4c:	10820070 	cmpltui	r2,r2,2049
  810a50:	1000021e 	bne	r2,zero,810a5c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  810a54:	00820004 	movi	r2,2048
  810a58:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  810a5c:	e0fffe17 	ldw	r3,-8(fp)
  810a60:	e0bfff17 	ldw	r2,-4(fp)
  810a64:	1885883a 	add	r2,r3,r2
  810a68:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810a6c:	e0bffe17 	ldw	r2,-8(fp)
  810a70:	e0bffc15 	stw	r2,-16(fp)
  810a74:	00000506 	br	810a8c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  810a78:	e0bffc17 	ldw	r2,-16(fp)
  810a7c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810a80:	e0bffc17 	ldw	r2,-16(fp)
  810a84:	10800804 	addi	r2,r2,32
  810a88:	e0bffc15 	stw	r2,-16(fp)
  810a8c:	e0fffc17 	ldw	r3,-16(fp)
  810a90:	e0bffd17 	ldw	r2,-12(fp)
  810a94:	18bff836 	bltu	r3,r2,810a78 <__alt_data_end+0xff810a78>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  810a98:	e0bffe17 	ldw	r2,-8(fp)
  810a9c:	108007cc 	andi	r2,r2,31
  810aa0:	10000226 	beq	r2,zero,810aac <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  810aa4:	e0bffc17 	ldw	r2,-16(fp)
  810aa8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  810aac:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  810ab0:	0001883a 	nop
  810ab4:	e037883a 	mov	sp,fp
  810ab8:	df000017 	ldw	fp,0(sp)
  810abc:	dec00104 	addi	sp,sp,4
  810ac0:	f800283a 	ret

00810ac4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  810ac4:	defffe04 	addi	sp,sp,-8
  810ac8:	df000115 	stw	fp,4(sp)
  810acc:	df000104 	addi	fp,sp,4
  810ad0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  810ad4:	e0bfff17 	ldw	r2,-4(fp)
  810ad8:	10bffe84 	addi	r2,r2,-6
  810adc:	10c00428 	cmpgeui	r3,r2,16
  810ae0:	18001a1e 	bne	r3,zero,810b4c <alt_exception_cause_generated_bad_addr+0x88>
  810ae4:	100690ba 	slli	r3,r2,2
  810ae8:	00802074 	movhi	r2,129
  810aec:	1082bf04 	addi	r2,r2,2812
  810af0:	1885883a 	add	r2,r3,r2
  810af4:	10800017 	ldw	r2,0(r2)
  810af8:	1000683a 	jmp	r2
  810afc:	00810b3c 	xorhi	r2,zero,1068
  810b00:	00810b3c 	xorhi	r2,zero,1068
  810b04:	00810b4c 	andi	r2,zero,1069
  810b08:	00810b4c 	andi	r2,zero,1069
  810b0c:	00810b4c 	andi	r2,zero,1069
  810b10:	00810b3c 	xorhi	r2,zero,1068
  810b14:	00810b44 	movi	r2,1069
  810b18:	00810b4c 	andi	r2,zero,1069
  810b1c:	00810b3c 	xorhi	r2,zero,1068
  810b20:	00810b3c 	xorhi	r2,zero,1068
  810b24:	00810b4c 	andi	r2,zero,1069
  810b28:	00810b3c 	xorhi	r2,zero,1068
  810b2c:	00810b44 	movi	r2,1069
  810b30:	00810b4c 	andi	r2,zero,1069
  810b34:	00810b4c 	andi	r2,zero,1069
  810b38:	00810b3c 	xorhi	r2,zero,1068
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  810b3c:	00800044 	movi	r2,1
  810b40:	00000306 	br	810b50 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  810b44:	0005883a 	mov	r2,zero
  810b48:	00000106 	br	810b50 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  810b4c:	0005883a 	mov	r2,zero
  }
}
  810b50:	e037883a 	mov	sp,fp
  810b54:	df000017 	ldw	fp,0(sp)
  810b58:	dec00104 	addi	sp,sp,4
  810b5c:	f800283a 	ret

00810b60 <atexit>:
  810b60:	200b883a 	mov	r5,r4
  810b64:	000f883a 	mov	r7,zero
  810b68:	000d883a 	mov	r6,zero
  810b6c:	0009883a 	mov	r4,zero
  810b70:	0810cdc1 	jmpi	810cdc <__register_exitproc>

00810b74 <exit>:
  810b74:	defffe04 	addi	sp,sp,-8
  810b78:	000b883a 	mov	r5,zero
  810b7c:	dc000015 	stw	r16,0(sp)
  810b80:	dfc00115 	stw	ra,4(sp)
  810b84:	2021883a 	mov	r16,r4
  810b88:	0810df40 	call	810df4 <__call_exitprocs>
  810b8c:	00802074 	movhi	r2,129
  810b90:	108b6404 	addi	r2,r2,11664
  810b94:	11000017 	ldw	r4,0(r2)
  810b98:	20800f17 	ldw	r2,60(r4)
  810b9c:	10000126 	beq	r2,zero,810ba4 <exit+0x30>
  810ba0:	103ee83a 	callr	r2
  810ba4:	8009883a 	mov	r4,r16
  810ba8:	0810f740 	call	810f74 <_exit>

00810bac <_fputs_r>:
  810bac:	defff804 	addi	sp,sp,-32
  810bb0:	dc400615 	stw	r17,24(sp)
  810bb4:	2023883a 	mov	r17,r4
  810bb8:	2809883a 	mov	r4,r5
  810bbc:	dc000515 	stw	r16,20(sp)
  810bc0:	dfc00715 	stw	ra,28(sp)
  810bc4:	3021883a 	mov	r16,r6
  810bc8:	d9400315 	stw	r5,12(sp)
  810bcc:	080a11c0 	call	80a11c <strlen>
  810bd0:	d8800215 	stw	r2,8(sp)
  810bd4:	d8800415 	stw	r2,16(sp)
  810bd8:	d8800304 	addi	r2,sp,12
  810bdc:	d8800015 	stw	r2,0(sp)
  810be0:	00800044 	movi	r2,1
  810be4:	d8800115 	stw	r2,4(sp)
  810be8:	88000226 	beq	r17,zero,810bf4 <_fputs_r+0x48>
  810bec:	88800e17 	ldw	r2,56(r17)
  810bf0:	10001226 	beq	r2,zero,810c3c <_fputs_r+0x90>
  810bf4:	8080030b 	ldhu	r2,12(r16)
  810bf8:	10c8000c 	andi	r3,r2,8192
  810bfc:	1800061e 	bne	r3,zero,810c18 <_fputs_r+0x6c>
  810c00:	81001917 	ldw	r4,100(r16)
  810c04:	00f7ffc4 	movi	r3,-8193
  810c08:	10880014 	ori	r2,r2,8192
  810c0c:	20c6703a 	and	r3,r4,r3
  810c10:	8080030d 	sth	r2,12(r16)
  810c14:	80c01915 	stw	r3,100(r16)
  810c18:	d80d883a 	mov	r6,sp
  810c1c:	800b883a 	mov	r5,r16
  810c20:	8809883a 	mov	r4,r17
  810c24:	080bcdc0 	call	80bcdc <__sfvwrite_r>
  810c28:	dfc00717 	ldw	ra,28(sp)
  810c2c:	dc400617 	ldw	r17,24(sp)
  810c30:	dc000517 	ldw	r16,20(sp)
  810c34:	dec00804 	addi	sp,sp,32
  810c38:	f800283a 	ret
  810c3c:	8809883a 	mov	r4,r17
  810c40:	0807a3c0 	call	807a3c <__sinit>
  810c44:	003feb06 	br	810bf4 <__alt_data_end+0xff810bf4>

00810c48 <fputs>:
  810c48:	00802074 	movhi	r2,129
  810c4c:	108b6504 	addi	r2,r2,11668
  810c50:	280d883a 	mov	r6,r5
  810c54:	200b883a 	mov	r5,r4
  810c58:	11000017 	ldw	r4,0(r2)
  810c5c:	0810bac1 	jmpi	810bac <_fputs_r>

00810c60 <memcmp>:
  810c60:	01c000c4 	movi	r7,3
  810c64:	3980192e 	bgeu	r7,r6,810ccc <memcmp+0x6c>
  810c68:	2144b03a 	or	r2,r4,r5
  810c6c:	11c4703a 	and	r2,r2,r7
  810c70:	10000f26 	beq	r2,zero,810cb0 <memcmp+0x50>
  810c74:	20800003 	ldbu	r2,0(r4)
  810c78:	28c00003 	ldbu	r3,0(r5)
  810c7c:	10c0151e 	bne	r2,r3,810cd4 <memcmp+0x74>
  810c80:	31bfff84 	addi	r6,r6,-2
  810c84:	01ffffc4 	movi	r7,-1
  810c88:	00000406 	br	810c9c <memcmp+0x3c>
  810c8c:	20800003 	ldbu	r2,0(r4)
  810c90:	28c00003 	ldbu	r3,0(r5)
  810c94:	31bfffc4 	addi	r6,r6,-1
  810c98:	10c00e1e 	bne	r2,r3,810cd4 <memcmp+0x74>
  810c9c:	21000044 	addi	r4,r4,1
  810ca0:	29400044 	addi	r5,r5,1
  810ca4:	31fff91e 	bne	r6,r7,810c8c <__alt_data_end+0xff810c8c>
  810ca8:	0005883a 	mov	r2,zero
  810cac:	f800283a 	ret
  810cb0:	20c00017 	ldw	r3,0(r4)
  810cb4:	28800017 	ldw	r2,0(r5)
  810cb8:	18bfee1e 	bne	r3,r2,810c74 <__alt_data_end+0xff810c74>
  810cbc:	31bfff04 	addi	r6,r6,-4
  810cc0:	21000104 	addi	r4,r4,4
  810cc4:	29400104 	addi	r5,r5,4
  810cc8:	39bff936 	bltu	r7,r6,810cb0 <__alt_data_end+0xff810cb0>
  810ccc:	303fe91e 	bne	r6,zero,810c74 <__alt_data_end+0xff810c74>
  810cd0:	003ff506 	br	810ca8 <__alt_data_end+0xff810ca8>
  810cd4:	10c5c83a 	sub	r2,r2,r3
  810cd8:	f800283a 	ret

00810cdc <__register_exitproc>:
  810cdc:	defffa04 	addi	sp,sp,-24
  810ce0:	dc000315 	stw	r16,12(sp)
  810ce4:	04002074 	movhi	r16,129
  810ce8:	840b6404 	addi	r16,r16,11664
  810cec:	80c00017 	ldw	r3,0(r16)
  810cf0:	dc400415 	stw	r17,16(sp)
  810cf4:	dfc00515 	stw	ra,20(sp)
  810cf8:	18805217 	ldw	r2,328(r3)
  810cfc:	2023883a 	mov	r17,r4
  810d00:	10003726 	beq	r2,zero,810de0 <__register_exitproc+0x104>
  810d04:	10c00117 	ldw	r3,4(r2)
  810d08:	010007c4 	movi	r4,31
  810d0c:	20c00e16 	blt	r4,r3,810d48 <__register_exitproc+0x6c>
  810d10:	1a000044 	addi	r8,r3,1
  810d14:	8800221e 	bne	r17,zero,810da0 <__register_exitproc+0xc4>
  810d18:	18c00084 	addi	r3,r3,2
  810d1c:	18c7883a 	add	r3,r3,r3
  810d20:	18c7883a 	add	r3,r3,r3
  810d24:	12000115 	stw	r8,4(r2)
  810d28:	10c7883a 	add	r3,r2,r3
  810d2c:	19400015 	stw	r5,0(r3)
  810d30:	0005883a 	mov	r2,zero
  810d34:	dfc00517 	ldw	ra,20(sp)
  810d38:	dc400417 	ldw	r17,16(sp)
  810d3c:	dc000317 	ldw	r16,12(sp)
  810d40:	dec00604 	addi	sp,sp,24
  810d44:	f800283a 	ret
  810d48:	00800034 	movhi	r2,0
  810d4c:	10800004 	addi	r2,r2,0
  810d50:	10002626 	beq	r2,zero,810dec <__register_exitproc+0x110>
  810d54:	01006404 	movi	r4,400
  810d58:	d9400015 	stw	r5,0(sp)
  810d5c:	d9800115 	stw	r6,4(sp)
  810d60:	d9c00215 	stw	r7,8(sp)
  810d64:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  810d68:	d9400017 	ldw	r5,0(sp)
  810d6c:	d9800117 	ldw	r6,4(sp)
  810d70:	d9c00217 	ldw	r7,8(sp)
  810d74:	10001d26 	beq	r2,zero,810dec <__register_exitproc+0x110>
  810d78:	81000017 	ldw	r4,0(r16)
  810d7c:	10000115 	stw	zero,4(r2)
  810d80:	02000044 	movi	r8,1
  810d84:	22405217 	ldw	r9,328(r4)
  810d88:	0007883a 	mov	r3,zero
  810d8c:	12400015 	stw	r9,0(r2)
  810d90:	20805215 	stw	r2,328(r4)
  810d94:	10006215 	stw	zero,392(r2)
  810d98:	10006315 	stw	zero,396(r2)
  810d9c:	883fde26 	beq	r17,zero,810d18 <__alt_data_end+0xff810d18>
  810da0:	18c9883a 	add	r4,r3,r3
  810da4:	2109883a 	add	r4,r4,r4
  810da8:	1109883a 	add	r4,r2,r4
  810dac:	21802215 	stw	r6,136(r4)
  810db0:	01800044 	movi	r6,1
  810db4:	12406217 	ldw	r9,392(r2)
  810db8:	30cc983a 	sll	r6,r6,r3
  810dbc:	4992b03a 	or	r9,r9,r6
  810dc0:	12406215 	stw	r9,392(r2)
  810dc4:	21c04215 	stw	r7,264(r4)
  810dc8:	01000084 	movi	r4,2
  810dcc:	893fd21e 	bne	r17,r4,810d18 <__alt_data_end+0xff810d18>
  810dd0:	11006317 	ldw	r4,396(r2)
  810dd4:	218cb03a 	or	r6,r4,r6
  810dd8:	11806315 	stw	r6,396(r2)
  810ddc:	003fce06 	br	810d18 <__alt_data_end+0xff810d18>
  810de0:	18805304 	addi	r2,r3,332
  810de4:	18805215 	stw	r2,328(r3)
  810de8:	003fc606 	br	810d04 <__alt_data_end+0xff810d04>
  810dec:	00bfffc4 	movi	r2,-1
  810df0:	003fd006 	br	810d34 <__alt_data_end+0xff810d34>

00810df4 <__call_exitprocs>:
  810df4:	defff504 	addi	sp,sp,-44
  810df8:	df000915 	stw	fp,36(sp)
  810dfc:	dd400615 	stw	r21,24(sp)
  810e00:	dc800315 	stw	r18,12(sp)
  810e04:	dfc00a15 	stw	ra,40(sp)
  810e08:	ddc00815 	stw	r23,32(sp)
  810e0c:	dd800715 	stw	r22,28(sp)
  810e10:	dd000515 	stw	r20,20(sp)
  810e14:	dcc00415 	stw	r19,16(sp)
  810e18:	dc400215 	stw	r17,8(sp)
  810e1c:	dc000115 	stw	r16,4(sp)
  810e20:	d9000015 	stw	r4,0(sp)
  810e24:	2839883a 	mov	fp,r5
  810e28:	04800044 	movi	r18,1
  810e2c:	057fffc4 	movi	r21,-1
  810e30:	00802074 	movhi	r2,129
  810e34:	108b6404 	addi	r2,r2,11664
  810e38:	12000017 	ldw	r8,0(r2)
  810e3c:	45005217 	ldw	r20,328(r8)
  810e40:	44c05204 	addi	r19,r8,328
  810e44:	a0001c26 	beq	r20,zero,810eb8 <__call_exitprocs+0xc4>
  810e48:	a0800117 	ldw	r2,4(r20)
  810e4c:	15ffffc4 	addi	r23,r2,-1
  810e50:	b8000d16 	blt	r23,zero,810e88 <__call_exitprocs+0x94>
  810e54:	14000044 	addi	r16,r2,1
  810e58:	8421883a 	add	r16,r16,r16
  810e5c:	8421883a 	add	r16,r16,r16
  810e60:	84402004 	addi	r17,r16,128
  810e64:	a463883a 	add	r17,r20,r17
  810e68:	a421883a 	add	r16,r20,r16
  810e6c:	e0001e26 	beq	fp,zero,810ee8 <__call_exitprocs+0xf4>
  810e70:	80804017 	ldw	r2,256(r16)
  810e74:	e0801c26 	beq	fp,r2,810ee8 <__call_exitprocs+0xf4>
  810e78:	bdffffc4 	addi	r23,r23,-1
  810e7c:	843fff04 	addi	r16,r16,-4
  810e80:	8c7fff04 	addi	r17,r17,-4
  810e84:	bd7ff91e 	bne	r23,r21,810e6c <__alt_data_end+0xff810e6c>
  810e88:	00800034 	movhi	r2,0
  810e8c:	10800004 	addi	r2,r2,0
  810e90:	10000926 	beq	r2,zero,810eb8 <__call_exitprocs+0xc4>
  810e94:	a0800117 	ldw	r2,4(r20)
  810e98:	1000301e 	bne	r2,zero,810f5c <__call_exitprocs+0x168>
  810e9c:	a0800017 	ldw	r2,0(r20)
  810ea0:	10003226 	beq	r2,zero,810f6c <__call_exitprocs+0x178>
  810ea4:	a009883a 	mov	r4,r20
  810ea8:	98800015 	stw	r2,0(r19)
  810eac:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  810eb0:	9d000017 	ldw	r20,0(r19)
  810eb4:	a03fe41e 	bne	r20,zero,810e48 <__alt_data_end+0xff810e48>
  810eb8:	dfc00a17 	ldw	ra,40(sp)
  810ebc:	df000917 	ldw	fp,36(sp)
  810ec0:	ddc00817 	ldw	r23,32(sp)
  810ec4:	dd800717 	ldw	r22,28(sp)
  810ec8:	dd400617 	ldw	r21,24(sp)
  810ecc:	dd000517 	ldw	r20,20(sp)
  810ed0:	dcc00417 	ldw	r19,16(sp)
  810ed4:	dc800317 	ldw	r18,12(sp)
  810ed8:	dc400217 	ldw	r17,8(sp)
  810edc:	dc000117 	ldw	r16,4(sp)
  810ee0:	dec00b04 	addi	sp,sp,44
  810ee4:	f800283a 	ret
  810ee8:	a0800117 	ldw	r2,4(r20)
  810eec:	80c00017 	ldw	r3,0(r16)
  810ef0:	10bfffc4 	addi	r2,r2,-1
  810ef4:	15c01426 	beq	r2,r23,810f48 <__call_exitprocs+0x154>
  810ef8:	80000015 	stw	zero,0(r16)
  810efc:	183fde26 	beq	r3,zero,810e78 <__alt_data_end+0xff810e78>
  810f00:	95c8983a 	sll	r4,r18,r23
  810f04:	a0806217 	ldw	r2,392(r20)
  810f08:	a5800117 	ldw	r22,4(r20)
  810f0c:	2084703a 	and	r2,r4,r2
  810f10:	10000b26 	beq	r2,zero,810f40 <__call_exitprocs+0x14c>
  810f14:	a0806317 	ldw	r2,396(r20)
  810f18:	2088703a 	and	r4,r4,r2
  810f1c:	20000c1e 	bne	r4,zero,810f50 <__call_exitprocs+0x15c>
  810f20:	89400017 	ldw	r5,0(r17)
  810f24:	d9000017 	ldw	r4,0(sp)
  810f28:	183ee83a 	callr	r3
  810f2c:	a0800117 	ldw	r2,4(r20)
  810f30:	15bfbf1e 	bne	r2,r22,810e30 <__alt_data_end+0xff810e30>
  810f34:	98800017 	ldw	r2,0(r19)
  810f38:	153fcf26 	beq	r2,r20,810e78 <__alt_data_end+0xff810e78>
  810f3c:	003fbc06 	br	810e30 <__alt_data_end+0xff810e30>
  810f40:	183ee83a 	callr	r3
  810f44:	003ff906 	br	810f2c <__alt_data_end+0xff810f2c>
  810f48:	a5c00115 	stw	r23,4(r20)
  810f4c:	003feb06 	br	810efc <__alt_data_end+0xff810efc>
  810f50:	89000017 	ldw	r4,0(r17)
  810f54:	183ee83a 	callr	r3
  810f58:	003ff406 	br	810f2c <__alt_data_end+0xff810f2c>
  810f5c:	a0800017 	ldw	r2,0(r20)
  810f60:	a027883a 	mov	r19,r20
  810f64:	1029883a 	mov	r20,r2
  810f68:	003fb606 	br	810e44 <__alt_data_end+0xff810e44>
  810f6c:	0005883a 	mov	r2,zero
  810f70:	003ffb06 	br	810f60 <__alt_data_end+0xff810f60>

00810f74 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  810f74:	defffd04 	addi	sp,sp,-12
  810f78:	df000215 	stw	fp,8(sp)
  810f7c:	df000204 	addi	fp,sp,8
  810f80:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  810f84:	0001883a 	nop
  810f88:	e0bfff17 	ldw	r2,-4(fp)
  810f8c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  810f90:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  810f94:	10000226 	beq	r2,zero,810fa0 <_exit+0x2c>
    ALT_SIM_FAIL();
  810f98:	002af070 	cmpltui	zero,zero,43969
  810f9c:	00000106 	br	810fa4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  810fa0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  810fa4:	003fff06 	br	810fa4 <__alt_data_end+0xff810fa4>
